

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 05:59:38 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F45K22 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     _ANSELA	set	3896
    63  0000                     _ANSELE	set	3900
    64  0000                     _ANSELB	set	3897
    65  0000                     _ANSELC	set	3898
    66  0000                     _ANSELD	set	3899
    67  0000                     _INTCONbits	set	4082
    68  0000                     _INTCON2bits	set	4081
    69  0000                     _WPUB	set	3937
    70  0000                     _TRISD	set	3989
    71  0000                     _TRISC	set	3988
    72  0000                     _TRISB	set	3987
    73  0000                     _TRISA	set	3986
    74  0000                     _TRISE	set	3990
    75  0000                     _LATC	set	3979
    76  0000                     _LATB	set	3978
    77  0000                     _LATA	set	3977
    78  0000                     _LATD	set	3980
    79  0000                     _LATE	set	3981
    80  0000                     _OSCTUNE	set	3995
    81  0000                     _OSCCON2	set	4050
    82  0000                     _OSCCON	set	4051
    83  0000                     _LE1	set	31849
    84  0000                     _LA3	set	31819
    85  0000                     _LA2	set	31818
    86  0000                     _LE0	set	31848
    87  0000                     _LA1	set	31817
    88  0000                     _LA0	set	31816
    89                           
    90                           	psect	smallconst
    91  000600                     __psmallconst:
    92                           	opt callstack 0
    93  000600  00                 	db	0
    94  000601                     STR_6:
    95  000601  46                 	db	70	;'F'
    96  000602  30                 	db	48	;'0'
    97  000603  52                 	db	82	;'R'
    98  000604  57                 	db	87	;'W'
    99  000605  41                 	db	65	;'A'
   100  000606  52                 	db	82	;'R'
   101  000607  44                 	db	68	;'D'
   102  000608  00                 	db	0
   103  000609                     STR_1:
   104  000609  46                 	db	70	;'F'
   105  00060A  4F                 	db	79	;'O'
   106  00060B  52                 	db	82	;'R'
   107  00060C  57                 	db	87	;'W'
   108  00060D  41                 	db	65	;'A'
   109  00060E  52                 	db	82	;'R'
   110  00060F  44                 	db	68	;'D'
   111  000610  00                 	db	0
   112  000611                     STR_4:
   113  000611  52                 	db	82	;'R'
   114  000612  49                 	db	73	;'I'
   115  000613  47                 	db	71	;'G'
   116  000614  48                 	db	72	;'H'
   117  000615  54                 	db	84	;'T'
   118  000616  00                 	db	0
   119  000617                     STR_2:
   120  000617  42                 	db	66	;'B'
   121  000618  41                 	db	65	;'A'
   122  000619  43                 	db	67	;'C'
   123  00061A  4B                 	db	75	;'K'
   124  00061B  00                 	db	0
   125  00061C                     STR_5:
   126  00061C  53                 	db	83	;'S'
   127  00061D  54                 	db	84	;'T'
   128  00061E  4F                 	db	79	;'O'
   129  00061F  50                 	db	80	;'P'
   130  000620  00                 	db	0
   131  000621                     STR_3:
   132  000621  4C                 	db	76	;'L'
   133  000622  45                 	db	69	;'E'
   134  000623  46                 	db	70	;'F'
   135  000624  54                 	db	84	;'T'
   136  000625  00                 	db	0
   137  0000                     
   138                           ; #config settings
   139  000626  00                 	db	0	; dummy byte at the end
   140  0000                     
   141                           	psect	cinit
   142  00089A                     __pcinit:
   143                           	opt callstack 0
   144  00089A                     start_initialization:
   145                           	opt callstack 0
   146  00089A                     __initialization:
   147                           	opt callstack 0
   148  00089A                     end_of_initialization:
   149                           	opt callstack 0
   150  00089A                     __end_of__initialization:
   151                           	opt callstack 0
   152  00089A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   153  00089C  6EF8               	movwf	tblptru,c
   154  00089E  0E06               	movlw	high __Lsmallconst
   155  0008A0  6EF7               	movwf	tblptrh,c
   156  0008A2  0100               	movlb	0
   157  0008A4  EF86  F003         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	cstackCOMRAM
   160  000001                     __pcstackCOMRAM:
   161                           	opt callstack 0
   162  000001                     ?_strcmp:
   163                           	opt callstack 0
   164  000001                     strcmp@l:
   165                           	opt callstack 0
   166                           
   167                           ; 2 bytes @ 0x0
   168  000001                     	ds	2
   169  000003                     strcmp@r:
   170                           	opt callstack 0
   171                           
   172                           ; 2 bytes @ 0x2
   173  000003                     	ds	2
   174  000005                     ??_strcmp:
   175                           
   176                           ; 1 bytes @ 0x4
   177  000005                     	ds	1
   178  000006                     Chair_Position@Command:
   179                           	opt callstack 0
   180                           
   181                           ; 2 bytes @ 0x5
   182  000006                     	ds	2
   183  000008                     ??_main:
   184                           
   185                           ; 1 bytes @ 0x7
   186  000008                     	ds	2
   187                           
   188 ;;
   189 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   190 ;;
   191 ;; *************** function _main *****************
   192 ;; Defined at:
   193 ;;		line 49 in file "main.c"
   194 ;; Parameters:    Size  Location     Type
   195 ;;		None
   196 ;; Auto vars:     Size  Location     Type
   197 ;;		None
   198 ;; Return value:  Size  Location     Type
   199 ;;                  1    wreg      void 
   200 ;; Registers used:
   201 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   202 ;; Tracked objects:
   203 ;;		On entry : 0/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   207 ;;      Params:         0       0       0       0       0       0       0
   208 ;;      Locals:         0       0       0       0       0       0       0
   209 ;;      Temps:          2       0       0       0       0       0       0
   210 ;;      Totals:         2       0       0       0       0       0       0
   211 ;;Total ram usage:        2 bytes
   212 ;; Hardware stack levels required when called:    3
   213 ;; This function calls:
   214 ;;		_Chair_Position
   215 ;;		_SYSTEM_Initialize
   216 ;; This function is called by:
   217 ;;		Startup code after reset
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           	psect	text0
   222  00070C                     __ptext0:
   223                           	opt callstack 0
   224  00070C                     _main:
   225                           	opt callstack 28
   226  00070C                     
   227                           ;main.c: 52:     SYSTEM_Initialize();
   228  00070C  EC5B  F004         	call	_SYSTEM_Initialize	;wreg free
   229  000710                     l989:
   230                           
   231                           ;main.c: 73:     {;main.c: 75:         Chair_Position("F0RWARD");
   232  000710  0E01               	movlw	low STR_6
   233  000712  6E06               	movwf	Chair_Position@Command^0,c
   234  000714  0E06               	movlw	high STR_6
   235  000716  6E07               	movwf	(Chair_Position@Command+1)^0,c
   236  000718  EC14  F003         	call	_Chair_Position	;wreg free
   237  00071C                     
   238                           ;main.c: 76:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   239  00071C  0E02               	movlw	2
   240  00071E  6E09               	movwf	(??_main+1)^0,c
   241  000720  0E45               	movlw	69
   242  000722  6E08               	movwf	??_main^0,c
   243  000724  0EAA               	movlw	170
   244  000726                     u157:
   245  000726  2EE8               	decfsz	wreg,f,c
   246  000728  D7FE               	bra	u157
   247  00072A  2E08               	decfsz	??_main^0,f,c
   248  00072C  D7FC               	bra	u157
   249  00072E  2E09               	decfsz	(??_main+1)^0,f,c
   250  000730  D7FA               	bra	u157
   251  000732                     
   252                           ;main.c: 77:         Chair_Position("STOP");
   253  000732  0E1C               	movlw	low STR_5
   254  000734  6E06               	movwf	Chair_Position@Command^0,c
   255  000736  0E06               	movlw	high STR_5
   256  000738  6E07               	movwf	(Chair_Position@Command+1)^0,c
   257  00073A  EC14  F003         	call	_Chair_Position	;wreg free
   258  00073E                     
   259                           ;main.c: 78:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   260  00073E  0E02               	movlw	2
   261  000740  6E09               	movwf	(??_main+1)^0,c
   262  000742  0E45               	movlw	69
   263  000744  6E08               	movwf	??_main^0,c
   264  000746  0EAA               	movlw	170
   265  000748                     u167:
   266  000748  2EE8               	decfsz	wreg,f,c
   267  00074A  D7FE               	bra	u167
   268  00074C  2E08               	decfsz	??_main^0,f,c
   269  00074E  D7FC               	bra	u167
   270  000750  2E09               	decfsz	(??_main+1)^0,f,c
   271  000752  D7FA               	bra	u167
   272  000754                     
   273                           ;main.c: 79:         Chair_Position("BACK");
   274  000754  0E17               	movlw	low STR_2
   275  000756  6E06               	movwf	Chair_Position@Command^0,c
   276  000758  0E06               	movlw	high STR_2
   277  00075A  6E07               	movwf	(Chair_Position@Command+1)^0,c
   278  00075C  EC14  F003         	call	_Chair_Position	;wreg free
   279  000760                     
   280                           ;main.c: 80:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   281  000760  0E02               	movlw	2
   282  000762  6E09               	movwf	(??_main+1)^0,c
   283  000764  0E45               	movlw	69
   284  000766  6E08               	movwf	??_main^0,c
   285  000768  0EAA               	movlw	170
   286  00076A                     u177:
   287  00076A  2EE8               	decfsz	wreg,f,c
   288  00076C  D7FE               	bra	u177
   289  00076E  2E08               	decfsz	??_main^0,f,c
   290  000770  D7FC               	bra	u177
   291  000772  2E09               	decfsz	(??_main+1)^0,f,c
   292  000774  D7FA               	bra	u177
   293  000776                     
   294                           ;main.c: 81:         Chair_Position("STOP");
   295  000776  0E1C               	movlw	low STR_5
   296  000778  6E06               	movwf	Chair_Position@Command^0,c
   297  00077A  0E06               	movlw	high STR_5
   298  00077C  6E07               	movwf	(Chair_Position@Command+1)^0,c
   299  00077E  EC14  F003         	call	_Chair_Position	;wreg free
   300  000782                     
   301                           ;main.c: 82:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   302  000782  0E02               	movlw	2
   303  000784  6E09               	movwf	(??_main+1)^0,c
   304  000786  0E45               	movlw	69
   305  000788  6E08               	movwf	??_main^0,c
   306  00078A  0EAA               	movlw	170
   307  00078C                     u187:
   308  00078C  2EE8               	decfsz	wreg,f,c
   309  00078E  D7FE               	bra	u187
   310  000790  2E08               	decfsz	??_main^0,f,c
   311  000792  D7FC               	bra	u187
   312  000794  2E09               	decfsz	(??_main+1)^0,f,c
   313  000796  D7FA               	bra	u187
   314  000798                     
   315                           ;main.c: 83:         Chair_Position("LEFT");
   316  000798  0E21               	movlw	low STR_3
   317  00079A  6E06               	movwf	Chair_Position@Command^0,c
   318  00079C  0E06               	movlw	high STR_3
   319  00079E  6E07               	movwf	(Chair_Position@Command+1)^0,c
   320  0007A0  EC14  F003         	call	_Chair_Position	;wreg free
   321  0007A4                     
   322                           ;main.c: 84:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   323  0007A4  0E02               	movlw	2
   324  0007A6  6E09               	movwf	(??_main+1)^0,c
   325  0007A8  0E45               	movlw	69
   326  0007AA  6E08               	movwf	??_main^0,c
   327  0007AC  0EAA               	movlw	170
   328  0007AE                     u197:
   329  0007AE  2EE8               	decfsz	wreg,f,c
   330  0007B0  D7FE               	bra	u197
   331  0007B2  2E08               	decfsz	??_main^0,f,c
   332  0007B4  D7FC               	bra	u197
   333  0007B6  2E09               	decfsz	(??_main+1)^0,f,c
   334  0007B8  D7FA               	bra	u197
   335  0007BA                     
   336                           ;main.c: 85:         Chair_Position("RIGHT");
   337  0007BA  0E11               	movlw	low STR_4
   338  0007BC  6E06               	movwf	Chair_Position@Command^0,c
   339  0007BE  0E06               	movlw	high STR_4
   340  0007C0  6E07               	movwf	(Chair_Position@Command+1)^0,c
   341  0007C2  EC14  F003         	call	_Chair_Position	;wreg free
   342  0007C6                     
   343                           ;main.c: 86:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   344  0007C6  0E02               	movlw	2
   345  0007C8  6E09               	movwf	(??_main+1)^0,c
   346  0007CA  0E45               	movlw	69
   347  0007CC  6E08               	movwf	??_main^0,c
   348  0007CE  0EAA               	movlw	170
   349  0007D0                     u207:
   350  0007D0  2EE8               	decfsz	wreg,f,c
   351  0007D2  D7FE               	bra	u207
   352  0007D4  2E08               	decfsz	??_main^0,f,c
   353  0007D6  D7FC               	bra	u207
   354  0007D8  2E09               	decfsz	(??_main+1)^0,f,c
   355  0007DA  D7FA               	bra	u207
   356  0007DC  EF88  F003         	goto	l989
   357  0007E0  EF00  F000         	goto	start
   358  0007E4                     __end_of_main:
   359                           	opt callstack 0
   360                           
   361 ;; *************** function _SYSTEM_Initialize *****************
   362 ;; Defined at:
   363 ;;		line 50 in file "mcc_generated_files/mcc.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, status,2, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   377 ;;      Params:         0       0       0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0       0       0
   380 ;;      Totals:         0       0       0       0       0       0       0
   381 ;;Total ram usage:        0 bytes
   382 ;; Hardware stack levels used:    1
   383 ;; Hardware stack levels required when called:    1
   384 ;; This function calls:
   385 ;;		_OSCILLATOR_Initialize
   386 ;;		_PIN_MANAGER_Initialize
   387 ;; This function is called by:
   388 ;;		_main
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text1
   393  0008B6                     __ptext1:
   394                           	opt callstack 0
   395  0008B6                     _SYSTEM_Initialize:
   396                           	opt callstack 29
   397  0008B6                     
   398                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   399  0008B6  EC2E  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   400                           
   401                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   402  0008BA  EC54  F004         	call	_OSCILLATOR_Initialize	;wreg free
   403  0008BE  0012               	return		;funcret
   404  0008C0                     __end_of_SYSTEM_Initialize:
   405                           	opt callstack 0
   406                           
   407 ;; *************** function _PIN_MANAGER_Initialize *****************
   408 ;; Defined at:
   409 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, status,2
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   423 ;;      Params:         0       0       0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; This function calls:
   430 ;;		Nothing
   431 ;; This function is called by:
   432 ;;		_SYSTEM_Initialize
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text2
   437  00085C                     __ptext2:
   438                           	opt callstack 0
   439  00085C                     _PIN_MANAGER_Initialize:
   440                           	opt callstack 29
   441  00085C                     
   442                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   443  00085C  0E00               	movlw	0
   444  00085E  6E8D               	movwf	141,c	;volatile
   445                           
   446                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   447  000860  0E00               	movlw	0
   448  000862  6E8C               	movwf	140,c	;volatile
   449                           
   450                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   451  000864  0E00               	movlw	0
   452  000866  6E89               	movwf	137,c	;volatile
   453                           
   454                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   455  000868  0E00               	movlw	0
   456  00086A  6E8A               	movwf	138,c	;volatile
   457                           
   458                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   459  00086C  0E00               	movlw	0
   460  00086E  6E8B               	movwf	139,c	;volatile
   461                           
   462                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x04;
   463  000870  0E04               	movlw	4
   464  000872  6E96               	movwf	150,c	;volatile
   465                           
   466                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xF0;
   467  000874  0EF0               	movlw	240
   468  000876  6E92               	movwf	146,c	;volatile
   469  000878                     
   470                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   471  000878  6893               	setf	147,c	;volatile
   472  00087A                     
   473                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
   474  00087A  6894               	setf	148,c	;volatile
   475  00087C                     
   476                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   477  00087C  6895               	setf	149,c	;volatile
   478  00087E                     
   479                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
   480  00087E  010F               	movlb	15	; () banked
   481  000880  693B               	setf	59,b	;volatile
   482                           
   483                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFC;
   484  000882  0EFC               	movlw	252
   485  000884  6F3A               	movwf	58,b	;volatile
   486                           
   487                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
   488  000886  0E3F               	movlw	63
   489  000888  6F39               	movwf	57,b	;volatile
   490                           
   491                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
   492  00088A  0E07               	movlw	7
   493  00088C  6F3C               	movwf	60,b	;volatile
   494                           
   495                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
   496  00088E  0E2F               	movlw	47
   497  000890  6F38               	movwf	56,b	;volatile
   498                           
   499                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
   500  000892  0E00               	movlw	0
   501  000894  6E61               	movwf	97,c	;volatile
   502  000896                     
   503                           ; BSR set to: 15
   504                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
   505  000896  8EF1               	bsf	241,7,c	;volatile
   506  000898                     
   507                           ; BSR set to: 15
   508  000898  0012               	return		;funcret
   509  00089A                     __end_of_PIN_MANAGER_Initialize:
   510                           	opt callstack 0
   511                           
   512 ;; *************** function _OSCILLATOR_Initialize *****************
   513 ;; Defined at:
   514 ;;		line 57 in file "mcc_generated_files/mcc.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   528 ;;      Params:         0       0       0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0
   531 ;;      Totals:         0       0       0       0       0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels used:    1
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_SYSTEM_Initialize
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text3
   542  0008A8                     __ptext3:
   543                           	opt callstack 0
   544  0008A8                     _OSCILLATOR_Initialize:
   545                           	opt callstack 29
   546  0008A8                     
   547                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x30;
   548  0008A8  0E30               	movlw	48
   549  0008AA  6ED3               	movwf	211,c	;volatile
   550                           
   551                           ;mcc_generated_files/mcc.c: 62:     OSCCON2 = 0x04;
   552  0008AC  0E04               	movlw	4
   553  0008AE  6ED2               	movwf	210,c	;volatile
   554                           
   555                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
   556  0008B0  0E00               	movlw	0
   557  0008B2  6E9B               	movwf	155,c	;volatile
   558  0008B4  0012               	return		;funcret
   559  0008B6                     __end_of_OSCILLATOR_Initialize:
   560                           	opt callstack 0
   561                           
   562 ;; *************** function _Chair_Position *****************
   563 ;; Defined at:
   564 ;;		line 88 in file "./Motors.h"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  Command         2    5[COMRAM] PTR unsigned char 
   567 ;;		 -> STR_11(6), STR_10(5), STR_9(5), STR_8(5), 
   568 ;;		 -> STR_7(5), STR_6(8), 
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  2    5[COMRAM] int 
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   580 ;;      Params:         2       0       0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0       0       0
   583 ;;      Totals:         2       0       0       0       0       0       0
   584 ;;Total ram usage:        2 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    2
   587 ;; This function calls:
   588 ;;		_Move_Back
   589 ;;		_Move_Forward
   590 ;;		_Move_Right
   591 ;;		_Move_left
   592 ;;		_Stop
   593 ;;		_strcmp
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text4
   600  000628                     __ptext4:
   601                           	opt callstack 0
   602  000628                     _Chair_Position:
   603                           	opt callstack 28
   604  000628                     
   605                           ;./Motors.h: 88:     int Chair_Position(char Command[] );./Motors.h: 89:     {;./Motors.
      +                          h: 90:         if(strcmp(Command,"FORWARD")==0)
   606  000628  C006  F001         	movff	Chair_Position@Command,strcmp@l
   607  00062C  C007  F002         	movff	Chair_Position@Command+1,strcmp@l+1
   608  000630  0E09               	movlw	low STR_1
   609  000632  6E03               	movwf	strcmp@r^0,c
   610  000634  0E06               	movlw	high STR_1
   611  000636  6E04               	movwf	(strcmp@r+1)^0,c
   612  000638  ECF2  F003         	call	_strcmp	;wreg free
   613  00063C  5001               	movf	?_strcmp^0,w,c
   614  00063E  1002               	iorwf	(?_strcmp+1)^0,w,c
   615  000640  A4D8               	btfss	status,2,c
   616  000642  EF25  F003         	goto	u101
   617  000646  EF27  F003         	goto	u100
   618  00064A                     u101:
   619  00064A  EF2B  F003         	goto	l955
   620  00064E                     u100:
   621  00064E                     
   622                           ;./Motors.h: 91:         {;./Motors.h: 92:             Move_Forward();
   623  00064E  EC6F  F004         	call	_Move_Forward	;wreg free
   624  000652  EF85  F003         	goto	l55
   625  000656                     l955:
   626  000656  C006  F001         	movff	Chair_Position@Command,strcmp@l
   627  00065A  C007  F002         	movff	Chair_Position@Command+1,strcmp@l+1
   628  00065E  0E17               	movlw	low STR_2
   629  000660  6E03               	movwf	strcmp@r^0,c
   630  000662  0E06               	movlw	high STR_2
   631  000664  6E04               	movwf	(strcmp@r+1)^0,c
   632  000666  ECF2  F003         	call	_strcmp	;wreg free
   633  00066A  5001               	movf	?_strcmp^0,w,c
   634  00066C  1002               	iorwf	(?_strcmp+1)^0,w,c
   635  00066E  A4D8               	btfss	status,2,c
   636  000670  EF3C  F003         	goto	u111
   637  000674  EF3E  F003         	goto	u110
   638  000678                     u111:
   639  000678  EF42  F003         	goto	l963
   640  00067C                     u110:
   641  00067C                     
   642                           ;./Motors.h: 97:         {;./Motors.h: 98:              Move_Back();
   643  00067C  EC74  F004         	call	_Move_Back	;wreg free
   644  000680  EF85  F003         	goto	l55
   645  000684                     l963:
   646  000684  C006  F001         	movff	Chair_Position@Command,strcmp@l
   647  000688  C007  F002         	movff	Chair_Position@Command+1,strcmp@l+1
   648  00068C  0E21               	movlw	low STR_3
   649  00068E  6E03               	movwf	strcmp@r^0,c
   650  000690  0E06               	movlw	high STR_3
   651  000692  6E04               	movwf	(strcmp@r+1)^0,c
   652  000694  ECF2  F003         	call	_strcmp	;wreg free
   653  000698  5001               	movf	?_strcmp^0,w,c
   654  00069A  1002               	iorwf	(?_strcmp+1)^0,w,c
   655  00069C  A4D8               	btfss	status,2,c
   656  00069E  EF53  F003         	goto	u121
   657  0006A2  EF55  F003         	goto	u120
   658  0006A6                     u121:
   659  0006A6  EF59  F003         	goto	l971
   660  0006AA                     u120:
   661  0006AA                     
   662                           ;./Motors.h: 103:         {;./Motors.h: 104:             Move_left();
   663  0006AA  EC65  F004         	call	_Move_left	;wreg free
   664  0006AE  EF85  F003         	goto	l55
   665  0006B2                     l971:
   666  0006B2  C006  F001         	movff	Chair_Position@Command,strcmp@l
   667  0006B6  C007  F002         	movff	Chair_Position@Command+1,strcmp@l+1
   668  0006BA  0E11               	movlw	low STR_4
   669  0006BC  6E03               	movwf	strcmp@r^0,c
   670  0006BE  0E06               	movlw	high STR_4
   671  0006C0  6E04               	movwf	(strcmp@r+1)^0,c
   672  0006C2  ECF2  F003         	call	_strcmp	;wreg free
   673  0006C6  5001               	movf	?_strcmp^0,w,c
   674  0006C8  1002               	iorwf	(?_strcmp+1)^0,w,c
   675  0006CA  A4D8               	btfss	status,2,c
   676  0006CC  EF6A  F003         	goto	u131
   677  0006D0  EF6C  F003         	goto	u130
   678  0006D4                     u131:
   679  0006D4  EF70  F003         	goto	l979
   680  0006D8                     u130:
   681  0006D8                     
   682                           ;./Motors.h: 108:         {;./Motors.h: 109:             Move_Right();
   683  0006D8  EC6A  F004         	call	_Move_Right	;wreg free
   684  0006DC  EF85  F003         	goto	l55
   685  0006E0                     l979:
   686  0006E0  C006  F001         	movff	Chair_Position@Command,strcmp@l
   687  0006E4  C007  F002         	movff	Chair_Position@Command+1,strcmp@l+1
   688  0006E8  0E1C               	movlw	low STR_5
   689  0006EA  6E03               	movwf	strcmp@r^0,c
   690  0006EC  0E06               	movlw	high STR_5
   691  0006EE  6E04               	movwf	(strcmp@r+1)^0,c
   692  0006F0  ECF2  F003         	call	_strcmp	;wreg free
   693  0006F4  5001               	movf	?_strcmp^0,w,c
   694  0006F6  1002               	iorwf	(?_strcmp+1)^0,w,c
   695  0006F8  A4D8               	btfss	status,2,c
   696  0006FA  EF81  F003         	goto	u141
   697  0006FE  EF83  F003         	goto	u140
   698  000702                     u141:
   699  000702  EF85  F003         	goto	l55
   700  000706                     u140:
   701  000706                     
   702                           ;./Motors.h: 114:         {;./Motors.h: 115:             Stop();
   703  000706  EC60  F004         	call	_Stop	;wreg free
   704  00070A                     l55:
   705  00070A  0012               	return		;funcret
   706  00070C                     __end_of_Chair_Position:
   707                           	opt callstack 0
   708                           
   709 ;; *************** function _strcmp *****************
   710 ;; Defined at:
   711 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  l               2    0[COMRAM] PTR const unsigned char 
   714 ;;		 -> STR_11(6), STR_10(5), STR_9(5), STR_8(5), 
   715 ;;		 -> STR_7(5), STR_6(8), 
   716 ;;  r               2    2[COMRAM] PTR const unsigned char 
   717 ;;		 -> STR_5(5), STR_4(6), STR_3(5), STR_2(5), 
   718 ;;		 -> STR_1(8), 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;                  2    0[COMRAM] int 
   723 ;; Registers used:
   724 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   730 ;;      Params:         4       0       0       0       0       0       0
   731 ;;      Locals:         0       0       0       0       0       0       0
   732 ;;      Temps:          1       0       0       0       0       0       0
   733 ;;      Totals:         5       0       0       0       0       0       0
   734 ;;Total ram usage:        5 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_Chair_Position
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text5
   744  0007E4                     __ptext5:
   745                           	opt callstack 0
   746  0007E4                     _strcmp:
   747                           	opt callstack 29
   748  0007E4  EFF8  F003         	goto	l939
   749  0007E8                     l937:
   750  0007E8  4A01               	infsnz	strcmp@l^0,f,c
   751  0007EA  2A02               	incf	(strcmp@l+1)^0,f,c
   752  0007EC  4A03               	infsnz	strcmp@r^0,f,c
   753  0007EE  2A04               	incf	(strcmp@r+1)^0,f,c
   754  0007F0                     l939:
   755  0007F0  C001  FFF6         	movff	strcmp@l,tblptrl
   756  0007F4  C002  FFF7         	movff	strcmp@l+1,tblptrh
   757  0007F8                     	if	0	;tblptru may be non-zero
   758  0007F8                     	endif
   759  0007F8                     	if	0	;tblptru may be non-zero
   760  0007F8                     	endif
   761  0007F8  0008               	tblrd		*
   762  0007FA  CFF5 F005          	movff	tablat,??_strcmp
   763  0007FE  C003  FFF6         	movff	strcmp@r,tblptrl
   764  000802  C004  FFF7         	movff	strcmp@r+1,tblptrh
   765  000806                     	if	0	;tblptru may be non-zero
   766  000806                     	endif
   767  000806                     	if	0	;tblptru may be non-zero
   768  000806                     	endif
   769  000806  0008               	tblrd		*
   770  000808  50F5               	movf	tablat,w,c
   771  00080A  1805               	xorwf	??_strcmp^0,w,c
   772  00080C  A4D8               	btfss	status,2,c
   773  00080E  EF0B  F004         	goto	u81
   774  000812  EF0D  F004         	goto	u80
   775  000816                     u81:
   776  000816  EF1B  F004         	goto	l943
   777  00081A                     u80:
   778  00081A  C001  FFF6         	movff	strcmp@l,tblptrl
   779  00081E  C002  FFF7         	movff	strcmp@l+1,tblptrh
   780  000822                     	if	0	;tblptru may be non-zero
   781  000822                     	endif
   782  000822                     	if	0	;tblptru may be non-zero
   783  000822                     	endif
   784  000822  0008               	tblrd		*
   785  000824  50F5               	movf	tablat,w,c
   786  000826  0900               	iorlw	0
   787  000828  A4D8               	btfss	status,2,c
   788  00082A  EF19  F004         	goto	u91
   789  00082E  EF1B  F004         	goto	u90
   790  000832                     u91:
   791  000832  EFF4  F003         	goto	l937
   792  000836                     u90:
   793  000836                     l943:
   794  000836  C001  FFF6         	movff	strcmp@l,tblptrl
   795  00083A  C002  FFF7         	movff	strcmp@l+1,tblptrh
   796  00083E                     	if	0	;tblptru may be non-zero
   797  00083E                     	endif
   798  00083E                     	if	0	;tblptru may be non-zero
   799  00083E                     	endif
   800  00083E  0008               	tblrd		*
   801  000840  CFF5 F005          	movff	tablat,??_strcmp
   802  000844  C003  FFF6         	movff	strcmp@r,tblptrl
   803  000848  C004  FFF7         	movff	strcmp@r+1,tblptrh
   804  00084C                     	if	0	;tblptru may be non-zero
   805  00084C                     	endif
   806  00084C                     	if	0	;tblptru may be non-zero
   807  00084C                     	endif
   808  00084C  0008               	tblrd		*
   809  00084E  50F5               	movf	tablat,w,c
   810  000850  5C05               	subwf	??_strcmp^0,w,c
   811  000852  6E01               	movwf	?_strcmp^0,c
   812  000854  6A02               	clrf	(?_strcmp+1)^0,c
   813  000856  A0D8               	btfss	status,0,c
   814  000858  0602               	decf	(?_strcmp+1)^0,f,c
   815  00085A  0012               	return		;funcret
   816  00085C                     __end_of_strcmp:
   817                           	opt callstack 0
   818                           
   819 ;; *************** function _Stop *****************
   820 ;; Defined at:
   821 ;;		line 72 in file "./Motors.h"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   835 ;;      Params:         0       0       0       0       0       0       0
   836 ;;      Locals:         0       0       0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0       0       0
   838 ;;      Totals:         0       0       0       0       0       0       0
   839 ;;Total ram usage:        0 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; Hardware stack levels required when called:    1
   842 ;; This function calls:
   843 ;;		_Leftwheel_Stop
   844 ;;		_Rightwheel_Stop
   845 ;; This function is called by:
   846 ;;		_Chair_Position
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text6
   851  0008C0                     __ptext6:
   852                           	opt callstack 0
   853  0008C0                     _Stop:
   854                           	opt callstack 28
   855  0008C0                     
   856                           ;./Motors.h: 73:           Leftwheel_Stop();
   857  0008C0  EC8B  F004         	call	_Leftwheel_Stop	;wreg free
   858                           
   859                           ;./Motors.h: 74:           Rightwheel_Stop();
   860  0008C4  EC89  F004         	call	_Rightwheel_Stop	;wreg free
   861  0008C8  0012               	return		;funcret
   862  0008CA                     __end_of_Stop:
   863                           	opt callstack 0
   864                           
   865 ;; *************** function _Move_left *****************
   866 ;; Defined at:
   867 ;;		line 62 in file "./Motors.h"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   881 ;;      Params:         0       0       0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0
   884 ;;      Totals:         0       0       0       0       0       0       0
   885 ;;Total ram usage:        0 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    1
   888 ;; This function calls:
   889 ;;		_Leftwheel_Forward
   890 ;;		_Rightwheel_Stop
   891 ;; This function is called by:
   892 ;;		_Chair_Position
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text7
   897  0008CA                     __ptext7:
   898                           	opt callstack 0
   899  0008CA                     _Move_left:
   900                           	opt callstack 28
   901  0008CA                     
   902                           ;./Motors.h: 63:         Leftwheel_Forward();
   903  0008CA  EC7D  F004         	call	_Leftwheel_Forward	;wreg free
   904                           
   905                           ;./Motors.h: 64:         Rightwheel_Stop();
   906  0008CE  EC89  F004         	call	_Rightwheel_Stop	;wreg free
   907  0008D2  0012               	return		;funcret
   908  0008D4                     __end_of_Move_left:
   909                           	opt callstack 0
   910                           
   911 ;; *************** function _Rightwheel_Stop *****************
   912 ;; Defined at:
   913 ;;		line 47 in file "./Motors.h"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;		None
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		None
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   927 ;;      Params:         0       0       0       0       0       0       0
   928 ;;      Locals:         0       0       0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0       0       0
   930 ;;      Totals:         0       0       0       0       0       0       0
   931 ;;Total ram usage:        0 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_Move_left
   937 ;;		_Stop
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text8
   942  000912                     __ptext8:
   943                           	opt callstack 0
   944  000912                     _Rightwheel_Stop:
   945                           	opt callstack 28
   946  000912                     
   947                           ;./Motors.h: 48:         LE1=0;
   948  000912  928D               	bcf	3981,1,c	;volatile
   949  000914  0012               	return		;funcret
   950  000916                     __end_of_Rightwheel_Stop:
   951                           	opt callstack 0
   952                           
   953 ;; *************** function _Move_Right *****************
   954 ;; Defined at:
   955 ;;		line 67 in file "./Motors.h"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   969 ;;      Params:         0       0       0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0
   972 ;;      Totals:         0       0       0       0       0       0       0
   973 ;;Total ram usage:        0 bytes
   974 ;; Hardware stack levels used:    1
   975 ;; Hardware stack levels required when called:    1
   976 ;; This function calls:
   977 ;;		_Leftwheel_Stop
   978 ;;		_Rightwheel_Forward
   979 ;; This function is called by:
   980 ;;		_Chair_Position
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text9
   985  0008D4                     __ptext9:
   986                           	opt callstack 0
   987  0008D4                     _Move_Right:
   988                           	opt callstack 28
   989  0008D4                     
   990                           ;./Motors.h: 68:         Leftwheel_Stop();
   991  0008D4  EC8B  F004         	call	_Leftwheel_Stop	;wreg free
   992                           
   993                           ;./Motors.h: 69:         Rightwheel_Forward();
   994  0008D8  EC79  F004         	call	_Rightwheel_Forward	;wreg free
   995  0008DC  0012               	return		;funcret
   996  0008DE                     __end_of_Move_Right:
   997                           	opt callstack 0
   998                           
   999 ;; *************** function _Leftwheel_Stop *****************
  1000 ;; Defined at:
  1001 ;;		line 43 in file "./Motors.h"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		None
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1015 ;;      Params:         0       0       0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0       0       0
  1018 ;;      Totals:         0       0       0       0       0       0       0
  1019 ;;Total ram usage:        0 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_Move_Right
  1025 ;;		_Stop
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text10
  1030  000916                     __ptext10:
  1031                           	opt callstack 0
  1032  000916                     _Leftwheel_Stop:
  1033                           	opt callstack 28
  1034  000916                     
  1035                           ;./Motors.h: 44:         LE0=0;
  1036  000916  908D               	bcf	3981,0,c	;volatile
  1037  000918  0012               	return		;funcret
  1038  00091A                     __end_of_Leftwheel_Stop:
  1039                           	opt callstack 0
  1040                           
  1041 ;; *************** function _Move_Forward *****************
  1042 ;; Defined at:
  1043 ;;		line 51 in file "./Motors.h"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1057 ;;      Params:         0       0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    1
  1064 ;; This function calls:
  1065 ;;		_Leftwheel_Forward
  1066 ;;		_Rightwheel_Forward
  1067 ;; This function is called by:
  1068 ;;		_Chair_Position
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text11
  1073  0008DE                     __ptext11:
  1074                           	opt callstack 0
  1075  0008DE                     _Move_Forward:
  1076                           	opt callstack 28
  1077  0008DE                     
  1078                           ;./Motors.h: 52:         Leftwheel_Forward();
  1079  0008DE  EC7D  F004         	call	_Leftwheel_Forward	;wreg free
  1080                           
  1081                           ;./Motors.h: 53:         Rightwheel_Forward();
  1082  0008E2  EC79  F004         	call	_Rightwheel_Forward	;wreg free
  1083  0008E6  0012               	return		;funcret
  1084  0008E8                     __end_of_Move_Forward:
  1085                           	opt callstack 0
  1086                           
  1087 ;; *************** function _Rightwheel_Forward *****************
  1088 ;; Defined at:
  1089 ;;		line 24 in file "./Motors.h"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		None
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1103 ;;      Params:         0       0       0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_Move_Forward
  1113 ;;		_Move_Right
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text12
  1118  0008F2                     __ptext12:
  1119                           	opt callstack 0
  1120  0008F2                     _Rightwheel_Forward:
  1121                           	opt callstack 28
  1122  0008F2                     
  1123                           ;./Motors.h: 25:             LA2=1;
  1124  0008F2  8489               	bsf	3977,2,c	;volatile
  1125                           
  1126                           ;./Motors.h: 26:             LA3=0;
  1127  0008F4  9689               	bcf	3977,3,c	;volatile
  1128                           
  1129                           ;./Motors.h: 27:             LE1=1;
  1130  0008F6  828D               	bsf	3981,1,c	;volatile
  1131  0008F8  0012               	return		;funcret
  1132  0008FA                     __end_of_Rightwheel_Forward:
  1133                           	opt callstack 0
  1134                           
  1135 ;; *************** function _Leftwheel_Forward *****************
  1136 ;; Defined at:
  1137 ;;		line 18 in file "./Motors.h"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		None
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1151 ;;      Params:         0       0       0       0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0
  1154 ;;      Totals:         0       0       0       0       0       0       0
  1155 ;;Total ram usage:        0 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_Move_Forward
  1161 ;;		_Move_left
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text13
  1166  0008FA                     __ptext13:
  1167                           	opt callstack 0
  1168  0008FA                     _Leftwheel_Forward:
  1169                           	opt callstack 28
  1170  0008FA                     
  1171                           ;./Motors.h: 19:             LA0=1;
  1172  0008FA  8089               	bsf	3977,0,c	;volatile
  1173                           
  1174                           ;./Motors.h: 20:             LA1=0;
  1175  0008FC  9289               	bcf	3977,1,c	;volatile
  1176                           
  1177                           ;./Motors.h: 21:             LE0=1;
  1178  0008FE  808D               	bsf	3981,0,c	;volatile
  1179  000900  0012               	return		;funcret
  1180  000902                     __end_of_Leftwheel_Forward:
  1181                           	opt callstack 0
  1182                           
  1183 ;; *************** function _Move_Back *****************
  1184 ;; Defined at:
  1185 ;;		line 57 in file "./Motors.h"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1199 ;;      Params:         0       0       0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0
  1202 ;;      Totals:         0       0       0       0       0       0       0
  1203 ;;Total ram usage:        0 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    1
  1206 ;; This function calls:
  1207 ;;		_Leftwheel_Back
  1208 ;;		_Rightwheel_Back
  1209 ;; This function is called by:
  1210 ;;		_Chair_Position
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text14
  1215  0008E8                     __ptext14:
  1216                           	opt callstack 0
  1217  0008E8                     _Move_Back:
  1218                           	opt callstack 28
  1219  0008E8                     
  1220                           ;./Motors.h: 58:         Leftwheel_Back();
  1221  0008E8  EC85  F004         	call	_Leftwheel_Back	;wreg free
  1222                           
  1223                           ;./Motors.h: 59:         Rightwheel_Back();
  1224  0008EC  EC81  F004         	call	_Rightwheel_Back	;wreg free
  1225  0008F0  0012               	return		;funcret
  1226  0008F2                     __end_of_Move_Back:
  1227                           	opt callstack 0
  1228                           
  1229 ;; *************** function _Rightwheel_Back *****************
  1230 ;; Defined at:
  1231 ;;		line 36 in file "./Motors.h"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		None
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1245 ;;      Params:         0       0       0       0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0
  1248 ;;      Totals:         0       0       0       0       0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_Move_Back
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text15
  1259  000902                     __ptext15:
  1260                           	opt callstack 0
  1261  000902                     _Rightwheel_Back:
  1262                           	opt callstack 28
  1263  000902                     
  1264                           ;./Motors.h: 37:             LA2=0;
  1265  000902  9489               	bcf	3977,2,c	;volatile
  1266                           
  1267                           ;./Motors.h: 38:             LA3=1;
  1268  000904  8689               	bsf	3977,3,c	;volatile
  1269                           
  1270                           ;./Motors.h: 39:             LE1=1;
  1271  000906  828D               	bsf	3981,1,c	;volatile
  1272  000908  0012               	return		;funcret
  1273  00090A                     __end_of_Rightwheel_Back:
  1274                           	opt callstack 0
  1275                           
  1276 ;; *************** function _Leftwheel_Back *****************
  1277 ;; Defined at:
  1278 ;;		line 30 in file "./Motors.h"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		None
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1292 ;;      Params:         0       0       0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0
  1295 ;;      Totals:         0       0       0       0       0       0       0
  1296 ;;Total ram usage:        0 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; This function calls:
  1299 ;;		Nothing
  1300 ;; This function is called by:
  1301 ;;		_Move_Back
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text16
  1306  00090A                     __ptext16:
  1307                           	opt callstack 0
  1308  00090A                     _Leftwheel_Back:
  1309                           	opt callstack 28
  1310  00090A                     
  1311                           ;./Motors.h: 31:             LA0=0;
  1312  00090A  9089               	bcf	3977,0,c	;volatile
  1313                           
  1314                           ;./Motors.h: 32:             LA1=1;
  1315  00090C  8289               	bsf	3977,1,c	;volatile
  1316                           
  1317                           ;./Motors.h: 33:             LE0=1;
  1318  00090E  808D               	bsf	3981,0,c	;volatile
  1319  000910  0012               	return		;funcret
  1320  000912                     __end_of_Leftwheel_Back:
  1321                           	opt callstack 0
  1322                           
  1323                           	psect	rparam
  1324  0000                     tosu	equ	0xFFF
  1325                           tosh	equ	0xFFE
  1326                           tosl	equ	0xFFD
  1327                           stkptr	equ	0xFFC
  1328                           pclatu	equ	0xFFB
  1329                           pclath	equ	0xFFA
  1330                           pcl	equ	0xFF9
  1331                           tblptru	equ	0xFF8
  1332                           tblptrh	equ	0xFF7
  1333                           tblptrl	equ	0xFF6
  1334                           tablat	equ	0xFF5
  1335                           prodh	equ	0xFF4
  1336                           prodl	equ	0xFF3
  1337                           indf0	equ	0xFEF
  1338                           postinc0	equ	0xFEE
  1339                           postdec0	equ	0xFED
  1340                           preinc0	equ	0xFEC
  1341                           plusw0	equ	0xFEB
  1342                           fsr0h	equ	0xFEA
  1343                           fsr0l	equ	0xFE9
  1344                           wreg	equ	0xFE8
  1345                           indf1	equ	0xFE7
  1346                           postinc1	equ	0xFE6
  1347                           postdec1	equ	0xFE5
  1348                           preinc1	equ	0xFE4
  1349                           plusw1	equ	0xFE3
  1350                           fsr1h	equ	0xFE2
  1351                           fsr1l	equ	0xFE1
  1352                           bsr	equ	0xFE0
  1353                           indf2	equ	0xFDF
  1354                           postinc2	equ	0xFDE
  1355                           postdec2	equ	0xFDD
  1356                           preinc2	equ	0xFDC
  1357                           plusw2	equ	0xFDB
  1358                           fsr2h	equ	0xFDA
  1359                           fsr2l	equ	0xFD9
  1360                           status	equ	0xFD8


Data Sizes:
    Strings     37
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcmp@r	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[5]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[6]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[5]), STR_6(CODE[8]), 

    Chair_Position@Command	PTR unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[6]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[5]), STR_6(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Chair_Position
    _Chair_Position->_strcmp

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1438
                                              7 COMRAM     2     2      0
                     _Chair_Position
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Chair_Position                                       2     0      2    1438
                                              5 COMRAM     2     0      2
                          _Move_Back
                       _Move_Forward
                         _Move_Right
                          _Move_left
                               _Stop
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4     872
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _Stop                                                 0     0      0       0
                     _Leftwheel_Stop
                    _Rightwheel_Stop
 ---------------------------------------------------------------------------------
 (2) _Move_left                                            0     0      0       0
                  _Leftwheel_Forward
                    _Rightwheel_Stop
 ---------------------------------------------------------------------------------
 (3) _Rightwheel_Stop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Move_Right                                           0     0      0       0
                     _Leftwheel_Stop
                 _Rightwheel_Forward
 ---------------------------------------------------------------------------------
 (3) _Leftwheel_Stop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Move_Forward                                         0     0      0       0
                  _Leftwheel_Forward
                 _Rightwheel_Forward
 ---------------------------------------------------------------------------------
 (3) _Rightwheel_Forward                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Leftwheel_Forward                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Move_Back                                            0     0      0       0
                     _Leftwheel_Back
                    _Rightwheel_Back
 ---------------------------------------------------------------------------------
 (3) _Rightwheel_Back                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Leftwheel_Back                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Chair_Position
     _Move_Back
       _Leftwheel_Back
       _Rightwheel_Back
     _Move_Forward
       _Leftwheel_Forward
       _Rightwheel_Forward
     _Move_Right
       _Leftwheel_Stop
       _Rightwheel_Forward
     _Move_left
       _Leftwheel_Forward
       _Rightwheel_Stop
     _Stop
       _Leftwheel_Stop
       _Rightwheel_Stop
     _strcmp
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      9       9       1        9.5%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
ABS                  0      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BIGRAM             5FF      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 05:59:38 2020

                             l21 0900                               l30 0908  
                             l24 08F8                               l33 0918  
                             l42 08F0                               l27 0910  
                             l51 08C8                               l36 0914  
                             l45 08D2                               l39 08E6  
                             l55 070A                               l48 08DC  
                             l91 08B4                               l88 08BE  
                             u80 081A                               u81 0816  
                             u90 0836                               u91 0832  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                            l130 0898                              l821 090A  
                            l823 0902                              l831 08E8  
                            l815 085A                              l817 08FA  
                            l825 0916                              l833 08CA  
                            l905 08B6                              _LA0 007C48  
                            l819 08F2                              l835 08D4  
                            l827 0912                              l851 085C  
                            _LA1 007C49                              _LA2 007C4A  
                            l829 08DE                              l837 08C0  
                            l941 081A                              l861 0896  
                            l853 0878                              _LA3 007C4B  
                            l943 0836                              l935 07E4  
                            l863 08A8                              l855 087A  
                            l937 07E8                              l857 087C  
                            _LE0 007C68                              l939 07F0  
                            l971 06B2                              l963 0684  
                            l955 0656                              l947 0628  
                            l859 087E                              _LE1 007C69  
                            l981 0706                              l973 06D8  
                            l965 06AA                              l957 067C  
                            l949 064E                              l991 071C  
                            l993 0732                              l979 06E0  
                            l995 073E                              l987 070C  
                            l997 0754                              l989 0710  
                            l999 0760                     __CFG_CPB$OFF 000000  
                            u100 064E                              u101 064A  
                            u110 067C                              u111 0678  
                            u120 06AA                              u121 06A6  
                            u130 06D8                              u131 06D4  
                            u140 0706                              u141 0702  
                            u207 07D0                              u157 0726  
                            u167 0748                              u177 076A  
                   __CFG_CPD$OFF 000000                              u187 078C  
                            u197 07AE                              wreg 000FE8  
                   __CFG_LVP$OFF 000000                             l1001 0776  
                           l1011 07C6                             l1003 0782  
                           l1005 0798                             l1007 07A4  
                           l1009 07BA                             STR_1 0609  
                           STR_2 0617                             STR_3 0621  
                           STR_4 0611                             STR_5 061C  
                           STR_6 0601                             STR_7 061C  
                           STR_8 0617                             STR_9 061C  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D                             _WPUB 000F61  
                           _Stop 08C0                             _main 070C  
                  __CFG_BORV$190 000000                 ??_Chair_Position 0008  
                           start 0000                    __CFG_IESO$OFF 000000  
                   ___param_bank 000000   __size_of_OSCILLATOR_Initialize 000E  
  __end_of_OSCILLATOR_Initialize 08B6                            ?_Stop 0001  
                          ?_main 0001                            STR_10 0621  
                          STR_11 0611                   __CFG_DEBUG$OFF 000000  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                   __CFG_EBTRB$OFF 000000  
             __CFG_MCLRE$INTMCLR 000000                   __CFG_BOREN$OFF 000000  
                          tablat 000FF5                            status 000FD8  
                 __CFG_HFOFST$ON 000000                   __CFG_PBADEN$ON 000000  
                __initialization 089A                     __end_of_Stop 08CA  
                   __end_of_main 07E4                   _Leftwheel_Back 090A  
    __size_of_Rightwheel_Forward 0008                           ??_Stop 0001  
                         ??_main 0008                   _Leftwheel_Stop 0916  
                  __activetblptr 000001                           _ANSELA 000F38  
                         _ANSELB 000F39                           _ANSELC 000F3A  
                         _ANSELD 000F3B                           _ANSELE 000F3C  
                 __CFG_WDTEN$OFF 000000                           _OSCCON 000FD3  
                     _Move_Right 08D4                   __CFG_XINST$OFF 000000  
                 __CFG_STVREN$ON 000000           __end_of_Leftwheel_Back 0912  
             __size_of_Move_Back 000A           __end_of_Leftwheel_Stop 091A  
              _Leftwheel_Forward 08FA               __size_of_Move_left 000A  
                _Rightwheel_Back 0902                           _strcmp 07E4  
             ?_Leftwheel_Forward 0001                  _Rightwheel_Stop 0912  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
            ??_Leftwheel_Forward 0001                _SYSTEM_Initialize 08B6  
                     __accesstop 0060          __end_of__initialization 089A  
             ?_SYSTEM_Initialize 0001                    ___rparam_used 000001  
                 __pcstackCOMRAM 0001                    ?_Move_Forward 0001  
      __end_of_Leftwheel_Forward 0902              ??_SYSTEM_Initialize 0001  
                ?_Leftwheel_Back 0001                  ?_Leftwheel_Stop 0001  
      __end_of_SYSTEM_Initialize 08C0                __end_of_Move_Back 08F2  
                __CFG_PLLCFG$OFF 000000                __end_of_Move_left 08D4  
                    ?_Move_Right 0001                   ??_Move_Forward 0001  
             __CFG_CCP2MX$PORTC1 000000          __end_of_Rightwheel_Back 090A  
        __end_of_Rightwheel_Stop 0916               __CFG_CCP3MX$PORTB5 000000  
                        ?_strcmp 0001                          _OSCCON2 000FD2  
                        _OSCTUNE 000F9B                  __CFG_PWRTEN$OFF 000000  
                        __Hparam 0000                          __Lparam 0000  
     __size_of_Leftwheel_Forward 0008                     __psmallconst 0600  
                        __pcinit 089A                          __ramtop 0600  
                        __ptext0 070C                          __ptext1 08B6  
                        __ptext2 085C                          __ptext3 08A8  
                        __ptext4 0628                          __ptext5 07E4  
                        __ptext6 08C0                          __ptext7 08CA  
                        __ptext8 0912                          __ptext9 08D4  
                __size_of_strcmp 0078              __size_of_Move_Right 000A  
          _OSCILLATOR_Initialize 08A8         ??_PIN_MANAGER_Initialize 0001  
     __size_of_SYSTEM_Initialize 000A             end_of_initialization 089A  
               ?_Rightwheel_Back 0001       __end_of_Rightwheel_Forward 08FA  
               ?_Rightwheel_Stop 0001                          strcmp@l 0001  
                        strcmp@r 0003          __size_of_Chair_Position 00E4  
           __end_of_Move_Forward 08E8                 ??_Leftwheel_Back 0001  
               ??_Leftwheel_Stop 0001           ?_OSCILLATOR_Initialize 0001  
                 __end_of_strcmp 085C              start_initialization 089A  
__size_of_PIN_MANAGER_Initialize 003E                     ??_Move_Right 0001  
                      _Move_Back 08E8                        _Move_left 08CA  
          Chair_Position@Command 0006                         ??_strcmp 0005  
             __end_of_Move_Right 08DE                       ?_Move_Back 0001  
                     ?_Move_left 0001           _PIN_MANAGER_Initialize 085C  
                 _Chair_Position 0628                 __CFG_PRICLKEN$ON 000000  
          __size_of_Move_Forward 000A                      __smallconst 0600  
         __end_of_Chair_Position 070C                 __CFG_WDTPS$32768 000000  
                   _Move_Forward 08DE               _Rightwheel_Forward 08F2  
                    _INTCON2bits 000FF1              ?_Rightwheel_Forward 0001  
                    ??_Move_Back 0001                      ??_Move_left 0001  
                       __Hrparam 0000                         __Lrparam 0000  
                   __Lsmallconst 0600                  ?_Chair_Position 0006  
              __CFG_P2BMX$PORTD2 000000          ??_OSCILLATOR_Initialize 0001  
           ??_Rightwheel_Forward 0001         __size_of_Rightwheel_Back 0008  
       __size_of_Rightwheel_Stop 0004                         __ptext10 0916  
                       __ptext11 08DE                         __ptext12 08F2  
                       __ptext13 08FA                         __ptext14 08E8  
                       __ptext15 0902                         __ptext16 090A  
                  __size_of_Stop 000A                    __size_of_main 00D8  
                     _INTCONbits 000FF2          ?_PIN_MANAGER_Initialize 0001  
        __size_of_Leftwheel_Back 0008          __size_of_Leftwheel_Stop 0004  
              __CFG_T3CMX$PORTC0 000000                ??_Rightwheel_Back 0001  
              ??_Rightwheel_Stop 0001   __end_of_PIN_MANAGER_Initialize 089A  
              __CFG_FOSC$INTIO67 000000  
