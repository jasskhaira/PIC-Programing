

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 26 12:16:15 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F43K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28  0000                     
    29                           ; Version 2.10
    30                           ; Generated 31/07/2019 GMT
    31                           ; 
    32                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F43K22 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     _ANSELA	set	3896
    64  0000                     _ANSELE	set	3900
    65  0000                     _ANSELB	set	3897
    66  0000                     _ANSELC	set	3898
    67  0000                     _ANSELD	set	3899
    68  0000                     _INTCONbits	set	4082
    69  0000                     _INTCON2bits	set	4081
    70  0000                     _WPUB	set	3937
    71  0000                     _TRISD	set	3989
    72  0000                     _TRISC	set	3988
    73  0000                     _TRISB	set	3987
    74  0000                     _TRISA	set	3986
    75  0000                     _TRISE	set	3990
    76  0000                     _LATC	set	3979
    77  0000                     _LATB	set	3978
    78  0000                     _LATA	set	3977
    79  0000                     _LATD	set	3980
    80  0000                     _LATE	set	3981
    81  0000                     _OSCTUNE	set	3995
    82  0000                     _OSCCON2	set	4050
    83  0000                     _OSCCON	set	4051
    84  0000                     _LE0	set	31848
    85  0000                     _LA5	set	31821
    86  0000                     _LA4	set	31820
    87  0000                     _LA0	set	31816
    88  0000                     _LA1	set	31817
    89  0000                     _LA2	set	31818
    90  0000                     _LA3	set	31819
    91                           
    92                           	psect	smallconst
    93  000200                     __psmallconst:
    94                           	opt callstack 0
    95  000200  00                 	db	0
    96  000201                     STR_6:
    97  000201  46                 	db	70	;'F'
    98  000202  30                 	db	48	;'0'
    99  000203  52                 	db	82	;'R'
   100  000204  57                 	db	87	;'W'
   101  000205  41                 	db	65	;'A'
   102  000206  52                 	db	82	;'R'
   103  000207  44                 	db	68	;'D'
   104  000208  00                 	db	0
   105  000209                     STR_1:
   106  000209  46                 	db	70	;'F'
   107  00020A  4F                 	db	79	;'O'
   108  00020B  52                 	db	82	;'R'
   109  00020C  57                 	db	87	;'W'
   110  00020D  41                 	db	65	;'A'
   111  00020E  52                 	db	82	;'R'
   112  00020F  44                 	db	68	;'D'
   113  000210  00                 	db	0
   114  000211                     STR_4:
   115  000211  52                 	db	82	;'R'
   116  000212  49                 	db	73	;'I'
   117  000213  47                 	db	71	;'G'
   118  000214  48                 	db	72	;'H'
   119  000215  54                 	db	84	;'T'
   120  000216  00                 	db	0
   121  000217                     STR_2:
   122  000217  42                 	db	66	;'B'
   123  000218  41                 	db	65	;'A'
   124  000219  43                 	db	67	;'C'
   125  00021A  4B                 	db	75	;'K'
   126  00021B  00                 	db	0
   127  00021C                     STR_5:
   128  00021C  53                 	db	83	;'S'
   129  00021D  54                 	db	84	;'T'
   130  00021E  4F                 	db	79	;'O'
   131  00021F  50                 	db	80	;'P'
   132  000220  00                 	db	0
   133  000221                     STR_3:
   134  000221  4C                 	db	76	;'L'
   135  000222  45                 	db	69	;'E'
   136  000223  46                 	db	70	;'F'
   137  000224  54                 	db	84	;'T'
   138  000225  00                 	db	0
   139  0000                     
   140                           ; #config settings
   141  000226  00                 	db	0	; dummy byte at the end
   142  0000                     
   143                           	psect	cinit
   144  00049E                     __pcinit:
   145                           	opt callstack 0
   146  00049E                     start_initialization:
   147                           	opt callstack 0
   148  00049E                     __initialization:
   149                           	opt callstack 0
   150  00049E                     end_of_initialization:
   151                           	opt callstack 0
   152  00049E                     __end_of__initialization:
   153                           	opt callstack 0
   154  00049E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   155  0004A0  6EF8               	movwf	tblptru,c
   156  0004A2  0E02               	movlw	high __Lsmallconst
   157  0004A4  6EF7               	movwf	tblptrh,c
   158  0004A6  0100               	movlb	0
   159  0004A8  EF86  F001         	goto	_main	;jump to C main() function
   160                           
   161                           	psect	cstackCOMRAM
   162  000001                     __pcstackCOMRAM:
   163                           	opt callstack 0
   164  000001                     ?_strcmp:
   165                           	opt callstack 0
   166  000001                     strcmp@l:
   167                           	opt callstack 0
   168                           
   169                           ; 2 bytes @ 0x0
   170  000001                     	ds	2
   171  000003                     strcmp@r:
   172                           	opt callstack 0
   173                           
   174                           ; 2 bytes @ 0x2
   175  000003                     	ds	2
   176  000005                     ??_strcmp:
   177                           
   178                           ; 1 bytes @ 0x4
   179  000005                     	ds	1
   180  000006                     Chair_Position@Command:
   181                           	opt callstack 0
   182                           
   183                           ; 2 bytes @ 0x5
   184  000006                     	ds	2
   185  000008                     ??_main:
   186                           
   187                           ; 1 bytes @ 0x7
   188  000008                     	ds	2
   189                           
   190 ;;
   191 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   192 ;;
   193 ;; *************** function _main *****************
   194 ;; Defined at:
   195 ;;		line 49 in file "main.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;		None
   200 ;; Return value:  Size  Location     Type
   201 ;;                  1    wreg      void 
   202 ;; Registers used:
   203 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   204 ;; Tracked objects:
   205 ;;		On entry : 0/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMRAM   BANK0   BANK1
   209 ;;      Params:         0       0       0
   210 ;;      Locals:         0       0       0
   211 ;;      Temps:          2       0       0
   212 ;;      Totals:         2       0       0
   213 ;;Total ram usage:        2 bytes
   214 ;; Hardware stack levels required when called:    3
   215 ;; This function calls:
   216 ;;		_Chair_Position
   217 ;;		_Motor_Initalize
   218 ;;		_SYSTEM_Initialize
   219 ;; This function is called by:
   220 ;;		Startup code after reset
   221 ;; This function uses a non-reentrant model
   222 ;;
   223                           
   224                           	psect	text0
   225  00030C                     __ptext0:
   226                           	opt callstack 0
   227  00030C                     _main:
   228                           	opt callstack 28
   229  00030C                     
   230                           ;main.c: 52:     SYSTEM_Initialize();
   231  00030C  EC5D  F002         	call	_SYSTEM_Initialize	;wreg free
   232  000310                     
   233                           ;main.c: 53:     Motor_Initalize();
   234  000310  EC8B  F002         	call	_Motor_Initalize	;wreg free
   235  000314                     l997:
   236                           
   237                           ;main.c: 72:     {;main.c: 73:         {;main.c: 75:         Chair_Position("F0RWARD");
   238  000314  0E01               	movlw	low STR_6
   239  000316  6E06               	movwf	Chair_Position@Command^0,c
   240  000318  0E02               	movlw	high STR_6
   241  00031A  6E07               	movwf	(Chair_Position@Command+1)^0,c
   242  00031C  EC14  F001         	call	_Chair_Position	;wreg free
   243  000320                     
   244                           ;main.c: 76:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   245  000320  0E02               	movlw	2
   246  000322  6E09               	movwf	(??_main+1)^0,c
   247  000324  0E45               	movlw	69
   248  000326  6E08               	movwf	??_main^0,c
   249  000328  0EAA               	movlw	170
   250  00032A                     u157:
   251  00032A  2EE8               	decfsz	wreg,f,c
   252  00032C  D7FE               	bra	u157
   253  00032E  2E08               	decfsz	??_main^0,f,c
   254  000330  D7FC               	bra	u157
   255  000332  2E09               	decfsz	(??_main+1)^0,f,c
   256  000334  D7FA               	bra	u157
   257  000336                     
   258                           ;main.c: 77:         Chair_Position("STOP");
   259  000336  0E1C               	movlw	low STR_5
   260  000338  6E06               	movwf	Chair_Position@Command^0,c
   261  00033A  0E02               	movlw	high STR_5
   262  00033C  6E07               	movwf	(Chair_Position@Command+1)^0,c
   263  00033E  EC14  F001         	call	_Chair_Position	;wreg free
   264  000342                     
   265                           ;main.c: 78:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   266  000342  0E02               	movlw	2
   267  000344  6E09               	movwf	(??_main+1)^0,c
   268  000346  0E45               	movlw	69
   269  000348  6E08               	movwf	??_main^0,c
   270  00034A  0EAA               	movlw	170
   271  00034C                     u167:
   272  00034C  2EE8               	decfsz	wreg,f,c
   273  00034E  D7FE               	bra	u167
   274  000350  2E08               	decfsz	??_main^0,f,c
   275  000352  D7FC               	bra	u167
   276  000354  2E09               	decfsz	(??_main+1)^0,f,c
   277  000356  D7FA               	bra	u167
   278  000358                     
   279                           ;main.c: 79:         Chair_Position("BACK");
   280  000358  0E17               	movlw	low STR_2
   281  00035A  6E06               	movwf	Chair_Position@Command^0,c
   282  00035C  0E02               	movlw	high STR_2
   283  00035E  6E07               	movwf	(Chair_Position@Command+1)^0,c
   284  000360  EC14  F001         	call	_Chair_Position	;wreg free
   285  000364                     
   286                           ;main.c: 80:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   287  000364  0E02               	movlw	2
   288  000366  6E09               	movwf	(??_main+1)^0,c
   289  000368  0E45               	movlw	69
   290  00036A  6E08               	movwf	??_main^0,c
   291  00036C  0EAA               	movlw	170
   292  00036E                     u177:
   293  00036E  2EE8               	decfsz	wreg,f,c
   294  000370  D7FE               	bra	u177
   295  000372  2E08               	decfsz	??_main^0,f,c
   296  000374  D7FC               	bra	u177
   297  000376  2E09               	decfsz	(??_main+1)^0,f,c
   298  000378  D7FA               	bra	u177
   299  00037A                     
   300                           ;main.c: 81:         Chair_Position("STOP");
   301  00037A  0E1C               	movlw	low STR_5
   302  00037C  6E06               	movwf	Chair_Position@Command^0,c
   303  00037E  0E02               	movlw	high STR_5
   304  000380  6E07               	movwf	(Chair_Position@Command+1)^0,c
   305  000382  EC14  F001         	call	_Chair_Position	;wreg free
   306  000386                     
   307                           ;main.c: 82:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   308  000386  0E02               	movlw	2
   309  000388  6E09               	movwf	(??_main+1)^0,c
   310  00038A  0E45               	movlw	69
   311  00038C  6E08               	movwf	??_main^0,c
   312  00038E  0EAA               	movlw	170
   313  000390                     u187:
   314  000390  2EE8               	decfsz	wreg,f,c
   315  000392  D7FE               	bra	u187
   316  000394  2E08               	decfsz	??_main^0,f,c
   317  000396  D7FC               	bra	u187
   318  000398  2E09               	decfsz	(??_main+1)^0,f,c
   319  00039A  D7FA               	bra	u187
   320  00039C                     
   321                           ;main.c: 83:         Chair_Position("LEFT");
   322  00039C  0E21               	movlw	low STR_3
   323  00039E  6E06               	movwf	Chair_Position@Command^0,c
   324  0003A0  0E02               	movlw	high STR_3
   325  0003A2  6E07               	movwf	(Chair_Position@Command+1)^0,c
   326  0003A4  EC14  F001         	call	_Chair_Position	;wreg free
   327  0003A8                     
   328                           ;main.c: 84:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   329  0003A8  0E02               	movlw	2
   330  0003AA  6E09               	movwf	(??_main+1)^0,c
   331  0003AC  0E45               	movlw	69
   332  0003AE  6E08               	movwf	??_main^0,c
   333  0003B0  0EAA               	movlw	170
   334  0003B2                     u197:
   335  0003B2  2EE8               	decfsz	wreg,f,c
   336  0003B4  D7FE               	bra	u197
   337  0003B6  2E08               	decfsz	??_main^0,f,c
   338  0003B8  D7FC               	bra	u197
   339  0003BA  2E09               	decfsz	(??_main+1)^0,f,c
   340  0003BC  D7FA               	bra	u197
   341  0003BE                     
   342                           ;main.c: 85:         Chair_Position("RIGHT");
   343  0003BE  0E11               	movlw	low STR_4
   344  0003C0  6E06               	movwf	Chair_Position@Command^0,c
   345  0003C2  0E02               	movlw	high STR_4
   346  0003C4  6E07               	movwf	(Chair_Position@Command+1)^0,c
   347  0003C6  EC14  F001         	call	_Chair_Position	;wreg free
   348  0003CA                     
   349                           ;main.c: 86:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   350  0003CA  0E02               	movlw	2
   351  0003CC  6E09               	movwf	(??_main+1)^0,c
   352  0003CE  0E45               	movlw	69
   353  0003D0  6E08               	movwf	??_main^0,c
   354  0003D2  0EAA               	movlw	170
   355  0003D4                     u207:
   356  0003D4  2EE8               	decfsz	wreg,f,c
   357  0003D6  D7FE               	bra	u207
   358  0003D8  2E08               	decfsz	??_main^0,f,c
   359  0003DA  D7FC               	bra	u207
   360  0003DC  2E09               	decfsz	(??_main+1)^0,f,c
   361  0003DE  D7FA               	bra	u207
   362  0003E0  EF8A  F001         	goto	l997
   363  0003E4  EF00  F000         	goto	start
   364  0003E8                     __end_of_main:
   365                           	opt callstack 0
   366                           
   367 ;; *************** function _SYSTEM_Initialize *****************
   368 ;; Defined at:
   369 ;;		line 50 in file "mcc_generated_files/mcc.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, status,2, cstack
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMRAM   BANK0   BANK1
   383 ;;      Params:         0       0       0
   384 ;;      Locals:         0       0       0
   385 ;;      Temps:          0       0       0
   386 ;;      Totals:         0       0       0
   387 ;;Total ram usage:        0 bytes
   388 ;; Hardware stack levels used:    1
   389 ;; Hardware stack levels required when called:    1
   390 ;; This function calls:
   391 ;;		_OSCILLATOR_Initialize
   392 ;;		_PIN_MANAGER_Initialize
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text1
   399  0004BA                     __ptext1:
   400                           	opt callstack 0
   401  0004BA                     _SYSTEM_Initialize:
   402                           	opt callstack 29
   403  0004BA                     
   404                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   405  0004BA  EC30  F002         	call	_PIN_MANAGER_Initialize	;wreg free
   406                           
   407                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   408  0004BE  EC56  F002         	call	_OSCILLATOR_Initialize	;wreg free
   409  0004C2  0012               	return		;funcret
   410  0004C4                     __end_of_SYSTEM_Initialize:
   411                           	opt callstack 0
   412                           
   413 ;; *************** function _PIN_MANAGER_Initialize *****************
   414 ;; Defined at:
   415 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1
   429 ;;      Params:         0       0       0
   430 ;;      Locals:         0       0       0
   431 ;;      Temps:          0       0       0
   432 ;;      Totals:         0       0       0
   433 ;;Total ram usage:        0 bytes
   434 ;; Hardware stack levels used:    1
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		_SYSTEM_Initialize
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text2
   443  000460                     __ptext2:
   444                           	opt callstack 0
   445  000460                     _PIN_MANAGER_Initialize:
   446                           	opt callstack 29
   447  000460                     
   448                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   449  000460  0E00               	movlw	0
   450  000462  6E8D               	movwf	141,c	;volatile
   451                           
   452                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   453  000464  0E00               	movlw	0
   454  000466  6E8C               	movwf	140,c	;volatile
   455                           
   456                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   457  000468  0E00               	movlw	0
   458  00046A  6E89               	movwf	137,c	;volatile
   459                           
   460                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   461  00046C  0E00               	movlw	0
   462  00046E  6E8A               	movwf	138,c	;volatile
   463                           
   464                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   465  000470  0E00               	movlw	0
   466  000472  6E8B               	movwf	139,c	;volatile
   467                           
   468                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x04;
   469  000474  0E04               	movlw	4
   470  000476  6E96               	movwf	150,c	;volatile
   471                           
   472                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
   473  000478  0EC0               	movlw	192
   474  00047A  6E92               	movwf	146,c	;volatile
   475  00047C                     
   476                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   477  00047C  6893               	setf	147,c	;volatile
   478  00047E                     
   479                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
   480  00047E  6894               	setf	148,c	;volatile
   481  000480                     
   482                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   483  000480  6895               	setf	149,c	;volatile
   484  000482                     
   485                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
   486  000482  010F               	movlb	15	; () banked
   487  000484  693B               	setf	59,b	;volatile
   488                           
   489                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFC;
   490  000486  0EFC               	movlw	252
   491  000488  6F3A               	movwf	58,b	;volatile
   492                           
   493                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
   494  00048A  0E3F               	movlw	63
   495  00048C  6F39               	movwf	57,b	;volatile
   496                           
   497                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
   498  00048E  0E07               	movlw	7
   499  000490  6F3C               	movwf	60,b	;volatile
   500                           
   501                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
   502  000492  0E2F               	movlw	47
   503  000494  6F38               	movwf	56,b	;volatile
   504                           
   505                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
   506  000496  0E00               	movlw	0
   507  000498  6E61               	movwf	97,c	;volatile
   508  00049A                     
   509                           ; BSR set to: 15
   510                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
   511  00049A  8EF1               	bsf	241,7,c	;volatile
   512  00049C                     
   513                           ; BSR set to: 15
   514  00049C  0012               	return		;funcret
   515  00049E                     __end_of_PIN_MANAGER_Initialize:
   516                           	opt callstack 0
   517                           
   518 ;; *************** function _OSCILLATOR_Initialize *****************
   519 ;; Defined at:
   520 ;;		line 57 in file "mcc_generated_files/mcc.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, status,2
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1
   534 ;;      Params:         0       0       0
   535 ;;      Locals:         0       0       0
   536 ;;      Temps:          0       0       0
   537 ;;      Totals:         0       0       0
   538 ;;Total ram usage:        0 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		_SYSTEM_Initialize
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text3
   548  0004AC                     __ptext3:
   549                           	opt callstack 0
   550  0004AC                     _OSCILLATOR_Initialize:
   551                           	opt callstack 29
   552  0004AC                     
   553                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x30;
   554  0004AC  0E30               	movlw	48
   555  0004AE  6ED3               	movwf	211,c	;volatile
   556                           
   557                           ;mcc_generated_files/mcc.c: 62:     OSCCON2 = 0x04;
   558  0004B0  0E04               	movlw	4
   559  0004B2  6ED2               	movwf	210,c	;volatile
   560                           
   561                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
   562  0004B4  0E00               	movlw	0
   563  0004B6  6E9B               	movwf	155,c	;volatile
   564  0004B8  0012               	return		;funcret
   565  0004BA                     __end_of_OSCILLATOR_Initialize:
   566                           	opt callstack 0
   567                           
   568 ;; *************** function _Motor_Initalize *****************
   569 ;; Defined at:
   570 ;;		line 24 in file "./Motors.h"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;		None
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		None
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1
   584 ;;      Params:         0       0       0
   585 ;;      Locals:         0       0       0
   586 ;;      Temps:          0       0       0
   587 ;;      Totals:         0       0       0
   588 ;;Total ram usage:        0 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text4
   598  000516                     __ptext4:
   599                           	opt callstack 0
   600  000516                     _Motor_Initalize:
   601                           	opt callstack 30
   602  000516                     
   603                           ;./Motors.h: 26:         LA3=1;
   604  000516  8689               	bsf	3977,3,c	;volatile
   605  000518  0012               	return		;funcret
   606  00051A                     __end_of_Motor_Initalize:
   607                           	opt callstack 0
   608                           
   609 ;; *************** function _Chair_Position *****************
   610 ;; Defined at:
   611 ;;		line 101 in file "./Motors.h"
   612 ;; Parameters:    Size  Location     Type
   613 ;;  Command         2    5[COMRAM] PTR unsigned char 
   614 ;;		 -> STR_11(6), STR_10(5), STR_9(5), STR_8(5), 
   615 ;;		 -> STR_7(5), STR_6(8), 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  2    5[COMRAM] int 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1
   627 ;;      Params:         2       0       0
   628 ;;      Locals:         0       0       0
   629 ;;      Temps:          0       0       0
   630 ;;      Totals:         2       0       0
   631 ;;Total ram usage:        2 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    2
   634 ;; This function calls:
   635 ;;		_Move_Back
   636 ;;		_Move_Forward
   637 ;;		_Move_Right
   638 ;;		_Move_left
   639 ;;		_Stop
   640 ;;		_strcmp
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text5
   647  000228                     __ptext5:
   648                           	opt callstack 0
   649  000228                     _Chair_Position:
   650                           	opt callstack 28
   651  000228                     
   652                           ;./Motors.h: 101:     int Chair_Position(char Command[] );./Motors.h: 102:     {;./Motor
      +                          s.h: 103:         if(strcmp(Command,"FORWARD")==0)
   653  000228  C006  F001         	movff	Chair_Position@Command,strcmp@l
   654  00022C  C007  F002         	movff	Chair_Position@Command+1,strcmp@l+1
   655  000230  0E09               	movlw	low STR_1
   656  000232  6E03               	movwf	strcmp@r^0,c
   657  000234  0E02               	movlw	high STR_1
   658  000236  6E04               	movwf	(strcmp@r+1)^0,c
   659  000238  ECF4  F001         	call	_strcmp	;wreg free
   660  00023C  5001               	movf	?_strcmp^0,w,c
   661  00023E  1002               	iorwf	(?_strcmp+1)^0,w,c
   662  000240  A4D8               	btfss	status,2,c
   663  000242  EF25  F001         	goto	u101
   664  000246  EF27  F001         	goto	u100
   665  00024A                     u101:
   666  00024A  EF2B  F001         	goto	l961
   667  00024E                     u100:
   668  00024E                     
   669                           ;./Motors.h: 104:         {;./Motors.h: 105:             Move_Forward();
   670  00024E  EC71  F002         	call	_Move_Forward	;wreg free
   671  000252  EF85  F001         	goto	l118
   672  000256                     l961:
   673  000256  C006  F001         	movff	Chair_Position@Command,strcmp@l
   674  00025A  C007  F002         	movff	Chair_Position@Command+1,strcmp@l+1
   675  00025E  0E17               	movlw	low STR_2
   676  000260  6E03               	movwf	strcmp@r^0,c
   677  000262  0E02               	movlw	high STR_2
   678  000264  6E04               	movwf	(strcmp@r+1)^0,c
   679  000266  ECF4  F001         	call	_strcmp	;wreg free
   680  00026A  5001               	movf	?_strcmp^0,w,c
   681  00026C  1002               	iorwf	(?_strcmp+1)^0,w,c
   682  00026E  A4D8               	btfss	status,2,c
   683  000270  EF3C  F001         	goto	u111
   684  000274  EF3E  F001         	goto	u110
   685  000278                     u111:
   686  000278  EF42  F001         	goto	l969
   687  00027C                     u110:
   688  00027C                     
   689                           ;./Motors.h: 110:         {;./Motors.h: 111:              Move_Back();
   690  00027C  EC76  F002         	call	_Move_Back	;wreg free
   691  000280  EF85  F001         	goto	l118
   692  000284                     l969:
   693  000284  C006  F001         	movff	Chair_Position@Command,strcmp@l
   694  000288  C007  F002         	movff	Chair_Position@Command+1,strcmp@l+1
   695  00028C  0E21               	movlw	low STR_3
   696  00028E  6E03               	movwf	strcmp@r^0,c
   697  000290  0E02               	movlw	high STR_3
   698  000292  6E04               	movwf	(strcmp@r+1)^0,c
   699  000294  ECF4  F001         	call	_strcmp	;wreg free
   700  000298  5001               	movf	?_strcmp^0,w,c
   701  00029A  1002               	iorwf	(?_strcmp+1)^0,w,c
   702  00029C  A4D8               	btfss	status,2,c
   703  00029E  EF53  F001         	goto	u121
   704  0002A2  EF55  F001         	goto	u120
   705  0002A6                     u121:
   706  0002A6  EF59  F001         	goto	l977
   707  0002AA                     u120:
   708  0002AA                     
   709                           ;./Motors.h: 116:         {;./Motors.h: 117:             Move_left();
   710  0002AA  EC67  F002         	call	_Move_left	;wreg free
   711  0002AE  EF85  F001         	goto	l118
   712  0002B2                     l977:
   713  0002B2  C006  F001         	movff	Chair_Position@Command,strcmp@l
   714  0002B6  C007  F002         	movff	Chair_Position@Command+1,strcmp@l+1
   715  0002BA  0E11               	movlw	low STR_4
   716  0002BC  6E03               	movwf	strcmp@r^0,c
   717  0002BE  0E02               	movlw	high STR_4
   718  0002C0  6E04               	movwf	(strcmp@r+1)^0,c
   719  0002C2  ECF4  F001         	call	_strcmp	;wreg free
   720  0002C6  5001               	movf	?_strcmp^0,w,c
   721  0002C8  1002               	iorwf	(?_strcmp+1)^0,w,c
   722  0002CA  A4D8               	btfss	status,2,c
   723  0002CC  EF6A  F001         	goto	u131
   724  0002D0  EF6C  F001         	goto	u130
   725  0002D4                     u131:
   726  0002D4  EF70  F001         	goto	l985
   727  0002D8                     u130:
   728  0002D8                     
   729                           ;./Motors.h: 121:         {;./Motors.h: 122:             Move_Right();
   730  0002D8  EC6C  F002         	call	_Move_Right	;wreg free
   731  0002DC  EF85  F001         	goto	l118
   732  0002E0                     l985:
   733  0002E0  C006  F001         	movff	Chair_Position@Command,strcmp@l
   734  0002E4  C007  F002         	movff	Chair_Position@Command+1,strcmp@l+1
   735  0002E8  0E1C               	movlw	low STR_5
   736  0002EA  6E03               	movwf	strcmp@r^0,c
   737  0002EC  0E02               	movlw	high STR_5
   738  0002EE  6E04               	movwf	(strcmp@r+1)^0,c
   739  0002F0  ECF4  F001         	call	_strcmp	;wreg free
   740  0002F4  5001               	movf	?_strcmp^0,w,c
   741  0002F6  1002               	iorwf	(?_strcmp+1)^0,w,c
   742  0002F8  A4D8               	btfss	status,2,c
   743  0002FA  EF81  F001         	goto	u141
   744  0002FE  EF83  F001         	goto	u140
   745  000302                     u141:
   746  000302  EF85  F001         	goto	l118
   747  000306                     u140:
   748  000306                     
   749                           ;./Motors.h: 127:         {;./Motors.h: 128:             Stop();
   750  000306  EC62  F002         	call	_Stop	;wreg free
   751  00030A                     l118:
   752  00030A  0012               	return		;funcret
   753  00030C                     __end_of_Chair_Position:
   754                           	opt callstack 0
   755                           
   756 ;; *************** function _strcmp *****************
   757 ;; Defined at:
   758 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  l               2    0[COMRAM] PTR const unsigned char 
   761 ;;		 -> STR_11(6), STR_10(5), STR_9(5), STR_8(5), 
   762 ;;		 -> STR_7(5), STR_6(8), 
   763 ;;  r               2    2[COMRAM] PTR const unsigned char 
   764 ;;		 -> STR_5(5), STR_4(6), STR_3(5), STR_2(5), 
   765 ;;		 -> STR_1(8), 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  2    0[COMRAM] int 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1
   777 ;;      Params:         4       0       0
   778 ;;      Locals:         0       0       0
   779 ;;      Temps:          1       0       0
   780 ;;      Totals:         5       0       0
   781 ;;Total ram usage:        5 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; This function calls:
   784 ;;		Nothing
   785 ;; This function is called by:
   786 ;;		_Chair_Position
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text6
   791  0003E8                     __ptext6:
   792                           	opt callstack 0
   793  0003E8                     _strcmp:
   794                           	opt callstack 29
   795  0003E8  EFFA  F001         	goto	l945
   796  0003EC                     l943:
   797  0003EC  4A01               	infsnz	strcmp@l^0,f,c
   798  0003EE  2A02               	incf	(strcmp@l+1)^0,f,c
   799  0003F0  4A03               	infsnz	strcmp@r^0,f,c
   800  0003F2  2A04               	incf	(strcmp@r+1)^0,f,c
   801  0003F4                     l945:
   802  0003F4  C001  FFF6         	movff	strcmp@l,tblptrl
   803  0003F8  C002  FFF7         	movff	strcmp@l+1,tblptrh
   804  0003FC                     	if	0	;tblptru may be non-zero
   805  0003FC                     	endif
   806  0003FC                     	if	0	;tblptru may be non-zero
   807  0003FC                     	endif
   808  0003FC  0008               	tblrd		*
   809  0003FE  CFF5 F005          	movff	tablat,??_strcmp
   810  000402  C003  FFF6         	movff	strcmp@r,tblptrl
   811  000406  C004  FFF7         	movff	strcmp@r+1,tblptrh
   812  00040A                     	if	0	;tblptru may be non-zero
   813  00040A                     	endif
   814  00040A                     	if	0	;tblptru may be non-zero
   815  00040A                     	endif
   816  00040A  0008               	tblrd		*
   817  00040C  50F5               	movf	tablat,w,c
   818  00040E  1805               	xorwf	??_strcmp^0,w,c
   819  000410  A4D8               	btfss	status,2,c
   820  000412  EF0D  F002         	goto	u81
   821  000416  EF0F  F002         	goto	u80
   822  00041A                     u81:
   823  00041A  EF1D  F002         	goto	l949
   824  00041E                     u80:
   825  00041E  C001  FFF6         	movff	strcmp@l,tblptrl
   826  000422  C002  FFF7         	movff	strcmp@l+1,tblptrh
   827  000426                     	if	0	;tblptru may be non-zero
   828  000426                     	endif
   829  000426                     	if	0	;tblptru may be non-zero
   830  000426                     	endif
   831  000426  0008               	tblrd		*
   832  000428  50F5               	movf	tablat,w,c
   833  00042A  0900               	iorlw	0
   834  00042C  A4D8               	btfss	status,2,c
   835  00042E  EF1B  F002         	goto	u91
   836  000432  EF1D  F002         	goto	u90
   837  000436                     u91:
   838  000436  EFF6  F001         	goto	l943
   839  00043A                     u90:
   840  00043A                     l949:
   841  00043A  C001  FFF6         	movff	strcmp@l,tblptrl
   842  00043E  C002  FFF7         	movff	strcmp@l+1,tblptrh
   843  000442                     	if	0	;tblptru may be non-zero
   844  000442                     	endif
   845  000442                     	if	0	;tblptru may be non-zero
   846  000442                     	endif
   847  000442  0008               	tblrd		*
   848  000444  CFF5 F005          	movff	tablat,??_strcmp
   849  000448  C003  FFF6         	movff	strcmp@r,tblptrl
   850  00044C  C004  FFF7         	movff	strcmp@r+1,tblptrh
   851  000450                     	if	0	;tblptru may be non-zero
   852  000450                     	endif
   853  000450                     	if	0	;tblptru may be non-zero
   854  000450                     	endif
   855  000450  0008               	tblrd		*
   856  000452  50F5               	movf	tablat,w,c
   857  000454  5C05               	subwf	??_strcmp^0,w,c
   858  000456  6E01               	movwf	?_strcmp^0,c
   859  000458  6A02               	clrf	(?_strcmp+1)^0,c
   860  00045A  A0D8               	btfss	status,0,c
   861  00045C  0602               	decf	(?_strcmp+1)^0,f,c
   862  00045E  0012               	return		;funcret
   863  000460                     __end_of_strcmp:
   864                           	opt callstack 0
   865                           
   866 ;; *************** function _Stop *****************
   867 ;; Defined at:
   868 ;;		line 85 in file "./Motors.h"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1
   882 ;;      Params:         0       0       0
   883 ;;      Locals:         0       0       0
   884 ;;      Temps:          0       0       0
   885 ;;      Totals:         0       0       0
   886 ;;Total ram usage:        0 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    1
   889 ;; This function calls:
   890 ;;		_Leftwheel_Stop
   891 ;;		_Rightwheel_Stop
   892 ;; This function is called by:
   893 ;;		_Chair_Position
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text7
   898  0004C4                     __ptext7:
   899                           	opt callstack 0
   900  0004C4                     _Stop:
   901                           	opt callstack 28
   902  0004C4                     
   903                           ;./Motors.h: 86:           Leftwheel_Stop();
   904  0004C4  EC8F  F002         	call	_Leftwheel_Stop	;wreg free
   905                           
   906                           ;./Motors.h: 87:           Rightwheel_Stop();
   907  0004C8  EC8D  F002         	call	_Rightwheel_Stop	;wreg free
   908  0004CC  0012               	return		;funcret
   909  0004CE                     __end_of_Stop:
   910                           	opt callstack 0
   911                           
   912 ;; *************** function _Move_left *****************
   913 ;; Defined at:
   914 ;;		line 75 in file "./Motors.h"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1
   928 ;;      Params:         0       0       0
   929 ;;      Locals:         0       0       0
   930 ;;      Temps:          0       0       0
   931 ;;      Totals:         0       0       0
   932 ;;Total ram usage:        0 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    1
   935 ;; This function calls:
   936 ;;		_Leftwheel_Forward
   937 ;;		_Rightwheel_Stop
   938 ;; This function is called by:
   939 ;;		_Chair_Position
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text8
   944  0004CE                     __ptext8:
   945                           	opt callstack 0
   946  0004CE                     _Move_left:
   947                           	opt callstack 28
   948  0004CE                     
   949                           ;./Motors.h: 76:         Leftwheel_Forward();
   950  0004CE  EC7F  F002         	call	_Leftwheel_Forward	;wreg free
   951                           
   952                           ;./Motors.h: 77:         Rightwheel_Stop();
   953  0004D2  EC8D  F002         	call	_Rightwheel_Stop	;wreg free
   954  0004D6  0012               	return		;funcret
   955  0004D8                     __end_of_Move_left:
   956                           	opt callstack 0
   957                           
   958 ;; *************** function _Rightwheel_Stop *****************
   959 ;; Defined at:
   960 ;;		line 59 in file "./Motors.h"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		None
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1
   974 ;;      Params:         0       0       0
   975 ;;      Locals:         0       0       0
   976 ;;      Temps:          0       0       0
   977 ;;      Totals:         0       0       0
   978 ;;Total ram usage:        0 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_Move_left
   984 ;;		_Stop
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text9
   989  00051A                     __ptext9:
   990                           	opt callstack 0
   991  00051A                     _Rightwheel_Stop:
   992                           	opt callstack 28
   993  00051A                     
   994                           ;./Motors.h: 60:          LE0=1;
   995  00051A  808D               	bsf	3981,0,c	;volatile
   996  00051C  0012               	return		;funcret
   997  00051E                     __end_of_Rightwheel_Stop:
   998                           	opt callstack 0
   999                           
  1000 ;; *************** function _Move_Right *****************
  1001 ;; Defined at:
  1002 ;;		line 80 in file "./Motors.h"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1
  1016 ;;      Params:         0       0       0
  1017 ;;      Locals:         0       0       0
  1018 ;;      Temps:          0       0       0
  1019 ;;      Totals:         0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    1
  1023 ;; This function calls:
  1024 ;;		_Leftwheel_Stop
  1025 ;;		_Rightwheel_Forward
  1026 ;; This function is called by:
  1027 ;;		_Chair_Position
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text10
  1032  0004D8                     __ptext10:
  1033                           	opt callstack 0
  1034  0004D8                     _Move_Right:
  1035                           	opt callstack 28
  1036  0004D8                     
  1037                           ;./Motors.h: 81:         Leftwheel_Stop();
  1038  0004D8  EC8F  F002         	call	_Leftwheel_Stop	;wreg free
  1039                           
  1040                           ;./Motors.h: 82:         Rightwheel_Forward();
  1041  0004DC  EC7B  F002         	call	_Rightwheel_Forward	;wreg free
  1042  0004E0  0012               	return		;funcret
  1043  0004E2                     __end_of_Move_Right:
  1044                           	opt callstack 0
  1045                           
  1046 ;; *************** function _Leftwheel_Stop *****************
  1047 ;; Defined at:
  1048 ;;		line 54 in file "./Motors.h"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		None
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1
  1062 ;;      Params:         0       0       0
  1063 ;;      Locals:         0       0       0
  1064 ;;      Temps:          0       0       0
  1065 ;;      Totals:         0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_Move_Right
  1072 ;;		_Stop
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text11
  1077  00051E                     __ptext11:
  1078                           	opt callstack 0
  1079  00051E                     _Leftwheel_Stop:
  1080                           	opt callstack 28
  1081  00051E                     
  1082                           ;./Motors.h: 55:          LA0=1;
  1083  00051E  8089               	bsf	3977,0,c	;volatile
  1084  000520  0012               	return		;funcret
  1085  000522                     __end_of_Leftwheel_Stop:
  1086                           	opt callstack 0
  1087                           
  1088 ;; *************** function _Move_Forward *****************
  1089 ;; Defined at:
  1090 ;;		line 64 in file "./Motors.h"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1
  1104 ;;      Params:         0       0       0
  1105 ;;      Locals:         0       0       0
  1106 ;;      Temps:          0       0       0
  1107 ;;      Totals:         0       0       0
  1108 ;;Total ram usage:        0 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; Hardware stack levels required when called:    1
  1111 ;; This function calls:
  1112 ;;		_Leftwheel_Forward
  1113 ;;		_Rightwheel_Forward
  1114 ;; This function is called by:
  1115 ;;		_Chair_Position
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text12
  1120  0004E2                     __ptext12:
  1121                           	opt callstack 0
  1122  0004E2                     _Move_Forward:
  1123                           	opt callstack 28
  1124  0004E2                     
  1125                           ;./Motors.h: 65:         Leftwheel_Forward();
  1126  0004E2  EC7F  F002         	call	_Leftwheel_Forward	;wreg free
  1127                           
  1128                           ;./Motors.h: 66:         Rightwheel_Forward();
  1129  0004E6  EC7B  F002         	call	_Rightwheel_Forward	;wreg free
  1130  0004EA  0012               	return		;funcret
  1131  0004EC                     __end_of_Move_Forward:
  1132                           	opt callstack 0
  1133                           
  1134 ;; *************** function _Rightwheel_Forward *****************
  1135 ;; Defined at:
  1136 ;;		line 35 in file "./Motors.h"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		None
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1
  1150 ;;      Params:         0       0       0
  1151 ;;      Locals:         0       0       0
  1152 ;;      Temps:          0       0       0
  1153 ;;      Totals:         0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_Move_Forward
  1160 ;;		_Move_Right
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text13
  1165  0004F6                     __ptext13:
  1166                           	opt callstack 0
  1167  0004F6                     _Rightwheel_Forward:
  1168                           	opt callstack 28
  1169  0004F6                     
  1170                           ;./Motors.h: 36:         LA4=1;
  1171  0004F6  8889               	bsf	3977,4,c	;volatile
  1172                           
  1173                           ;./Motors.h: 37:         LA5=0;
  1174  0004F8  9A89               	bcf	3977,5,c	;volatile
  1175                           
  1176                           ;./Motors.h: 38:         LE0=1;
  1177  0004FA  808D               	bsf	3981,0,c	;volatile
  1178  0004FC  0012               	return		;funcret
  1179  0004FE                     __end_of_Rightwheel_Forward:
  1180                           	opt callstack 0
  1181                           
  1182 ;; *************** function _Leftwheel_Forward *****************
  1183 ;; Defined at:
  1184 ;;		line 29 in file "./Motors.h"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		None
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1
  1198 ;;      Params:         0       0       0
  1199 ;;      Locals:         0       0       0
  1200 ;;      Temps:          0       0       0
  1201 ;;      Totals:         0       0       0
  1202 ;;Total ram usage:        0 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_Move_Forward
  1208 ;;		_Move_left
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text14
  1213  0004FE                     __ptext14:
  1214                           	opt callstack 0
  1215  0004FE                     _Leftwheel_Forward:
  1216                           	opt callstack 28
  1217  0004FE                     
  1218                           ;./Motors.h: 30:         LA2=1;
  1219  0004FE  8489               	bsf	3977,2,c	;volatile
  1220                           
  1221                           ;./Motors.h: 31:         LA1=0;
  1222  000500  9289               	bcf	3977,1,c	;volatile
  1223                           
  1224                           ;./Motors.h: 32:         LA0=1;
  1225  000502  8089               	bsf	3977,0,c	;volatile
  1226  000504  0012               	return		;funcret
  1227  000506                     __end_of_Leftwheel_Forward:
  1228                           	opt callstack 0
  1229                           
  1230 ;; *************** function _Move_Back *****************
  1231 ;; Defined at:
  1232 ;;		line 70 in file "./Motors.h"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1
  1246 ;;      Params:         0       0       0
  1247 ;;      Locals:         0       0       0
  1248 ;;      Temps:          0       0       0
  1249 ;;      Totals:         0       0       0
  1250 ;;Total ram usage:        0 bytes
  1251 ;; Hardware stack levels used:    1
  1252 ;; Hardware stack levels required when called:    1
  1253 ;; This function calls:
  1254 ;;		_Leftwheel_Back
  1255 ;;		_Rightwheel_Back
  1256 ;; This function is called by:
  1257 ;;		_Chair_Position
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text15
  1262  0004EC                     __ptext15:
  1263                           	opt callstack 0
  1264  0004EC                     _Move_Back:
  1265                           	opt callstack 28
  1266  0004EC                     
  1267                           ;./Motors.h: 71:         Leftwheel_Back();
  1268  0004EC  EC87  F002         	call	_Leftwheel_Back	;wreg free
  1269                           
  1270                           ;./Motors.h: 72:         Rightwheel_Back();
  1271  0004F0  EC83  F002         	call	_Rightwheel_Back	;wreg free
  1272  0004F4  0012               	return		;funcret
  1273  0004F6                     __end_of_Move_Back:
  1274                           	opt callstack 0
  1275                           
  1276 ;; *************** function _Rightwheel_Back *****************
  1277 ;; Defined at:
  1278 ;;		line 47 in file "./Motors.h"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		None
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1
  1292 ;;      Params:         0       0       0
  1293 ;;      Locals:         0       0       0
  1294 ;;      Temps:          0       0       0
  1295 ;;      Totals:         0       0       0
  1296 ;;Total ram usage:        0 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; This function calls:
  1299 ;;		Nothing
  1300 ;; This function is called by:
  1301 ;;		_Move_Back
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text16
  1306  000506                     __ptext16:
  1307                           	opt callstack 0
  1308  000506                     _Rightwheel_Back:
  1309                           	opt callstack 28
  1310  000506                     
  1311                           ;./Motors.h: 48:         LA4=0;
  1312  000506  9889               	bcf	3977,4,c	;volatile
  1313                           
  1314                           ;./Motors.h: 49:         LA5=1;
  1315  000508  8A89               	bsf	3977,5,c	;volatile
  1316                           
  1317                           ;./Motors.h: 50:         LE0=1;
  1318  00050A  808D               	bsf	3981,0,c	;volatile
  1319  00050C  0012               	return		;funcret
  1320  00050E                     __end_of_Rightwheel_Back:
  1321                           	opt callstack 0
  1322                           
  1323 ;; *************** function _Leftwheel_Back *****************
  1324 ;; Defined at:
  1325 ;;		line 41 in file "./Motors.h"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		None
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1
  1339 ;;      Params:         0       0       0
  1340 ;;      Locals:         0       0       0
  1341 ;;      Temps:          0       0       0
  1342 ;;      Totals:         0       0       0
  1343 ;;Total ram usage:        0 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_Move_Back
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text17
  1353  00050E                     __ptext17:
  1354                           	opt callstack 0
  1355  00050E                     _Leftwheel_Back:
  1356                           	opt callstack 28
  1357  00050E                     
  1358                           ;./Motors.h: 42:         LA2=0;
  1359  00050E  9489               	bcf	3977,2,c	;volatile
  1360                           
  1361                           ;./Motors.h: 43:         LA1=1;
  1362  000510  8289               	bsf	3977,1,c	;volatile
  1363                           
  1364                           ;./Motors.h: 44:         LA0=1;
  1365  000512  8089               	bsf	3977,0,c	;volatile
  1366  000514  0012               	return		;funcret
  1367  000516                     __end_of_Leftwheel_Back:
  1368                           	opt callstack 0
  1369                           
  1370                           	psect	rparam
  1371  0000                     tosu	equ	0xFFF
  1372                           tosh	equ	0xFFE
  1373                           tosl	equ	0xFFD
  1374                           stkptr	equ	0xFFC
  1375                           pclatu	equ	0xFFB
  1376                           pclath	equ	0xFFA
  1377                           pcl	equ	0xFF9
  1378                           tblptru	equ	0xFF8
  1379                           tblptrh	equ	0xFF7
  1380                           tblptrl	equ	0xFF6
  1381                           tablat	equ	0xFF5
  1382                           prodh	equ	0xFF4
  1383                           prodl	equ	0xFF3
  1384                           indf0	equ	0xFEF
  1385                           postinc0	equ	0xFEE
  1386                           postdec0	equ	0xFED
  1387                           preinc0	equ	0xFEC
  1388                           plusw0	equ	0xFEB
  1389                           fsr0h	equ	0xFEA
  1390                           fsr0l	equ	0xFE9
  1391                           wreg	equ	0xFE8
  1392                           indf1	equ	0xFE7
  1393                           postinc1	equ	0xFE6
  1394                           postdec1	equ	0xFE5
  1395                           preinc1	equ	0xFE4
  1396                           plusw1	equ	0xFE3
  1397                           fsr1h	equ	0xFE2
  1398                           fsr1l	equ	0xFE1
  1399                           bsr	equ	0xFE0
  1400                           indf2	equ	0xFDF
  1401                           postinc2	equ	0xFDE
  1402                           postdec2	equ	0xFDD
  1403                           preinc2	equ	0xFDC
  1404                           plusw2	equ	0xFDB
  1405                           fsr2h	equ	0xFDA
  1406                           fsr2l	equ	0xFD9
  1407                           status	equ	0xFD8


Data Sizes:
    Strings     37
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9       9
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    strcmp@r	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[5]), STR_2(CODE[5]), 
		 -> STR_1(CODE[8]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[6]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[5]), STR_6(CODE[8]), 

    Chair_Position@Command	PTR unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[6]), STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[5]), STR_6(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Chair_Position
    _Chair_Position->_strcmp

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1438
                                              7 COMRAM     2     2      0
                     _Chair_Position
                    _Motor_Initalize
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_Initalize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Chair_Position                                       2     0      2    1438
                                              5 COMRAM     2     0      2
                          _Move_Back
                       _Move_Forward
                         _Move_Right
                          _Move_left
                               _Stop
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4     872
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _Stop                                                 0     0      0       0
                     _Leftwheel_Stop
                    _Rightwheel_Stop
 ---------------------------------------------------------------------------------
 (2) _Move_left                                            0     0      0       0
                  _Leftwheel_Forward
                    _Rightwheel_Stop
 ---------------------------------------------------------------------------------
 (3) _Rightwheel_Stop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Move_Right                                           0     0      0       0
                     _Leftwheel_Stop
                 _Rightwheel_Forward
 ---------------------------------------------------------------------------------
 (3) _Leftwheel_Stop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Move_Forward                                         0     0      0       0
                  _Leftwheel_Forward
                 _Rightwheel_Forward
 ---------------------------------------------------------------------------------
 (3) _Rightwheel_Forward                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Leftwheel_Forward                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Move_Back                                            0     0      0       0
                     _Leftwheel_Back
                    _Rightwheel_Back
 ---------------------------------------------------------------------------------
 (3) _Rightwheel_Back                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Leftwheel_Back                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Chair_Position
     _Move_Back
       _Leftwheel_Back
       _Rightwheel_Back
     _Move_Forward
       _Leftwheel_Forward
       _Rightwheel_Forward
     _Move_Right
       _Leftwheel_Stop
       _Rightwheel_Forward
     _Move_left
       _Leftwheel_Forward
       _Rightwheel_Stop
     _Stop
       _Leftwheel_Stop
       _Rightwheel_Stop
     _strcmp
   _Motor_Initalize
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      9       9       1        9.5%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BANK1              100      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BIGRAM             1FF      0       0       8        0.0%
DATA                 0      0       0       9        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 26 12:16:15 2020

                             l13 04C2                               l16 04B8  
                             l55 049C                               l81 0518  
                             l90 0514                               l84 0504  
                             l93 050C                               l87 04FC  
                             l96 0520                               l99 051C  
                             u80 041E                               u81 041A  
                             u90 043A                               u91 0436  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                            l102 04EA                              l111 04E0  
                            l105 04F4                              l114 04CC  
                            l108 04D6                              l118 030A  
                            l821 04F6                              l823 050E  
                            l831 0460                              l825 0506  
                            l817 045E                              l841 049A  
                            l833 047C                              _LA0 007C48  
                            l819 04FE                              l827 051E  
                            l851 04D8                              l843 04AC  
                            l835 047E                              _LA1 007C49  
                            _LA2 007C4A                              l845 04E2  
                            l829 051A                              l853 04C4  
                            l941 03E8                              l837 0480  
                            _LA3 007C4B                              _LA4 007C4C  
                            l847 04EC                              l943 03EC  
                            l839 0482                              _LA5 007C4D  
                            l849 04CE                              l945 03F4  
                            l961 0256                              l953 0228  
                            _LE0 007C68                              l947 041E  
                            l971 02AA                              l963 027C  
                            l955 024E                              l867 04BA  
                            l949 043A                              l869 0516  
                            l985 02E0                              l977 02B2  
                            l969 0284                              l993 030C  
                            l987 0306                              l979 02D8  
                            l995 0310                              l997 0314  
                            l999 0320                     __CFG_CPB$OFF 000000  
                            u100 024E                              u101 024A  
                            u110 027C                              u111 0278  
                            u120 02AA                              u121 02A6  
                            u130 02D8                              u131 02D4  
                            u140 0306                              u141 0302  
                            u207 03D4                              u157 032A  
                            u167 034C                              u177 036E  
                   __CFG_CPD$OFF 000000                              u187 0390  
                            u197 03B2                              wreg 000FE8  
                   __CFG_LVP$OFF 000000                             l1001 0336  
                           l1011 0386                             l1003 0342  
                           l1013 039C                             l1005 0358  
                           l1015 03A8                             l1007 0364  
                           l1017 03BE                             l1009 037A  
                           l1019 03CA                             STR_1 0209  
                           STR_2 0217                             STR_3 0221  
                           STR_4 0211                             STR_5 021C  
                           STR_6 0201                             STR_7 021C  
                           STR_8 0217                             STR_9 021C  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D                             _WPUB 000F61  
                           _Stop 04C4                             _main 030C  
                  __CFG_BORV$190 000000                 ??_Chair_Position 0008  
                           start 0000                    __CFG_IESO$OFF 000000  
       __size_of_Motor_Initalize 0004                     ___param_bank 000000  
 __size_of_OSCILLATOR_Initialize 000E    __end_of_OSCILLATOR_Initialize 04BA  
                          ?_Stop 0001                            ?_main 0001  
                          STR_10 0221                            STR_11 0211  
                 __CFG_DEBUG$OFF 000000                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000               __CFG_MCLRE$INTMCLR 000000  
                 __CFG_BOREN$OFF 000000                            tablat 000FF5  
                          status 000FD8                   __CFG_HFOFST$ON 000000  
                 __CFG_PBADEN$ON 000000                  __initialization 049E  
                   __end_of_Stop 04CE                     __end_of_main 03E8  
                 _Leftwheel_Back 050E      __size_of_Rightwheel_Forward 0008  
                         ??_Stop 0001                           ??_main 0008  
                 _Leftwheel_Stop 051E                    __activetblptr 000001  
                         _ANSELA 000F38                           _ANSELB 000F39  
                         _ANSELC 000F3A                           _ANSELD 000F3B  
                         _ANSELE 000F3C                   __CFG_WDTEN$OFF 000000  
                         _OSCCON 000FD3                       _Move_Right 04D8  
                 __CFG_XINST$OFF 000000                   __CFG_STVREN$ON 000000  
         __end_of_Leftwheel_Back 0516               __size_of_Move_Back 000A  
         __end_of_Leftwheel_Stop 0522                _Leftwheel_Forward 04FE  
             __size_of_Move_left 000A                ??_Motor_Initalize 0001  
                _Rightwheel_Back 0506                           _strcmp 03E8  
             ?_Leftwheel_Forward 0001                  _Rightwheel_Stop 051A  
                   __mediumconst 0000                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
            ??_Leftwheel_Forward 0001                _SYSTEM_Initialize 04BA  
                     __accesstop 0060          __end_of__initialization 049E  
             ?_SYSTEM_Initialize 0001                    ___rparam_used 000001  
                 __pcstackCOMRAM 0001                    ?_Move_Forward 0001  
      __end_of_Leftwheel_Forward 0506              ??_SYSTEM_Initialize 0001  
                ?_Leftwheel_Back 0001                  ?_Leftwheel_Stop 0001  
      __end_of_SYSTEM_Initialize 04C4                __end_of_Move_Back 04F6  
                __CFG_PLLCFG$OFF 000000                __end_of_Move_left 04D8  
                    ?_Move_Right 0001                   ??_Move_Forward 0001  
             __CFG_CCP2MX$PORTC1 000000          __end_of_Rightwheel_Back 050E  
        __end_of_Rightwheel_Stop 051E               __CFG_CCP3MX$PORTB5 000000  
                        ?_strcmp 0001                          _OSCCON2 000FD2  
                        _OSCTUNE 000F9B                  __CFG_PWRTEN$OFF 000000  
                        __Hparam 0000                          __Lparam 0000  
     __size_of_Leftwheel_Forward 0008                     __psmallconst 0200  
                        __pcinit 049E                          __ramtop 0200  
                        __ptext0 030C                          __ptext1 04BA  
                        __ptext2 0460                          __ptext3 04AC  
                        __ptext4 0516                          __ptext5 0228  
                        __ptext6 03E8                          __ptext7 04C4  
                        __ptext8 04CE                          __ptext9 051A  
                __size_of_strcmp 0078              __size_of_Move_Right 000A  
          _OSCILLATOR_Initialize 04AC         ??_PIN_MANAGER_Initialize 0001  
     __size_of_SYSTEM_Initialize 000A             end_of_initialization 049E  
                _Motor_Initalize 0516                 ?_Rightwheel_Back 0001  
     __end_of_Rightwheel_Forward 04FE                 ?_Rightwheel_Stop 0001  
                        strcmp@l 0001                          strcmp@r 0003  
        __size_of_Chair_Position 00E4             __end_of_Move_Forward 04EC  
               ??_Leftwheel_Back 0001                 ??_Leftwheel_Stop 0001  
         ?_OSCILLATOR_Initialize 0001                   __end_of_strcmp 0460  
            start_initialization 049E  __size_of_PIN_MANAGER_Initialize 003E  
        __end_of_Motor_Initalize 051A                     ??_Move_Right 0001  
                      _Move_Back 04EC                        _Move_left 04CE  
          Chair_Position@Command 0006                         ??_strcmp 0005  
             __end_of_Move_Right 04E2                       ?_Move_Back 0001  
                     ?_Move_left 0001           _PIN_MANAGER_Initialize 0460  
                 _Chair_Position 0228                 __CFG_PRICLKEN$ON 000000  
          __size_of_Move_Forward 000A                      __smallconst 0200  
               ?_Motor_Initalize 0001           __end_of_Chair_Position 030C  
               __CFG_WDTPS$32768 000000                     _Move_Forward 04E2  
             _Rightwheel_Forward 04F6                      _INTCON2bits 000FF1  
            ?_Rightwheel_Forward 0001                      ??_Move_Back 0001  
                    ??_Move_left 0001                         __Hrparam 0000  
                       __Lrparam 0000                     __Lsmallconst 0200  
                ?_Chair_Position 0006                __CFG_P2BMX$PORTD2 000000  
        ??_OSCILLATOR_Initialize 0001             ??_Rightwheel_Forward 0001  
       __size_of_Rightwheel_Back 0008         __size_of_Rightwheel_Stop 0004  
                       __ptext10 04D8                         __ptext11 051E  
                       __ptext12 04E2                         __ptext13 04F6  
                       __ptext14 04FE                         __ptext15 04EC  
                       __ptext16 0506                         __ptext17 050E  
                  __size_of_Stop 000A                    __size_of_main 00DC  
                     _INTCONbits 000FF2          ?_PIN_MANAGER_Initialize 0001  
        __size_of_Leftwheel_Back 0008          __size_of_Leftwheel_Stop 0004  
              __CFG_T3CMX$PORTC0 000000                ??_Rightwheel_Back 0001  
              ??_Rightwheel_Stop 0001   __end_of_PIN_MANAGER_Initialize 049E  
              __CFG_FOSC$INTIO67 000000  
