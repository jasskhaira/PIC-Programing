

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 07 21:31:00 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F43K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41  0000                     
    42                           ; Version 2.10
    43                           ; Generated 31/07/2019 GMT
    44                           ; 
    45                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F43K22 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    78  0000                     
    79 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    80  0000                     
    81 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    82  0000                     
    83                           	psect	nvCOMRAM
    84  00004D                     __pnvCOMRAM:
    85                           	opt callstack 0
    86  00004D                     _EUSART1_ErrorHandler:
    87                           	opt callstack 0
    88  00004D                     	ds	2
    89  00004F                     _EUSART1_OverrunErrorHandler:
    90                           	opt callstack 0
    91  00004F                     	ds	2
    92  000051                     _EUSART1_FramingErrorHandler:
    93                           	opt callstack 0
    94  000051                     	ds	2
    95  000053                     _timer0ReloadVal:
    96                           	opt callstack 0
    97  000053                     	ds	2
    98  0000                     _ANSELA	set	3896
    99  0000                     _ANSELE	set	3900
   100  0000                     _ANSELB	set	3897
   101  0000                     _ANSELC	set	3898
   102  0000                     _ANSELD	set	3899
   103  0000                     _TXREG1	set	4013
   104  0000                     _RCREG1	set	4014
   105  0000                     _RCSTA1bits	set	4011
   106  0000                     _TXSTA1bits	set	4012
   107  0000                     _PIR1bits	set	3998
   108  0000                     _SPBRGH1	set	4016
   109  0000                     _SPBRG1	set	4015
   110  0000                     _TXSTA1	set	4012
   111  0000                     _RCSTA1	set	4011
   112  0000                     _BAUDCON1	set	4024
   113  0000                     _T0CON	set	4053
   114  0000                     _TMR0L	set	4054
   115  0000                     _TMR0H	set	4055
   116  0000                     _T0CONbits	set	4053
   117  0000                     _PORTDbits	set	3971
   118  0000                     _LATDbits	set	3980
   119  0000                     _LATEbits	set	3981
   120  0000                     _LATAbits	set	3977
   121  0000                     _INTCONbits	set	4082
   122  0000                     _INTCON2bits	set	4081
   123  0000                     _WPUB	set	3937
   124  0000                     _TRISD	set	3989
   125  0000                     _TRISC	set	3988
   126  0000                     _TRISB	set	3987
   127  0000                     _TRISA	set	3986
   128  0000                     _TRISE	set	3990
   129  0000                     _LATC	set	3979
   130  0000                     _LATB	set	3978
   131  0000                     _LATA	set	3977
   132  0000                     _LATD	set	3980
   133  0000                     _LATE	set	3981
   134  0000                     _OSCTUNE	set	3995
   135  0000                     _OSCCON2	set	4050
   136  0000                     _OSCCON	set	4051
   137                           
   138                           	psect	smallconst
   139  000200                     __psmallconst:
   140                           	opt callstack 0
   141  000200  00                 	db	0
   142  000201                     STR_7:
   143  000201  48                 	db	72	;'H'
   144  000202  65                 	db	101	;'e'
   145  000203  6C                 	db	108	;'l'
   146  000204  6C                 	db	108	;'l'
   147  000205  6F                 	db	111	;'o'
   148  000206  20                 	db	32
   149  000207  66                 	db	102	;'f'
   150  000208  72                 	db	114	;'r'
   151  000209  6F                 	db	111	;'o'
   152  00020A  6D                 	db	109	;'m'
   153  00020B  20                 	db	32
   154  00020C  4D                 	db	77	;'M'
   155  00020D  50                 	db	80	;'P'
   156  00020E  4C                 	db	76	;'L'
   157  00020F  41                 	db	65	;'A'
   158  000210  42                 	db	66	;'B'
   159  000211  20                 	db	32
   160  000212  58                 	db	88	;'X'
   161  000213  70                 	db	112	;'p'
   162  000214  72                 	db	114	;'r'
   163  000215  65                 	db	101	;'e'
   164  000216  73                 	db	115	;'s'
   165  000217  73                 	db	115	;'s'
   166  000218  21                 	db	33
   167  000219  20                 	db	32
   168  00021A  0A                 	db	10
   169  00021B  20                 	db	32
   170  00021C  0D                 	db	13
   171  00021D  00                 	db	0
   172  00021E                     STR_8:
   173  00021E  46                 	db	70	;'F'
   174  00021F  30                 	db	48	;'0'
   175  000220  52                 	db	82	;'R'
   176  000221  57                 	db	87	;'W'
   177  000222  41                 	db	65	;'A'
   178  000223  52                 	db	82	;'R'
   179  000224  44                 	db	68	;'D'
   180  000225  00                 	db	0
   181  000226                     STR_2:
   182  000226  46                 	db	70	;'F'
   183  000227  4F                 	db	79	;'O'
   184  000228  52                 	db	82	;'R'
   185  000229  57                 	db	87	;'W'
   186  00022A  41                 	db	65	;'A'
   187  00022B  52                 	db	82	;'R'
   188  00022C  44                 	db	68	;'D'
   189  00022D  00                 	db	0
   190  00022E                     STR_9:
   191  00022E  4D                 	db	77	;'M'
   192  00022F  6F                 	db	111	;'o'
   193  000230  76                 	db	118	;'v'
   194  000231  69                 	db	105	;'i'
   195  000232  6E                 	db	110	;'n'
   196  000233  67                 	db	103	;'g'
   197  000234  00                 	db	0
   198  000235                     STR_5:
   199  000235  52                 	db	82	;'R'
   200  000236  49                 	db	73	;'I'
   201  000237  47                 	db	71	;'G'
   202  000238  48                 	db	72	;'H'
   203  000239  54                 	db	84	;'T'
   204  00023A  00                 	db	0
   205  00023B                     STR_3:
   206  00023B  42                 	db	66	;'B'
   207  00023C  41                 	db	65	;'A'
   208  00023D  43                 	db	67	;'C'
   209  00023E  4B                 	db	75	;'K'
   210  00023F  00                 	db	0
   211  000240                     STR_6:
   212  000240  53                 	db	83	;'S'
   213  000241  54                 	db	84	;'T'
   214  000242  4F                 	db	79	;'O'
   215  000243  50                 	db	80	;'P'
   216  000244  00                 	db	0
   217  000245                     STR_4:
   218  000245  4C                 	db	76	;'L'
   219  000246  45                 	db	69	;'E'
   220  000247  46                 	db	70	;'F'
   221  000248  54                 	db	84	;'T'
   222  000249  00                 	db	0
   223  00024A                     STR_1:
   224  00024A  6F                 	db	111	;'o'
   225  00024B  6B                 	db	107	;'k'
   226  00024C  00                 	db	0
   227                           
   228                           ; #config settings
   229  00024D  00                 	db	0	; dummy byte at the end
   230  0000                     
   231                           	psect	cinit
   232  0006A8                     __pcinit:
   233                           	opt callstack 0
   234  0006A8                     start_initialization:
   235                           	opt callstack 0
   236  0006A8                     __initialization:
   237                           	opt callstack 0
   238                           
   239                           ; Clear objects allocated to COMRAM (41 bytes)
   240  0006A8  EE00  F001         	lfsr	0,__pbssCOMRAM
   241  0006AC  0E29               	movlw	41
   242  0006AE                     clear_0:
   243  0006AE  6AEE               	clrf	postinc0,c
   244  0006B0  06E8               	decf	wreg,f,c
   245  0006B2  E1FD               	bnz	clear_0
   246  0006B4                     end_of_initialization:
   247                           	opt callstack 0
   248  0006B4                     __end_of__initialization:
   249                           	opt callstack 0
   250  0006B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   251  0006B6  6EF8               	movwf	tblptru,c
   252  0006B8  0100               	movlb	0
   253  0006BA  EFC4  F002         	goto	_main	;jump to C main() function
   254                           
   255                           	psect	bssCOMRAM
   256  000001                     __pbssCOMRAM:
   257                           	opt callstack 0
   258  000001                     	ds	32
   259  000021                     _nout:
   260                           	opt callstack 0
   261  000021                     	ds	2
   262  000023                     _width:
   263                           	opt callstack 0
   264  000023                     	ds	2
   265  000025                     _prec:
   266                           	opt callstack 0
   267  000025                     	ds	2
   268  000027                     _flags:
   269                           	opt callstack 0
   270  000027                     	ds	2
   271  000029                     _eusart1RxLastError:
   272                           	opt callstack 0
   273  000029                     	ds	1
   274                           
   275                           	psect	cstackCOMRAM
   276  00002A                     __pcstackCOMRAM:
   277                           	opt callstack 0
   278  00002A                     ??_TMR0_Initialize:
   279  00002A                     ?_strcmp:
   280                           	opt callstack 0
   281  00002A                     EUSART1_Write@txData:
   282                           	opt callstack 0
   283  00002A                     EUSART1_SetFramingErrorHandler@interruptHandler:
   284                           	opt callstack 0
   285  00002A                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   286                           	opt callstack 0
   287  00002A                     EUSART1_SetErrorHandler@interruptHandler:
   288                           	opt callstack 0
   289  00002A                     strcmp@l:
   290                           	opt callstack 0
   291                           
   292                           ; 2 bytes @ 0x0
   293  00002A                     	ds	1
   294  00002B                     putch@txData:
   295                           	opt callstack 0
   296                           
   297                           ; 1 bytes @ 0x1
   298  00002B                     	ds	1
   299  00002C                     fputc@c:
   300                           	opt callstack 0
   301  00002C                     strcmp@r:
   302                           	opt callstack 0
   303                           
   304                           ; 2 bytes @ 0x2
   305  00002C                     	ds	2
   306  00002E                     ??_strcmp:
   307  00002E                     fputc@fp:
   308                           	opt callstack 0
   309                           
   310                           ; 2 bytes @ 0x4
   311  00002E                     	ds	2
   312  000030                     ??_fputc:
   313                           
   314                           ; 1 bytes @ 0x6
   315  000030                     	ds	5
   316  000035                     ?_vfpfcnvrt:
   317                           	opt callstack 0
   318  000035                     vfpfcnvrt@fp:
   319                           	opt callstack 0
   320                           
   321                           ; 2 bytes @ 0xB
   322  000035                     	ds	2
   323  000037                     vfpfcnvrt@fmt:
   324                           	opt callstack 0
   325                           
   326                           ; 2 bytes @ 0xD
   327  000037                     	ds	2
   328  000039                     vfpfcnvrt@ap:
   329                           	opt callstack 0
   330                           
   331                           ; 2 bytes @ 0xF
   332  000039                     	ds	2
   333  00003B                     ?_vfprintf:
   334                           	opt callstack 0
   335  00003B                     vfprintf@fp:
   336                           	opt callstack 0
   337                           
   338                           ; 2 bytes @ 0x11
   339  00003B                     	ds	2
   340  00003D                     vfprintf@fmt:
   341                           	opt callstack 0
   342                           
   343                           ; 2 bytes @ 0x13
   344  00003D                     	ds	2
   345  00003F                     vfprintf@ap:
   346                           	opt callstack 0
   347                           
   348                           ; 2 bytes @ 0x15
   349  00003F                     	ds	2
   350  000041                     vfprintf@cfmt:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0x17
   354  000041                     	ds	2
   355  000043                     ?_printf:
   356                           	opt callstack 0
   357  000043                     printf@fmt:
   358                           	opt callstack 0
   359                           
   360                           ; 2 bytes @ 0x19
   361  000043                     	ds	2
   362  000045                     
   363                           ; 1 bytes @ 0x1B
   364  000045                     	ds	2
   365  000047                     printf@ap:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x1D
   369  000047                     	ds	2
   370  000049                     Chair_Position@Command:
   371                           	opt callstack 0
   372                           
   373                           ; 2 bytes @ 0x1F
   374  000049                     	ds	2
   375  00004B                     ??_main:
   376                           
   377                           ; 1 bytes @ 0x21
   378  00004B                     	ds	2
   379                           
   380 ;;
   381 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   382 ;;
   383 ;; *************** function _main *****************
   384 ;; Defined at:
   385 ;;		line 52 in file "main.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;  d               4    0        float 
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1
   399 ;;      Params:         0       0       0
   400 ;;      Locals:         0       0       0
   401 ;;      Temps:          2       0       0
   402 ;;      Totals:         2       0       0
   403 ;;Total ram usage:        2 bytes
   404 ;; Hardware stack levels required when called:    9
   405 ;; This function calls:
   406 ;;		_Chair_Position
   407 ;;		_Motor_Initalize
   408 ;;		_SYSTEM_Initialize
   409 ;;		_printf
   410 ;; This function is called by:
   411 ;;		Startup code after reset
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text0
   416  000588                     __ptext0:
   417                           	opt callstack 0
   418  000588                     _main:
   419                           	opt callstack 22
   420  000588                     
   421                           ;main.c: 55:     SYSTEM_Initialize();
   422  000588  EC74  F003         	call	_SYSTEM_Initialize	;wreg free
   423  00058C                     
   424                           ;main.c: 56:     Motor_Initalize();
   425  00058C  ECBD  F003         	call	_Motor_Initalize	;wreg free
   426  000590                     
   427                           ;main.c: 57:     float d;;main.c: 74:     printf("Hello from MPLAB Xpress! \n \r");
   428  000590  0E01               	movlw	low STR_7
   429  000592  6E43               	movwf	printf@fmt^0,c
   430  000594  0E02               	movlw	high STR_7
   431  000596  6E44               	movwf	(printf@fmt+1)^0,c
   432  000598  EC41  F003         	call	_printf	;wreg free
   433  00059C                     l1477:
   434  00059C  9489               	bcf	137,2,c	;volatile
   435  00059E  8289               	bsf	137,1,c	;volatile
   436  0005A0  8089               	bsf	137,0,c	;volatile
   437  0005A2                     
   438                           ;main.c: 82:             Chair_Position("F0RWARD");
   439  0005A2  0E1E               	movlw	low STR_8
   440  0005A4  6E49               	movwf	Chair_Position@Command^0,c
   441  0005A6  0E02               	movlw	high STR_8
   442  0005A8  6E4A               	movwf	(Chair_Position@Command+1)^0,c
   443  0005AA  EC9C  F001         	call	_Chair_Position	;wreg free
   444  0005AE                     
   445                           ;main.c: 83:             printf("Moving");
   446  0005AE  0E2E               	movlw	low STR_9
   447  0005B0  6E43               	movwf	printf@fmt^0,c
   448  0005B2  0E02               	movlw	high STR_9
   449  0005B4  6E44               	movwf	(printf@fmt+1)^0,c
   450  0005B6  EC41  F003         	call	_printf	;wreg free
   451  0005BA                     
   452                           ;main.c: 84:             _delay((unsigned long)((9000)*(8000000/4000.0)));
   453  0005BA  0E5C               	movlw	92
   454  0005BC  6E4C               	movwf	(??_main+1)^0,c
   455  0005BE  0E51               	movlw	81
   456  0005C0  6E4B               	movwf	??_main^0,c
   457  0005C2  0E60               	movlw	96
   458  0005C4                     u367:
   459  0005C4  2EE8               	decfsz	wreg,f,c
   460  0005C6  D7FE               	bra	u367
   461  0005C8  2E4B               	decfsz	??_main^0,f,c
   462  0005CA  D7FC               	bra	u367
   463  0005CC  2E4C               	decfsz	(??_main+1)^0,f,c
   464  0005CE  D7FA               	bra	u367
   465  0005D0  D000               	nop2	
   466  0005D2  EFCE  F002         	goto	l1477
   467  0005D6  EF00  F000         	goto	start
   468  0005DA                     __end_of_main:
   469                           	opt callstack 0
   470                           
   471 ;; *************** function _SYSTEM_Initialize *****************
   472 ;; Defined at:
   473 ;;		line 50 in file "mcc_generated_files/mcc.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1
   487 ;;      Params:         0       0       0
   488 ;;      Locals:         0       0       0
   489 ;;      Temps:          0       0       0
   490 ;;      Totals:         0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    2
   494 ;; This function calls:
   495 ;;		_EUSART1_Initialize
   496 ;;		_OSCILLATOR_Initialize
   497 ;;		_PIN_MANAGER_Initialize
   498 ;;		_TMR0_Initialize
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text1
   505  0006E8                     __ptext1:
   506                           	opt callstack 0
   507  0006E8                     _SYSTEM_Initialize:
   508                           	opt callstack 28
   509  0006E8                     
   510                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   511  0006E8  ECED  F002         	call	_PIN_MANAGER_Initialize	;wreg free
   512                           
   513                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   514  0006EC  EC7D  F003         	call	_OSCILLATOR_Initialize	;wreg free
   515  0006F0                     
   516                           ;mcc_generated_files/mcc.c: 55:     TMR0_Initialize();
   517  0006F0  EC2E  F003         	call	_TMR0_Initialize	;wreg free
   518  0006F4                     
   519                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
   520  0006F4  EC0F  F003         	call	_EUSART1_Initialize	;wreg free
   521  0006F8  0012               	return		;funcret
   522  0006FA                     __end_of_SYSTEM_Initialize:
   523                           	opt callstack 0
   524                           
   525 ;; *************** function _TMR0_Initialize *****************
   526 ;; Defined at:
   527 ;;		line 66 in file "mcc_generated_files/tmr0.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1
   541 ;;      Params:         0       0       0
   542 ;;      Locals:         0       0       0
   543 ;;      Temps:          2       0       0
   544 ;;      Totals:         2       0       0
   545 ;;Total ram usage:        2 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; This function calls:
   548 ;;		Nothing
   549 ;; This function is called by:
   550 ;;		_SYSTEM_Initialize
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text2
   555  00065C                     __ptext2:
   556                           	opt callstack 0
   557  00065C                     _TMR0_Initialize:
   558                           	opt callstack 29
   559  00065C                     
   560                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
   561  00065C  9CD5               	bcf	213,6,c	;volatile
   562  00065E                     
   563                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xFE;
   564  00065E  0EFE               	movlw	254
   565  000660  6ED7               	movwf	215,c	;volatile
   566  000662                     
   567                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xFF;
   568  000662  68D6               	setf	214,c	;volatile
   569  000664                     
   570                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
   571  000664  50D6               	movf	214,w,c	;volatile
   572  000666  CFD7 F02A          	movff	4055,??_TMR0_Initialize	;volatile
   573  00066A  6A2B               	clrf	(??_TMR0_Initialize+1)^0,c
   574  00066C  C02A  F02B         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
   575  000670  6A2A               	clrf	??_TMR0_Initialize^0,c
   576  000672  102A               	iorwf	??_TMR0_Initialize^0,w,c
   577  000674  6E53               	movwf	_timer0ReloadVal^0,c	;volatile
   578  000676  502B               	movf	(??_TMR0_Initialize+1)^0,w,c
   579  000678  6E54               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
   580  00067A                     
   581                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
   582  00067A  94F2               	bcf	242,2,c	;volatile
   583  00067C                     
   584                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x90;
   585  00067C  0E90               	movlw	144
   586  00067E  6ED5               	movwf	213,c	;volatile
   587  000680  0012               	return		;funcret
   588  000682                     __end_of_TMR0_Initialize:
   589                           	opt callstack 0
   590                           
   591 ;; *************** function _PIN_MANAGER_Initialize *****************
   592 ;; Defined at:
   593 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1
   607 ;;      Params:         0       0       0
   608 ;;      Locals:         0       0       0
   609 ;;      Temps:          0       0       0
   610 ;;      Totals:         0       0       0
   611 ;;Total ram usage:        0 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_SYSTEM_Initialize
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text3
   621  0005DA                     __ptext3:
   622                           	opt callstack 0
   623  0005DA                     _PIN_MANAGER_Initialize:
   624                           	opt callstack 29
   625  0005DA                     
   626                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   627  0005DA  0E00               	movlw	0
   628  0005DC  6E8D               	movwf	141,c	;volatile
   629                           
   630                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   631  0005DE  0E00               	movlw	0
   632  0005E0  6E8C               	movwf	140,c	;volatile
   633                           
   634                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   635  0005E2  0E00               	movlw	0
   636  0005E4  6E89               	movwf	137,c	;volatile
   637                           
   638                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   639  0005E6  0E00               	movlw	0
   640  0005E8  6E8A               	movwf	138,c	;volatile
   641                           
   642                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   643  0005EA  0E00               	movlw	0
   644  0005EC  6E8B               	movwf	139,c	;volatile
   645                           
   646                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x04;
   647  0005EE  0E04               	movlw	4
   648  0005F0  6E96               	movwf	150,c	;volatile
   649                           
   650                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
   651  0005F2  0EC0               	movlw	192
   652  0005F4  6E92               	movwf	146,c	;volatile
   653  0005F6                     
   654                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   655  0005F6  6893               	setf	147,c	;volatile
   656                           
   657                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
   658  0005F8  0EBF               	movlw	191
   659  0005FA  6E94               	movwf	148,c	;volatile
   660                           
   661                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
   662  0005FC  0EFE               	movlw	254
   663  0005FE  6E95               	movwf	149,c	;volatile
   664                           
   665                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFC;
   666  000600  0EFC               	movlw	252
   667  000602  010F               	movlb	15	; () banked
   668  000604  6F3B               	movwf	59,b	;volatile
   669                           
   670                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3C;
   671  000606  0E3C               	movlw	60
   672  000608  6F3A               	movwf	58,b	;volatile
   673                           
   674                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
   675  00060A  0E3F               	movlw	63
   676  00060C  6F39               	movwf	57,b	;volatile
   677                           
   678                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
   679  00060E  0E06               	movlw	6
   680  000610  6F3C               	movwf	60,b	;volatile
   681                           
   682                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x00;
   683  000612  0E00               	movlw	0
   684  000614  6F38               	movwf	56,b	;volatile
   685                           
   686                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
   687  000616  0E00               	movlw	0
   688  000618  6E61               	movwf	97,c	;volatile
   689  00061A                     
   690                           ; BSR set to: 15
   691                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
   692  00061A  8EF1               	bsf	241,7,c	;volatile
   693  00061C                     
   694                           ; BSR set to: 15
   695  00061C  0012               	return		;funcret
   696  00061E                     __end_of_PIN_MANAGER_Initialize:
   697                           	opt callstack 0
   698                           
   699 ;; *************** function _OSCILLATOR_Initialize *****************
   700 ;; Defined at:
   701 ;;		line 59 in file "mcc_generated_files/mcc.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1
   715 ;;      Params:         0       0       0
   716 ;;      Locals:         0       0       0
   717 ;;      Temps:          0       0       0
   718 ;;      Totals:         0       0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_SYSTEM_Initialize
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	text4
   729  0006FA                     __ptext4:
   730                           	opt callstack 0
   731  0006FA                     _OSCILLATOR_Initialize:
   732                           	opt callstack 29
   733  0006FA                     
   734                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x60;
   735  0006FA  0E60               	movlw	96
   736  0006FC  6ED3               	movwf	211,c	;volatile
   737                           
   738                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
   739  0006FE  0E04               	movlw	4
   740  000700  6ED2               	movwf	210,c	;volatile
   741                           
   742                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
   743  000702  0E00               	movlw	0
   744  000704  6E9B               	movwf	155,c	;volatile
   745  000706  0012               	return		;funcret
   746  000708                     __end_of_OSCILLATOR_Initialize:
   747                           	opt callstack 0
   748                           
   749 ;; *************** function _EUSART1_Initialize *****************
   750 ;; Defined at:
   751 ;;		line 66 in file "mcc_generated_files/eusart1.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1
   765 ;;      Params:         0       0       0
   766 ;;      Locals:         0       0       0
   767 ;;      Temps:          0       0       0
   768 ;;      Totals:         0       0       0
   769 ;;Total ram usage:        0 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    1
   772 ;; This function calls:
   773 ;;		_EUSART1_SetErrorHandler
   774 ;;		_EUSART1_SetFramingErrorHandler
   775 ;;		_EUSART1_SetOverrunErrorHandler
   776 ;; This function is called by:
   777 ;;		_SYSTEM_Initialize
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           	psect	text5
   782  00061E                     __ptext5:
   783                           	opt callstack 0
   784  00061E                     _EUSART1_Initialize:
   785                           	opt callstack 28
   786  00061E                     
   787                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
   788  00061E  0E08               	movlw	8
   789  000620  6EB8               	movwf	184,c	;volatile
   790                           
   791                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
   792  000622  0E90               	movlw	144
   793  000624  6EAB               	movwf	171,c	;volatile
   794                           
   795                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
   796  000626  0E24               	movlw	36
   797  000628  6EAC               	movwf	172,c	;volatile
   798                           
   799                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xCF;
   800  00062A  0ECF               	movlw	207
   801  00062C  6EAF               	movwf	175,c	;volatile
   802                           
   803                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
   804  00062E  0E00               	movlw	0
   805  000630  6EB0               	movwf	176,c	;volatile
   806  000632                     
   807                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
   808  000632  0E00               	movlw	0
   809  000634  6E2A               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
   810  000636  0E00               	movlw	0
   811  000638  6E2B               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
   812  00063A  EC89  F003         	call	_EUSART1_SetFramingErrorHandler	;wreg free
   813  00063E                     
   814                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
   815  00063E  0E00               	movlw	0
   816  000640  6E2A               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
   817  000642  0E00               	movlw	0
   818  000644  6E2B               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
   819  000646  EC84  F003         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
   820  00064A                     
   821                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
   822  00064A  0E00               	movlw	0
   823  00064C  6E2A               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
   824  00064E  0E00               	movlw	0
   825  000650  6E2B               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
   826  000652  EC8E  F003         	call	_EUSART1_SetErrorHandler	;wreg free
   827  000656                     
   828                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
   829  000656  0E00               	movlw	0
   830  000658  6E29               	movwf	_eusart1RxLastError^0,c	;volatile
   831  00065A  0012               	return		;funcret
   832  00065C                     __end_of_EUSART1_Initialize:
   833                           	opt callstack 0
   834                           
   835 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
   836 ;; Defined at:
   837 ;;		line 170 in file "mcc_generated_files/eusart1.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   840 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, status,2, status,0
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1
   852 ;;      Params:         2       0       0
   853 ;;      Locals:         0       0       0
   854 ;;      Temps:          0       0       0
   855 ;;      Totals:         2       0       0
   856 ;;Total ram usage:        2 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; This function calls:
   859 ;;		Nothing
   860 ;; This function is called by:
   861 ;;		_EUSART1_Initialize
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text6
   866  000708                     __ptext6:
   867                           	opt callstack 0
   868  000708                     _EUSART1_SetOverrunErrorHandler:
   869                           	opt callstack 28
   870  000708                     
   871                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
   872  000708  C02A  F04F         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
   873  00070C  C02B  F050         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
   874  000710  0012               	return		;funcret
   875  000712                     __end_of_EUSART1_SetOverrunErrorHandler:
   876                           	opt callstack 0
   877                           
   878 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
   879 ;; Defined at:
   880 ;;		line 166 in file "mcc_generated_files/eusart1.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   883 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, status,2, status,0
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK0   BANK1
   895 ;;      Params:         2       0       0
   896 ;;      Locals:         0       0       0
   897 ;;      Temps:          0       0       0
   898 ;;      Totals:         2       0       0
   899 ;;Total ram usage:        2 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_EUSART1_Initialize
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text7
   909  000712                     __ptext7:
   910                           	opt callstack 0
   911  000712                     _EUSART1_SetFramingErrorHandler:
   912                           	opt callstack 28
   913  000712                     
   914                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
   915  000712  C02A  F051         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
   916  000716  C02B  F052         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
   917  00071A  0012               	return		;funcret
   918  00071C                     __end_of_EUSART1_SetFramingErrorHandler:
   919                           	opt callstack 0
   920                           
   921 ;; *************** function _EUSART1_SetErrorHandler *****************
   922 ;; Defined at:
   923 ;;		line 174 in file "mcc_generated_files/eusart1.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   926 ;;		 -> EUSART1_DefaultErrorHandler(1), 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1
   938 ;;      Params:         2       0       0
   939 ;;      Locals:         0       0       0
   940 ;;      Temps:          0       0       0
   941 ;;      Totals:         2       0       0
   942 ;;Total ram usage:        2 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_EUSART1_Initialize
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text8
   952  00071C                     __ptext8:
   953                           	opt callstack 0
   954  00071C                     _EUSART1_SetErrorHandler:
   955                           	opt callstack 28
   956  00071C                     
   957                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
   958  00071C  C02A  F04D         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
   959  000720  C02B  F04E         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
   960  000724  0012               	return		;funcret
   961  000726                     __end_of_EUSART1_SetErrorHandler:
   962                           	opt callstack 0
   963                           
   964 ;; *************** function _Motor_Initalize *****************
   965 ;; Defined at:
   966 ;;		line 25 in file "./Motors.h"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;		None
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		None
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1
   980 ;;      Params:         0       0       0
   981 ;;      Locals:         0       0       0
   982 ;;      Temps:          0       0       0
   983 ;;      Totals:         0       0       0
   984 ;;Total ram usage:        0 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_main
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text9
   994  00077A                     __ptext9:
   995                           	opt callstack 0
   996  00077A                     _Motor_Initalize:
   997                           	opt callstack 30
   998  00077A                     
   999                           ;./Motors.h: 27:         LATAbits.LATA3=1;
  1000  00077A  8689               	bsf	137,3,c	;volatile
  1001  00077C  0012               	return		;funcret
  1002  00077E                     __end_of_Motor_Initalize:
  1003                           	opt callstack 0
  1004                           
  1005 ;; *************** function _Chair_Position *****************
  1006 ;; Defined at:
  1007 ;;		line 106 in file "./Motors.h"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  Command         2   31[COMRAM] PTR unsigned char 
  1010 ;;		 -> STR_8(8), 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  2   31[COMRAM] int 
  1015 ;; Registers used:
  1016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1
  1022 ;;      Params:         2       0       0
  1023 ;;      Locals:         0       0       0
  1024 ;;      Temps:          0       0       0
  1025 ;;      Totals:         2       0       0
  1026 ;;Total ram usage:        2 bytes
  1027 ;; Hardware stack levels used:    1
  1028 ;; Hardware stack levels required when called:    8
  1029 ;; This function calls:
  1030 ;;		_Move_Back
  1031 ;;		_Move_Forward
  1032 ;;		_Move_Right
  1033 ;;		_Move_left
  1034 ;;		_Stop
  1035 ;;		_strcmp
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text10
  1042  000338                     __ptext10:
  1043                           	opt callstack 0
  1044  000338                     _Chair_Position:
  1045                           	opt callstack 22
  1046  000338                     
  1047                           ;./Motors.h: 106:     int Chair_Position(char Command[] );./Motors.h: 107:     {;./Motor
      +                          s.h: 108:         if(strcmp(Command,"FORWARD")==0)
  1048  000338  C049  F02A         	movff	Chair_Position@Command,strcmp@l
  1049  00033C  C04A  F02B         	movff	Chair_Position@Command+1,strcmp@l+1
  1050  000340  0E26               	movlw	low STR_2
  1051  000342  6E2C               	movwf	strcmp@r^0,c
  1052  000344  0E02               	movlw	high STR_2
  1053  000346  6E2D               	movwf	(strcmp@r+1)^0,c
  1054  000348  EC59  F002         	call	_strcmp	;wreg free
  1055  00034C  502A               	movf	?_strcmp^0,w,c
  1056  00034E  102B               	iorwf	(?_strcmp+1)^0,w,c
  1057  000350  A4D8               	btfss	status,2,c
  1058  000352  EFAD  F001         	goto	u311
  1059  000356  EFAF  F001         	goto	u310
  1060  00035A                     u311:
  1061  00035A  EFB3  F001         	goto	l1439
  1062  00035E                     u310:
  1063  00035E                     
  1064                           ;./Motors.h: 109:         {;./Motors.h: 110:             Move_Forward();
  1065  00035E  ECA2  F003         	call	_Move_Forward	;wreg free
  1066  000362  EF0D  F002         	goto	l132
  1067  000366                     l1439:
  1068  000366  C049  F02A         	movff	Chair_Position@Command,strcmp@l
  1069  00036A  C04A  F02B         	movff	Chair_Position@Command+1,strcmp@l+1
  1070  00036E  0E3B               	movlw	low STR_3
  1071  000370  6E2C               	movwf	strcmp@r^0,c
  1072  000372  0E02               	movlw	high STR_3
  1073  000374  6E2D               	movwf	(strcmp@r+1)^0,c
  1074  000376  EC59  F002         	call	_strcmp	;wreg free
  1075  00037A  502A               	movf	?_strcmp^0,w,c
  1076  00037C  102B               	iorwf	(?_strcmp+1)^0,w,c
  1077  00037E  A4D8               	btfss	status,2,c
  1078  000380  EFC4  F001         	goto	u321
  1079  000384  EFC6  F001         	goto	u320
  1080  000388                     u321:
  1081  000388  EFCA  F001         	goto	l1447
  1082  00038C                     u320:
  1083  00038C                     
  1084                           ;./Motors.h: 115:         {;./Motors.h: 116:              Move_Back();
  1085  00038C  ECAC  F003         	call	_Move_Back	;wreg free
  1086  000390  EF0D  F002         	goto	l132
  1087  000394                     l1447:
  1088  000394  C049  F02A         	movff	Chair_Position@Command,strcmp@l
  1089  000398  C04A  F02B         	movff	Chair_Position@Command+1,strcmp@l+1
  1090  00039C  0E45               	movlw	low STR_4
  1091  00039E  6E2C               	movwf	strcmp@r^0,c
  1092  0003A0  0E02               	movlw	high STR_4
  1093  0003A2  6E2D               	movwf	(strcmp@r+1)^0,c
  1094  0003A4  EC59  F002         	call	_strcmp	;wreg free
  1095  0003A8  502A               	movf	?_strcmp^0,w,c
  1096  0003AA  102B               	iorwf	(?_strcmp+1)^0,w,c
  1097  0003AC  A4D8               	btfss	status,2,c
  1098  0003AE  EFDB  F001         	goto	u331
  1099  0003B2  EFDD  F001         	goto	u330
  1100  0003B6                     u331:
  1101  0003B6  EFE1  F001         	goto	l1455
  1102  0003BA                     u330:
  1103  0003BA                     
  1104                           ;./Motors.h: 121:         {;./Motors.h: 122:             Move_left();
  1105  0003BA  EC98  F003         	call	_Move_left	;wreg free
  1106  0003BE  EF0D  F002         	goto	l132
  1107  0003C2                     l1455:
  1108  0003C2  C049  F02A         	movff	Chair_Position@Command,strcmp@l
  1109  0003C6  C04A  F02B         	movff	Chair_Position@Command+1,strcmp@l+1
  1110  0003CA  0E35               	movlw	low STR_5
  1111  0003CC  6E2C               	movwf	strcmp@r^0,c
  1112  0003CE  0E02               	movlw	high STR_5
  1113  0003D0  6E2D               	movwf	(strcmp@r+1)^0,c
  1114  0003D2  EC59  F002         	call	_strcmp	;wreg free
  1115  0003D6  502A               	movf	?_strcmp^0,w,c
  1116  0003D8  102B               	iorwf	(?_strcmp+1)^0,w,c
  1117  0003DA  A4D8               	btfss	status,2,c
  1118  0003DC  EFF2  F001         	goto	u341
  1119  0003E0  EFF4  F001         	goto	u340
  1120  0003E4                     u341:
  1121  0003E4  EFF8  F001         	goto	l1463
  1122  0003E8                     u340:
  1123  0003E8                     
  1124                           ;./Motors.h: 126:         {;./Motors.h: 127:             Move_Right();
  1125  0003E8  EC9D  F003         	call	_Move_Right	;wreg free
  1126  0003EC  EF0D  F002         	goto	l132
  1127  0003F0                     l1463:
  1128  0003F0  C049  F02A         	movff	Chair_Position@Command,strcmp@l
  1129  0003F4  C04A  F02B         	movff	Chair_Position@Command+1,strcmp@l+1
  1130  0003F8  0E40               	movlw	low STR_6
  1131  0003FA  6E2C               	movwf	strcmp@r^0,c
  1132  0003FC  0E02               	movlw	high STR_6
  1133  0003FE  6E2D               	movwf	(strcmp@r+1)^0,c
  1134  000400  EC59  F002         	call	_strcmp	;wreg free
  1135  000404  502A               	movf	?_strcmp^0,w,c
  1136  000406  102B               	iorwf	(?_strcmp+1)^0,w,c
  1137  000408  A4D8               	btfss	status,2,c
  1138  00040A  EF09  F002         	goto	u351
  1139  00040E  EF0B  F002         	goto	u350
  1140  000412                     u351:
  1141  000412  EF0D  F002         	goto	l132
  1142  000416                     u350:
  1143  000416                     
  1144                           ;./Motors.h: 132:         {;./Motors.h: 133:             Stop();
  1145  000416  EC93  F003         	call	_Stop	;wreg free
  1146  00041A                     l132:
  1147  00041A  0012               	return		;funcret
  1148  00041C                     __end_of_Chair_Position:
  1149                           	opt callstack 0
  1150                           
  1151 ;; *************** function _strcmp *****************
  1152 ;; Defined at:
  1153 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcmp.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  l               2    0[COMRAM] PTR const unsigned char 
  1156 ;;		 -> STR_8(8), 
  1157 ;;  r               2    2[COMRAM] PTR const unsigned char 
  1158 ;;		 -> STR_6(5), STR_5(6), STR_4(5), STR_3(5), 
  1159 ;;		 -> STR_2(8), 
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  2    0[COMRAM] int 
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1
  1171 ;;      Params:         4       0       0
  1172 ;;      Locals:         0       0       0
  1173 ;;      Temps:          1       0       0
  1174 ;;      Totals:         5       0       0
  1175 ;;Total ram usage:        5 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; This function calls:
  1178 ;;		Nothing
  1179 ;; This function is called by:
  1180 ;;		_Chair_Position
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text11
  1185  0004B2                     __ptext11:
  1186                           	opt callstack 0
  1187  0004B2                     _strcmp:
  1188                           	opt callstack 29
  1189  0004B2  EF5F  F002         	goto	l1417
  1190  0004B6                     l1415:
  1191  0004B6  4A2A               	infsnz	strcmp@l^0,f,c
  1192  0004B8  2A2B               	incf	(strcmp@l+1)^0,f,c
  1193  0004BA  4A2C               	infsnz	strcmp@r^0,f,c
  1194  0004BC  2A2D               	incf	(strcmp@r+1)^0,f,c
  1195  0004BE                     l1417:
  1196  0004BE  C02A  FFF6         	movff	strcmp@l,tblptrl
  1197  0004C2  C02B  FFF7         	movff	strcmp@l+1,tblptrh
  1198  0004C6                     	if	0	;tblptru may be non-zero
  1199  0004C6                     	endif
  1200  0004C6                     	if	0	;tblptru may be non-zero
  1201  0004C6                     	endif
  1202  0004C6  0008               	tblrd		*
  1203  0004C8  CFF5 F02E          	movff	tablat,??_strcmp
  1204  0004CC  C02C  FFF6         	movff	strcmp@r,tblptrl
  1205  0004D0  C02D  FFF7         	movff	strcmp@r+1,tblptrh
  1206  0004D4                     	if	0	;tblptru may be non-zero
  1207  0004D4                     	endif
  1208  0004D4                     	if	0	;tblptru may be non-zero
  1209  0004D4                     	endif
  1210  0004D4  0008               	tblrd		*
  1211  0004D6  50F5               	movf	tablat,w,c
  1212  0004D8  182E               	xorwf	??_strcmp^0,w,c
  1213  0004DA  A4D8               	btfss	status,2,c
  1214  0004DC  EF72  F002         	goto	u291
  1215  0004E0  EF74  F002         	goto	u290
  1216  0004E4                     u291:
  1217  0004E4  EF82  F002         	goto	l1421
  1218  0004E8                     u290:
  1219  0004E8  C02A  FFF6         	movff	strcmp@l,tblptrl
  1220  0004EC  C02B  FFF7         	movff	strcmp@l+1,tblptrh
  1221  0004F0                     	if	0	;tblptru may be non-zero
  1222  0004F0                     	endif
  1223  0004F0                     	if	0	;tblptru may be non-zero
  1224  0004F0                     	endif
  1225  0004F0  0008               	tblrd		*
  1226  0004F2  50F5               	movf	tablat,w,c
  1227  0004F4  0900               	iorlw	0
  1228  0004F6  A4D8               	btfss	status,2,c
  1229  0004F8  EF80  F002         	goto	u301
  1230  0004FC  EF82  F002         	goto	u300
  1231  000500                     u301:
  1232  000500  EF5B  F002         	goto	l1415
  1233  000504                     u300:
  1234  000504                     l1421:
  1235  000504  C02A  FFF6         	movff	strcmp@l,tblptrl
  1236  000508  C02B  FFF7         	movff	strcmp@l+1,tblptrh
  1237  00050C                     	if	0	;tblptru may be non-zero
  1238  00050C                     	endif
  1239  00050C                     	if	0	;tblptru may be non-zero
  1240  00050C                     	endif
  1241  00050C  0008               	tblrd		*
  1242  00050E  CFF5 F02E          	movff	tablat,??_strcmp
  1243  000512  C02C  FFF6         	movff	strcmp@r,tblptrl
  1244  000516  C02D  FFF7         	movff	strcmp@r+1,tblptrh
  1245  00051A                     	if	0	;tblptru may be non-zero
  1246  00051A                     	endif
  1247  00051A                     	if	0	;tblptru may be non-zero
  1248  00051A                     	endif
  1249  00051A  0008               	tblrd		*
  1250  00051C  50F5               	movf	tablat,w,c
  1251  00051E  5C2E               	subwf	??_strcmp^0,w,c
  1252  000520  6E2A               	movwf	?_strcmp^0,c
  1253  000522  6A2B               	clrf	(?_strcmp+1)^0,c
  1254  000524  A0D8               	btfss	status,0,c
  1255  000526  062B               	decf	(?_strcmp+1)^0,f,c
  1256  000528  0012               	return		;funcret
  1257  00052A                     __end_of_strcmp:
  1258                           	opt callstack 0
  1259                           
  1260 ;; *************** function _Stop *****************
  1261 ;; Defined at:
  1262 ;;		line 90 in file "./Motors.h"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1
  1276 ;;      Params:         0       0       0
  1277 ;;      Locals:         0       0       0
  1278 ;;      Temps:          0       0       0
  1279 ;;      Totals:         0       0       0
  1280 ;;Total ram usage:        0 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    1
  1283 ;; This function calls:
  1284 ;;		_Leftwheel_Stop
  1285 ;;		_Rightwheel_Stop
  1286 ;; This function is called by:
  1287 ;;		_Chair_Position
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text12
  1292  000726                     __ptext12:
  1293                           	opt callstack 0
  1294  000726                     _Stop:
  1295                           	opt callstack 28
  1296  000726                     
  1297                           ;./Motors.h: 91:           Leftwheel_Stop();
  1298  000726  ECC1  F003         	call	_Leftwheel_Stop	;wreg free
  1299                           
  1300                           ;./Motors.h: 92:           Rightwheel_Stop();
  1301  00072A  ECBF  F003         	call	_Rightwheel_Stop	;wreg free
  1302  00072E  0012               	return		;funcret
  1303  000730                     __end_of_Stop:
  1304                           	opt callstack 0
  1305                           
  1306 ;; *************** function _Move_left *****************
  1307 ;; Defined at:
  1308 ;;		line 80 in file "./Motors.h"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1
  1322 ;;      Params:         0       0       0
  1323 ;;      Locals:         0       0       0
  1324 ;;      Temps:          0       0       0
  1325 ;;      Totals:         0       0       0
  1326 ;;Total ram usage:        0 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; Hardware stack levels required when called:    7
  1329 ;; This function calls:
  1330 ;;		_Leftwheel_Forward
  1331 ;;		_Rightwheel_Stop
  1332 ;; This function is called by:
  1333 ;;		_Chair_Position
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text13
  1338  000730                     __ptext13:
  1339                           	opt callstack 0
  1340  000730                     _Move_left:
  1341                           	opt callstack 22
  1342  000730                     
  1343                           ;./Motors.h: 81:         Leftwheel_Forward();
  1344  000730  EC6A  F003         	call	_Leftwheel_Forward	;wreg free
  1345  000734                     
  1346                           ;./Motors.h: 82:         Rightwheel_Stop();
  1347  000734  ECBF  F003         	call	_Rightwheel_Stop	;wreg free
  1348  000738  0012               	return		;funcret
  1349  00073A                     __end_of_Move_left:
  1350                           	opt callstack 0
  1351                           
  1352 ;; *************** function _Rightwheel_Stop *****************
  1353 ;; Defined at:
  1354 ;;		line 64 in file "./Motors.h"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		None
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1
  1368 ;;      Params:         0       0       0
  1369 ;;      Locals:         0       0       0
  1370 ;;      Temps:          0       0       0
  1371 ;;      Totals:         0       0       0
  1372 ;;Total ram usage:        0 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_Move_left
  1378 ;;		_Stop
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text14
  1383  00077E                     __ptext14:
  1384                           	opt callstack 0
  1385  00077E                     _Rightwheel_Stop:
  1386                           	opt callstack 28
  1387  00077E                     
  1388                           ;./Motors.h: 65:          LATEbits.LATE0=0;
  1389  00077E  908D               	bcf	141,0,c	;volatile
  1390  000780  0012               	return		;funcret
  1391  000782                     __end_of_Rightwheel_Stop:
  1392                           	opt callstack 0
  1393                           
  1394 ;; *************** function _Move_Right *****************
  1395 ;; Defined at:
  1396 ;;		line 85 in file "./Motors.h"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1
  1410 ;;      Params:         0       0       0
  1411 ;;      Locals:         0       0       0
  1412 ;;      Temps:          0       0       0
  1413 ;;      Totals:         0       0       0
  1414 ;;Total ram usage:        0 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:    1
  1417 ;; This function calls:
  1418 ;;		_Leftwheel_Stop
  1419 ;;		_Rightwheel_Forward
  1420 ;; This function is called by:
  1421 ;;		_Chair_Position
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text15
  1426  00073A                     __ptext15:
  1427                           	opt callstack 0
  1428  00073A                     _Move_Right:
  1429                           	opt callstack 28
  1430  00073A                     
  1431                           ;./Motors.h: 86:         Leftwheel_Stop();
  1432  00073A  ECC1  F003         	call	_Leftwheel_Stop	;wreg free
  1433                           
  1434                           ;./Motors.h: 87:         Rightwheel_Forward();
  1435  00073E  ECB1  F003         	call	_Rightwheel_Forward	;wreg free
  1436  000742  0012               	return		;funcret
  1437  000744                     __end_of_Move_Right:
  1438                           	opt callstack 0
  1439                           
  1440 ;; *************** function _Leftwheel_Stop *****************
  1441 ;; Defined at:
  1442 ;;		line 59 in file "./Motors.h"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		None
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1
  1456 ;;      Params:         0       0       0
  1457 ;;      Locals:         0       0       0
  1458 ;;      Temps:          0       0       0
  1459 ;;      Totals:         0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_Move_Right
  1466 ;;		_Stop
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text16
  1471  000782                     __ptext16:
  1472                           	opt callstack 0
  1473  000782                     _Leftwheel_Stop:
  1474                           	opt callstack 28
  1475  000782                     
  1476                           ;./Motors.h: 60:          LATAbits.LATA0=0;
  1477  000782  9089               	bcf	137,0,c	;volatile
  1478  000784  0012               	return		;funcret
  1479  000786                     __end_of_Leftwheel_Stop:
  1480                           	opt callstack 0
  1481                           
  1482 ;; *************** function _Move_Forward *****************
  1483 ;; Defined at:
  1484 ;;		line 69 in file "./Motors.h"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1
  1498 ;;      Params:         0       0       0
  1499 ;;      Locals:         0       0       0
  1500 ;;      Temps:          0       0       0
  1501 ;;      Totals:         0       0       0
  1502 ;;Total ram usage:        0 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    7
  1505 ;; This function calls:
  1506 ;;		_Leftwheel_Forward
  1507 ;;		_Rightwheel_Forward
  1508 ;; This function is called by:
  1509 ;;		_Chair_Position
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text17
  1514  000744                     __ptext17:
  1515                           	opt callstack 0
  1516  000744                     _Move_Forward:
  1517                           	opt callstack 22
  1518  000744                     
  1519                           ;./Motors.h: 70:         Leftwheel_Forward();
  1520  000744  EC6A  F003         	call	_Leftwheel_Forward	;wreg free
  1521  000748                     
  1522                           ;./Motors.h: 71:         Rightwheel_Forward();
  1523  000748  ECB1  F003         	call	_Rightwheel_Forward	;wreg free
  1524  00074C  0012               	return		;funcret
  1525  00074E                     __end_of_Move_Forward:
  1526                           	opt callstack 0
  1527                           
  1528 ;; *************** function _Rightwheel_Forward *****************
  1529 ;; Defined at:
  1530 ;;		line 40 in file "./Motors.h"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		None
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1
  1544 ;;      Params:         0       0       0
  1545 ;;      Locals:         0       0       0
  1546 ;;      Temps:          0       0       0
  1547 ;;      Totals:         0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_Move_Forward
  1554 ;;		_Move_Right
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text18
  1559  000762                     __ptext18:
  1560                           	opt callstack 0
  1561  000762                     _Rightwheel_Forward:
  1562                           	opt callstack 28
  1563  000762                     
  1564                           ;./Motors.h: 41:         LATAbits.LATA4=1;
  1565  000762  8889               	bsf	137,4,c	;volatile
  1566                           
  1567                           ;./Motors.h: 42:         LATAbits.LATA5=0;
  1568  000764  9A89               	bcf	137,5,c	;volatile
  1569                           
  1570                           ;./Motors.h: 43:         LATEbits.LATE0=1;
  1571  000766  808D               	bsf	141,0,c	;volatile
  1572  000768  0012               	return		;funcret
  1573  00076A                     __end_of_Rightwheel_Forward:
  1574                           	opt callstack 0
  1575                           
  1576 ;; *************** function _Leftwheel_Forward *****************
  1577 ;; Defined at:
  1578 ;;		line 30 in file "./Motors.h"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1
  1592 ;;      Params:         0       0       0
  1593 ;;      Locals:         0       0       0
  1594 ;;      Temps:          0       0       0
  1595 ;;      Totals:         0       0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    6
  1599 ;; This function calls:
  1600 ;;		_printf
  1601 ;; This function is called by:
  1602 ;;		_Move_Forward
  1603 ;;		_Move_left
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text19
  1608  0006D4                     __ptext19:
  1609                           	opt callstack 0
  1610  0006D4                     _Leftwheel_Forward:
  1611                           	opt callstack 22
  1612  0006D4  9489               	bcf	137,2,c	;volatile
  1613  0006D6  8289               	bsf	137,1,c	;volatile
  1614  0006D8  8089               	bsf	137,0,c	;volatile
  1615  0006DA                     
  1616                           ;./Motors.h: 34:         printf("ok");
  1617  0006DA  0E4A               	movlw	low STR_1
  1618  0006DC  6E43               	movwf	printf@fmt^0,c
  1619  0006DE  0E02               	movlw	high STR_1
  1620  0006E0  6E44               	movwf	(printf@fmt+1)^0,c
  1621  0006E2  EC41  F003         	call	_printf	;wreg free
  1622  0006E6  0012               	return		;funcret
  1623  0006E8                     __end_of_Leftwheel_Forward:
  1624                           	opt callstack 0
  1625                           
  1626 ;; *************** function _printf *****************
  1627 ;; Defined at:
  1628 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  fmt             2   25[COMRAM] PTR const unsigned char 
  1631 ;;		 -> STR_9(7), STR_7(29), STR_1(3), 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  ap              2   29[COMRAM] PTR void [1]
  1634 ;;		 -> ?_printf(2), 
  1635 ;;  ret             2    0        int 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  2   25[COMRAM] int 
  1638 ;; Registers used:
  1639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1
  1645 ;;      Params:         2       0       0
  1646 ;;      Locals:         4       0       0
  1647 ;;      Temps:          0       0       0
  1648 ;;      Totals:         6       0       0
  1649 ;;Total ram usage:        6 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    5
  1652 ;; This function calls:
  1653 ;;		_vfprintf
  1654 ;; This function is called by:
  1655 ;;		_Leftwheel_Forward
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text20
  1661  000682                     __ptext20:
  1662                           	opt callstack 0
  1663  000682                     _printf:
  1664                           	opt callstack 25
  1665  000682  0E45               	movlw	low (?_printf+2)
  1666  000684  6E47               	movwf	printf@ap^0,c
  1667  000686  0E00               	movlw	high (?_printf+2)
  1668  000688  6E48               	movwf	(printf@ap+1)^0,c
  1669  00068A  0E00               	movlw	0
  1670  00068C  6E3B               	movwf	vfprintf@fp^0,c
  1671  00068E  0E00               	movlw	0
  1672  000690  6E3C               	movwf	(vfprintf@fp+1)^0,c
  1673  000692  C043  F03D         	movff	printf@fmt,vfprintf@fmt
  1674  000696  C044  F03E         	movff	printf@fmt+1,vfprintf@fmt+1
  1675  00069A  0E47               	movlw	low printf@ap
  1676  00069C  6E3F               	movwf	vfprintf@ap^0,c
  1677  00069E  0E00               	movlw	high printf@ap
  1678  0006A0  6E40               	movwf	(vfprintf@ap+1)^0,c
  1679  0006A2  EC95  F002         	call	_vfprintf	;wreg free
  1680  0006A6  0012               	return		;funcret
  1681  0006A8                     __end_of_printf:
  1682                           	opt callstack 0
  1683                           
  1684 ;; *************** function _vfprintf *****************
  1685 ;; Defined at:
  1686 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1689 ;;		 -> NULL(0), 
  1690 ;;  fmt             2   19[COMRAM] PTR const unsigned char 
  1691 ;;		 -> STR_9(7), STR_7(29), STR_1(3), 
  1692 ;;  ap              2   21[COMRAM] PTR PTR void 
  1693 ;;		 -> printf@ap(2), 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  cfmt            2   23[COMRAM] PTR unsigned char 
  1696 ;;		 -> STR_9(7), STR_7(29), STR_1(3), 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  2   17[COMRAM] int 
  1699 ;; Registers used:
  1700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1
  1706 ;;      Params:         6       0       0
  1707 ;;      Locals:         2       0       0
  1708 ;;      Temps:          0       0       0
  1709 ;;      Totals:         8       0       0
  1710 ;;Total ram usage:        8 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    4
  1713 ;; This function calls:
  1714 ;;		_vfpfcnvrt
  1715 ;; This function is called by:
  1716 ;;		_printf
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text21
  1721  00052A                     __ptext21:
  1722                           	opt callstack 0
  1723  00052A                     _vfprintf:
  1724                           	opt callstack 25
  1725  00052A                     
  1726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1727  00052A  C03D  F041         	movff	vfprintf@fmt,vfprintf@cfmt
  1728  00052E  C03E  F042         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1729  000532                     
  1730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1731  000532  0E00               	movlw	0
  1732  000534  6E22               	movwf	(_nout+1)^0,c
  1733  000536  0E00               	movlw	0
  1734  000538  6E21               	movwf	_nout^0,c
  1735                           
  1736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1737  00053A  EFB1  F002         	goto	l1379
  1738  00053E                     l1377:
  1739                           
  1740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1741  00053E  C03B  F035         	movff	vfprintf@fp,vfpfcnvrt@fp
  1742  000542  C03C  F036         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1743  000546  0E41               	movlw	low vfprintf@cfmt
  1744  000548  6E37               	movwf	vfpfcnvrt@fmt^0,c
  1745  00054A  0E00               	movlw	high vfprintf@cfmt
  1746  00054C  6E38               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1747  00054E  C03F  F039         	movff	vfprintf@ap,vfpfcnvrt@ap
  1748  000552  C040  F03A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1749  000556  EC27  F001         	call	_vfpfcnvrt	;wreg free
  1750  00055A  5035               	movf	?_vfpfcnvrt^0,w,c
  1751  00055C  2621               	addwf	_nout^0,f,c
  1752  00055E  5036               	movf	(?_vfpfcnvrt+1)^0,w,c
  1753  000560  2222               	addwfc	(_nout+1)^0,f,c
  1754  000562                     l1379:
  1755                           
  1756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1757  000562  C041  FFF6         	movff	vfprintf@cfmt,tblptrl
  1758  000566  C042  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1759  00056A                     	if	0	;tblptru may be non-zero
  1760  00056A                     	endif
  1761  00056A                     	if	0	;tblptru may be non-zero
  1762  00056A                     	endif
  1763  00056A  0008               	tblrd		*
  1764  00056C  50F5               	movf	tablat,w,c
  1765  00056E  0900               	iorlw	0
  1766  000570  A4D8               	btfss	status,2,c
  1767  000572  EFBD  F002         	goto	u281
  1768  000576  EFBF  F002         	goto	u280
  1769  00057A                     u281:
  1770  00057A  EF9F  F002         	goto	l1377
  1771  00057E                     u280:
  1772  00057E                     
  1773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1774  00057E  C021  F03B         	movff	_nout,?_vfprintf
  1775  000582  C022  F03C         	movff	_nout+1,?_vfprintf+1
  1776  000586  0012               	return		;funcret
  1777  000588                     __end_of_vfprintf:
  1778                           	opt callstack 0
  1779                           
  1780 ;; *************** function _vfpfcnvrt *****************
  1781 ;; Defined at:
  1782 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1785 ;;		 -> NULL(0), 
  1786 ;;  fmt             2   13[COMRAM] PTR PTR unsigned char 
  1787 ;;		 -> vfprintf@cfmt(2), 
  1788 ;;  ap              2   15[COMRAM] PTR PTR void 
  1789 ;;		 -> printf@ap(2), 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  llu             8    0        unsigned long long 
  1792 ;;  ll              8    0        long long 
  1793 ;;  f               4    0        long long 
  1794 ;;  vp              3    0        PTR void 
  1795 ;;  ct              3    0        unsigned char [3]
  1796 ;;  cp              3    0        PTR unsigned char 
  1797 ;;  i               2    0        int 
  1798 ;;  done            2    0        int 
  1799 ;;  c               1    0        unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  2   11[COMRAM] int 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1
  1809 ;;      Params:         6       0       0
  1810 ;;      Locals:         0       0       0
  1811 ;;      Temps:          0       0       0
  1812 ;;      Totals:         6       0       0
  1813 ;;Total ram usage:        6 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    3
  1816 ;; This function calls:
  1817 ;;		_fputc
  1818 ;; This function is called by:
  1819 ;;		_vfprintf
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text22
  1824  00024E                     __ptext22:
  1825                           	opt callstack 0
  1826  00024E                     _vfpfcnvrt:
  1827                           	opt callstack 25
  1828  00024E                     
  1829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1830  00024E  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1831  000252  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1832  000256  CFDE FFF6          	movff	postinc2,tblptrl
  1833  00025A  CFDD FFF7          	movff	postdec2,tblptrh
  1834  00025E                     	if	0	;tblptru may be non-zero
  1835  00025E                     	endif
  1836  00025E                     	if	0	;tblptru may be non-zero
  1837  00025E                     	endif
  1838  00025E  0008               	tblrd		*
  1839  000260  50F5               	movf	tablat,w,c
  1840  000262  0A25               	xorlw	37
  1841  000264  A4D8               	btfss	status,2,c
  1842  000266  EF37  F001         	goto	u261
  1843  00026A  EF39  F001         	goto	u260
  1844  00026E                     u261:
  1845  00026E  EF80  F001         	goto	l1365
  1846  000272                     u260:
  1847  000272                     
  1848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1849  000272  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1850  000276  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1851  00027A  2ADE               	incf	postinc2,f,c
  1852  00027C  0E00               	movlw	0
  1853  00027E  22DD               	addwfc	postdec2,f,c
  1854  000280                     
  1855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1856  000280  0E00               	movlw	0
  1857  000282  6E24               	movwf	(_width+1)^0,c
  1858  000284  0E00               	movlw	0
  1859  000286  6E23               	movwf	_width^0,c
  1860  000288  C023  F027         	movff	_width,_flags
  1861  00028C  C024  F028         	movff	_width+1,_flags+1
  1862  000290                     
  1863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1864  000290  6825               	setf	_prec^0,c
  1865  000292  6826               	setf	(_prec+1)^0,c
  1866  000294                     
  1867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1868  000294  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1869  000298  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1870  00029C  CFDE FFF6          	movff	postinc2,tblptrl
  1871  0002A0  CFDD FFF7          	movff	postdec2,tblptrh
  1872  0002A4                     	if	0	;tblptru may be non-zero
  1873  0002A4                     	endif
  1874  0002A4                     	if	0	;tblptru may be non-zero
  1875  0002A4                     	endif
  1876  0002A4  0008               	tblrd		*
  1877  0002A6  50F5               	movf	tablat,w,c
  1878  0002A8  0A25               	xorlw	37
  1879  0002AA  A4D8               	btfss	status,2,c
  1880  0002AC  EF5A  F001         	goto	u271
  1881  0002B0  EF5C  F001         	goto	u270
  1882  0002B4                     u271:
  1883  0002B4  EF73  F001         	goto	l1359
  1884  0002B8                     u270:
  1885  0002B8                     
  1886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1887  0002B8  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1888  0002BC  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1889  0002C0  2ADE               	incf	postinc2,f,c
  1890  0002C2  0E00               	movlw	0
  1891  0002C4  22DD               	addwfc	postdec2,f,c
  1892  0002C6                     
  1893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1894  0002C6  0E00               	movlw	0
  1895  0002C8  6E2D               	movwf	(fputc@c+1)^0,c
  1896  0002CA  0E25               	movlw	37
  1897  0002CC  6E2C               	movwf	fputc@c^0,c
  1898  0002CE  C035  F02E         	movff	vfpfcnvrt@fp,fputc@fp
  1899  0002D2  C036  F02F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1900  0002D6  EC0E  F002         	call	_fputc	;wreg free
  1901  0002DA                     l1355:
  1902                           
  1903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1904  0002DA  0E00               	movlw	0
  1905  0002DC  6E36               	movwf	(?_vfpfcnvrt+1)^0,c
  1906  0002DE  0E01               	movlw	1
  1907  0002E0  6E35               	movwf	?_vfpfcnvrt^0,c
  1908  0002E2  EF9B  F001         	goto	l328
  1909  0002E6                     l1359:
  1910                           
  1911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1912  0002E6  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1913  0002EA  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1914  0002EE  2ADE               	incf	postinc2,f,c
  1915  0002F0  0E00               	movlw	0
  1916  0002F2  22DD               	addwfc	postdec2,f,c
  1917  0002F4                     
  1918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1919  0002F4  0E00               	movlw	0
  1920  0002F6  6E36               	movwf	(?_vfpfcnvrt+1)^0,c
  1921  0002F8  0E00               	movlw	0
  1922  0002FA  6E35               	movwf	?_vfpfcnvrt^0,c
  1923  0002FC  EF9B  F001         	goto	l328
  1924  000300                     l1365:
  1925                           
  1926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1927  000300  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1928  000304  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1929  000308  CFDE FFF6          	movff	postinc2,tblptrl
  1930  00030C  CFDD FFF7          	movff	postdec2,tblptrh
  1931  000310                     	if	0	;tblptru may be non-zero
  1932  000310                     	endif
  1933  000310                     	if	0	;tblptru may be non-zero
  1934  000310                     	endif
  1935  000310  0008               	tblrd		*
  1936  000312  50F5               	movf	tablat,w,c
  1937  000314  6E2C               	movwf	fputc@c^0,c
  1938  000316  6A2D               	clrf	(fputc@c+1)^0,c
  1939  000318  C035  F02E         	movff	vfpfcnvrt@fp,fputc@fp
  1940  00031C  C036  F02F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1941  000320  EC0E  F002         	call	_fputc	;wreg free
  1942  000324                     
  1943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1944  000324  C037  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1945  000328  C038  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1946  00032C  2ADE               	incf	postinc2,f,c
  1947  00032E  0E00               	movlw	0
  1948  000330  22DD               	addwfc	postdec2,f,c
  1949  000332  EF6D  F001         	goto	l1355
  1950  000336                     l328:
  1951  000336  0012               	return		;funcret
  1952  000338                     __end_of_vfpfcnvrt:
  1953                           	opt callstack 0
  1954                           
  1955 ;; *************** function _fputc *****************
  1956 ;; Defined at:
  1957 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  c               2    2[COMRAM] int 
  1960 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1961 ;;		 -> NULL(0), 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  2    2[COMRAM] int 
  1966 ;; Registers used:
  1967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1
  1973 ;;      Params:         4       0       0
  1974 ;;      Locals:         0       0       0
  1975 ;;      Temps:          5       0       0
  1976 ;;      Totals:         9       0       0
  1977 ;;Total ram usage:        9 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    2
  1980 ;; This function calls:
  1981 ;;		_putch
  1982 ;; This function is called by:
  1983 ;;		_vfpfcnvrt
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text23
  1988  00041C                     __ptext23:
  1989                           	opt callstack 0
  1990  00041C                     _fputc:
  1991                           	opt callstack 25
  1992  00041C  502E               	movf	fputc@fp^0,w,c
  1993  00041E  102F               	iorwf	(fputc@fp+1)^0,w,c
  1994  000420  B4D8               	btfsc	status,2,c
  1995  000422  EF15  F002         	goto	u221
  1996  000426  EF17  F002         	goto	u220
  1997  00042A                     u221:
  1998  00042A  EF20  F002         	goto	l1331
  1999  00042E                     u220:
  2000  00042E  502E               	movf	fputc@fp^0,w,c
  2001  000430  102F               	iorwf	(fputc@fp+1)^0,w,c
  2002  000432  A4D8               	btfss	status,2,c
  2003  000434  EF1E  F002         	goto	u231
  2004  000438  EF20  F002         	goto	u230
  2005  00043C                     u231:
  2006  00043C  EF25  F002         	goto	l1333
  2007  000440                     u230:
  2008  000440                     l1331:
  2009  000440  502C               	movf	fputc@c^0,w,c
  2010  000442  ECA7  F003         	call	_putch
  2011  000446  EF58  F002         	goto	l1020
  2012  00044A                     l1333:
  2013  00044A  EE20 F004          	lfsr	2,4
  2014  00044E  502E               	movf	fputc@fp^0,w,c
  2015  000450  26D9               	addwf	fsr2l,f,c
  2016  000452  502F               	movf	(fputc@fp+1)^0,w,c
  2017  000454  22DA               	addwfc	fsr2h,f,c
  2018  000456  50DE               	movf	postinc2,w,c
  2019  000458  10DE               	iorwf	postinc2,w,c
  2020  00045A  B4D8               	btfsc	status,2,c
  2021  00045C  EF32  F002         	goto	u241
  2022  000460  EF34  F002         	goto	u240
  2023  000464                     u241:
  2024  000464  EF4F  F002         	goto	l1337
  2025  000468                     u240:
  2026  000468  EE20 F004          	lfsr	2,4
  2027  00046C  502E               	movf	fputc@fp^0,w,c
  2028  00046E  26D9               	addwf	fsr2l,f,c
  2029  000470  502F               	movf	(fputc@fp+1)^0,w,c
  2030  000472  22DA               	addwfc	fsr2h,f,c
  2031  000474  EE10 F002          	lfsr	1,2
  2032  000478  502E               	movf	fputc@fp^0,w,c
  2033  00047A  26E1               	addwf	fsr1l,f,c
  2034  00047C  502F               	movf	(fputc@fp+1)^0,w,c
  2035  00047E  22E2               	addwfc	fsr1h,f,c
  2036  000480  50DE               	movf	postinc2,w,c
  2037  000482  5CE6               	subwf	postinc1,w,c
  2038  000484  50E6               	movf	postinc1,w,c
  2039  000486  0A80               	xorlw	128
  2040  000488  6E34               	movwf	(??_fputc+4)^0,c
  2041  00048A  50DE               	movf	postinc2,w,c
  2042  00048C  0A80               	xorlw	128
  2043  00048E  5834               	subwfb	(??_fputc+4)^0,w,c
  2044  000490  B0D8               	btfsc	status,0,c
  2045  000492  EF4D  F002         	goto	u251
  2046  000496  EF4F  F002         	goto	u250
  2047  00049A                     u251:
  2048  00049A  EF58  F002         	goto	l1020
  2049  00049E                     u250:
  2050  00049E                     l1337:
  2051  00049E  EE20 F002          	lfsr	2,2
  2052  0004A2  502E               	movf	fputc@fp^0,w,c
  2053  0004A4  26D9               	addwf	fsr2l,f,c
  2054  0004A6  502F               	movf	(fputc@fp+1)^0,w,c
  2055  0004A8  22DA               	addwfc	fsr2h,f,c
  2056  0004AA  2ADE               	incf	postinc2,f,c
  2057  0004AC  0E00               	movlw	0
  2058  0004AE  22DD               	addwfc	postdec2,f,c
  2059  0004B0                     l1020:
  2060  0004B0  0012               	return		;funcret
  2061  0004B2                     __end_of_fputc:
  2062                           	opt callstack 0
  2063                           
  2064 ;; *************** function _putch *****************
  2065 ;; Defined at:
  2066 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  txData          1    wreg     unsigned char 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  txData          1    1[COMRAM] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1
  2080 ;;      Params:         0       0       0
  2081 ;;      Locals:         1       0       0
  2082 ;;      Temps:          0       0       0
  2083 ;;      Totals:         1       0       0
  2084 ;;Total ram usage:        1 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    1
  2087 ;; This function calls:
  2088 ;;		_EUSART1_Write
  2089 ;; This function is called by:
  2090 ;;		_fputc
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text24
  2095  00074E                     __ptext24:
  2096                           	opt callstack 0
  2097  00074E                     _putch:
  2098                           	opt callstack 25
  2099                           
  2100                           ;incstack = 0
  2101                           ;putch@txData stored from wreg
  2102  00074E  6E2B               	movwf	putch@txData^0,c
  2103  000750                     
  2104                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  2105  000750  502B               	movf	putch@txData^0,w,c
  2106  000752  EC5F  F003         	call	_EUSART1_Write
  2107  000756  0012               	return		;funcret
  2108  000758                     __end_of_putch:
  2109                           	opt callstack 0
  2110                           
  2111 ;; *************** function _EUSART1_Write *****************
  2112 ;; Defined at:
  2113 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  txData          1    wreg     unsigned char 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  txData          1    0[COMRAM] unsigned char 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1
  2127 ;;      Params:         0       0       0
  2128 ;;      Locals:         1       0       0
  2129 ;;      Temps:          0       0       0
  2130 ;;      Totals:         1       0       0
  2131 ;;Total ram usage:        1 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_putch
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text25
  2141  0006BE                     __ptext25:
  2142                           	opt callstack 0
  2143  0006BE                     _EUSART1_Write:
  2144                           	opt callstack 25
  2145                           
  2146                           ;incstack = 0
  2147                           ;EUSART1_Write@txData stored from wreg
  2148  0006BE  6E2A               	movwf	EUSART1_Write@txData^0,c
  2149  0006C0                     l268:
  2150                           
  2151                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  2152  0006C0  A89E               	btfss	158,4,c	;volatile
  2153  0006C2  EF65  F003         	goto	u11
  2154  0006C6  EF67  F003         	goto	u10
  2155  0006CA                     u11:
  2156  0006CA  EF60  F003         	goto	l268
  2157  0006CE                     u10:
  2158  0006CE                     
  2159                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  2160  0006CE  C02A  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2161  0006D2  0012               	return		;funcret
  2162  0006D4                     __end_of_EUSART1_Write:
  2163                           	opt callstack 0
  2164                           
  2165 ;; *************** function _Move_Back *****************
  2166 ;; Defined at:
  2167 ;;		line 75 in file "./Motors.h"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1
  2181 ;;      Params:         0       0       0
  2182 ;;      Locals:         0       0       0
  2183 ;;      Temps:          0       0       0
  2184 ;;      Totals:         0       0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    1
  2188 ;; This function calls:
  2189 ;;		_Leftwheel_Back
  2190 ;;		_Rightwheel_Back
  2191 ;; This function is called by:
  2192 ;;		_Chair_Position
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text26
  2197  000758                     __ptext26:
  2198                           	opt callstack 0
  2199  000758                     _Move_Back:
  2200                           	opt callstack 28
  2201  000758                     
  2202                           ;./Motors.h: 76:         Leftwheel_Back();
  2203  000758  ECB9  F003         	call	_Leftwheel_Back	;wreg free
  2204                           
  2205                           ;./Motors.h: 77:         Rightwheel_Back();
  2206  00075C  ECB5  F003         	call	_Rightwheel_Back	;wreg free
  2207  000760  0012               	return		;funcret
  2208  000762                     __end_of_Move_Back:
  2209                           	opt callstack 0
  2210                           
  2211 ;; *************** function _Rightwheel_Back *****************
  2212 ;; Defined at:
  2213 ;;		line 52 in file "./Motors.h"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		None
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1
  2227 ;;      Params:         0       0       0
  2228 ;;      Locals:         0       0       0
  2229 ;;      Temps:          0       0       0
  2230 ;;      Totals:         0       0       0
  2231 ;;Total ram usage:        0 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_Move_Back
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text27
  2241  00076A                     __ptext27:
  2242                           	opt callstack 0
  2243  00076A                     _Rightwheel_Back:
  2244                           	opt callstack 28
  2245  00076A                     
  2246                           ;./Motors.h: 53:         LATAbits.LATA4=0;
  2247  00076A  9889               	bcf	137,4,c	;volatile
  2248                           
  2249                           ;./Motors.h: 54:         LATAbits.LATA5=1;
  2250  00076C  8A89               	bsf	137,5,c	;volatile
  2251                           
  2252                           ;./Motors.h: 55:         LATEbits.LATE0=1;
  2253  00076E  808D               	bsf	141,0,c	;volatile
  2254  000770  0012               	return		;funcret
  2255  000772                     __end_of_Rightwheel_Back:
  2256                           	opt callstack 0
  2257                           
  2258 ;; *************** function _Leftwheel_Back *****************
  2259 ;; Defined at:
  2260 ;;		line 46 in file "./Motors.h"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		None
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1
  2274 ;;      Params:         0       0       0
  2275 ;;      Locals:         0       0       0
  2276 ;;      Temps:          0       0       0
  2277 ;;      Totals:         0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_Move_Back
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text28
  2288  000772                     __ptext28:
  2289                           	opt callstack 0
  2290  000772                     _Leftwheel_Back:
  2291                           	opt callstack 28
  2292  000772                     
  2293                           ;./Motors.h: 47:         LATAbits.LATA2=0;
  2294  000772  9489               	bcf	137,2,c	;volatile
  2295                           
  2296                           ;./Motors.h: 48:         LATAbits.LATA1=1;
  2297  000774  8289               	bsf	137,1,c	;volatile
  2298                           
  2299                           ;./Motors.h: 49:         LATAbits.LATA0=1;
  2300  000776  8089               	bsf	137,0,c	;volatile
  2301  000778  0012               	return		;funcret
  2302  00077A                     __end_of_Leftwheel_Back:
  2303                           	opt callstack 0
  2304                           
  2305                           	psect	rparam
  2306  0000                     tosu	equ	0xFFF
  2307                           tosh	equ	0xFFE
  2308                           tosl	equ	0xFFD
  2309                           stkptr	equ	0xFFC
  2310                           pclatu	equ	0xFFB
  2311                           pclath	equ	0xFFA
  2312                           pcl	equ	0xFF9
  2313                           tblptru	equ	0xFF8
  2314                           tblptrh	equ	0xFF7
  2315                           tblptrl	equ	0xFF6
  2316                           tablat	equ	0xFF5
  2317                           prodh	equ	0xFF4
  2318                           prodl	equ	0xFF3
  2319                           indf0	equ	0xFEF
  2320                           postinc0	equ	0xFEE
  2321                           postdec0	equ	0xFED
  2322                           preinc0	equ	0xFEC
  2323                           plusw0	equ	0xFEB
  2324                           fsr0h	equ	0xFEA
  2325                           fsr0l	equ	0xFE9
  2326                           wreg	equ	0xFE8
  2327                           indf1	equ	0xFE7
  2328                           postinc1	equ	0xFE6
  2329                           postdec1	equ	0xFE5
  2330                           preinc1	equ	0xFE4
  2331                           plusw1	equ	0xFE3
  2332                           fsr1h	equ	0xFE2
  2333                           fsr1l	equ	0xFE1
  2334                           bsr	equ	0xFE0
  2335                           indf2	equ	0xFDF
  2336                           postinc2	equ	0xFDE
  2337                           postdec2	equ	0xFDD
  2338                           preinc2	equ	0xFDC
  2339                           plusw2	equ	0xFDB
  2340                           fsr2h	equ	0xFDA
  2341                           fsr2l	equ	0xFD9
  2342                           status	equ	0xFD8


Data Sizes:
    Strings     76
    Constant    0
    Data        0
    BSS         41
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      84
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[8]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_8(CODE[8]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_9(CODE[7]), STR_7(CODE[29]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S1296_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_9(CODE[7]), STR_7(CODE[29]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_9(CODE[7]), STR_7(CODE[29]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    Chair_Position@Command	PTR unsigned char  size(2) Largest target is 8
		 -> STR_8(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_Chair_Position
    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _Leftwheel_Forward->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    6758
                                             33 COMRAM     2     2      0
                     _Chair_Position
                    _Motor_Initalize
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Motor_Initalize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Chair_Position                                       2     0      2    4662
                                             31 COMRAM     2     0      2
                          _Move_Back
                       _Move_Forward
                         _Move_Right
                          _Move_left
                               _Stop
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4     872
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _Stop                                                 0     0      0       0
                     _Leftwheel_Stop
                    _Rightwheel_Stop
 ---------------------------------------------------------------------------------
 (2) _Move_left                                            0     0      0    1802
                  _Leftwheel_Forward
                    _Rightwheel_Stop
 ---------------------------------------------------------------------------------
 (3) _Rightwheel_Stop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Move_Right                                           0     0      0       0
                     _Leftwheel_Stop
                 _Rightwheel_Forward
 ---------------------------------------------------------------------------------
 (3) _Leftwheel_Stop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Move_Forward                                         0     0      0    1802
                  _Leftwheel_Forward
                 _Rightwheel_Forward
 ---------------------------------------------------------------------------------
 (3) _Rightwheel_Forward                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Leftwheel_Forward                                    0     0      0    1802
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    1802
                                             25 COMRAM     6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    1522
                                             17 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    34      6    1172
                                             11 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     746
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Move_Back                                            0     0      0       0
                     _Leftwheel_Back
                    _Rightwheel_Back
 ---------------------------------------------------------------------------------
 (3) _Rightwheel_Back                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Leftwheel_Back                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Chair_Position
     _Move_Back
       _Leftwheel_Back
       _Rightwheel_Back
     _Move_Forward
       _Leftwheel_Forward
         _printf
           _vfprintf
             _vfpfcnvrt
               _fputc
                 _putch
                   _EUSART1_Write
       _Rightwheel_Forward
     _Move_Right
       _Leftwheel_Stop
       _Rightwheel_Forward
     _Move_left
       _Leftwheel_Forward
         _printf
           _vfprintf
             _vfpfcnvrt
               _fputc
                 _putch
                   _EUSART1_Write
       _Rightwheel_Stop
     _Stop
       _Leftwheel_Stop
       _Rightwheel_Stop
     _strcmp
   _Motor_Initalize
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      54       1       88.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      54       6        0.0%
DATA                 0      0      54       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 07 21:31:00 2020

                                            l20 0706                                              l17 06F8  
                                            l59 061C                                              l92 06D4  
                                            l94 06D6                                              l96 06D8  
                                            l89 077C                                              l98 06E6  
                                            u10 06CE                                              u11 06CA  
                               _timer0ReloadVal 0053                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                             l101 0768  
                                           l110 0784                                             l104 0778  
                                           l113 0780                                             l122 0738  
                                           l107 0770                                             l116 074C  
                                           l132 041A                                             l125 0742  
                                           l119 0760                                             l128 072E  
                                           l244 065A                                             l333 057E  
                                           l334 0586                                             l271 06D2  
                                           l183 0680                                             l328 0336  
                                           l268 06C0                                             l292 0710  
                                           l277 0756                                             l295 0724  
                                           l289 071A                                    __CFG_CPB$OFF 000000  
                                           u220 042E                                             u300 0504  
                                           u221 042A                                             u301 0500  
                                           u230 0440                                             u310 035E  
                                           u231 043C                                             u311 035A  
                                           u240 0468                                             u320 038C  
                                           u241 0464                                             u321 0388  
                                           u250 049E                                             u330 03BA  
                                           u251 049A                                             u331 03B6  
                                           u260 0272                                             u340 03E8  
                                           u261 026E                                             u341 03E4  
                                           u270 02B8                                             u350 0416  
                                           u271 02B4                                             u351 0412  
                                           u280 057E                                             u281 057A  
                                           u290 04E8                                    __CFG_CPD$OFF 000000  
                                           u291 04E4                                             u367 05C4  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                  __CFG_LVP$OFF 000000                                            l1020 04B0  
                                          l1121 0772                                            l1123 076A  
                                          l1051 06C0                                            l1035 06A6  
                                          l1043 0528                                            l1053 06CE  
                                          l1125 0782                                            l1141 06FA  
                                          l1055 0750                                            l1119 0762  
                                          l1127 077E                                            l1135 05DA  
                                          l1151 067A                                            l1143 065C  
                                          l1401 064A                                            l1137 05F6  
                                          l1153 067C                                            l1145 065E  
                                          l1331 0440                                            l1411 0734  
                                          l1403 0656                                            l1139 061A  
                                          l1147 0662                                            l1333 044A  
                                          l1341 024E                                            l1405 0744  
                                          l1421 0504                                            l1413 04B2  
                                          l1149 0664                                            l1335 0468  
                                          l1327 041C                                            l1351 02B8  
                                          l1343 0272                                            l1407 0748  
                                          l1175 073A                                            l1415 04B6  
                                          l1431 0338                                            l1169 0758  
                                          l1337 049E                                            l1329 042E  
                                          l1361 02F4                                            l1353 02C6  
                                          l1345 0280                                            l1409 0730  
                                          l1177 0726                                            l1417 04BE  
                                          l1441 038C                                            l1433 035E  
                                          l1425 06E8                                            l1355 02DA  
                                          l1347 0290                                            l1419 04E8  
                                          l1427 06F0                                            l1349 0294  
                                          l1365 0300                                            l1373 052A  
                                          l1381 0682                                            l1197 077A  
                                          l1429 06F4                                            l1367 0324  
                                          l1359 02E6                                            l1375 0532  
                                          l1383 068A                                            l1463 03F0  
                                          l1455 03C2                                            l1447 0394  
                                          l1439 0366                                            l1391 0708  
                                          l1471 0588                                            l1377 053E  
                                          l1465 0416                                            l1457 03E8  
                                          l1449 03BA                                            l1393 071C  
                                          l1481 05A0                                            l1473 058C  
                                          l1379 0562                                            l1387 06DA  
                                          l1395 061E                                            l1483 05A2  
                                          l1475 0590                                            l1389 0712  
                                          l1397 0632                                            l1485 05AE  
                                          l1477 059C                                            l1399 063E  
                                          l1487 05BA                                            l1479 059E  
                                          STR_1 024A                                            STR_2 0226  
                                          STR_3 023B                                            STR_4 0245  
                                          STR_5 0235                                            STR_6 0240  
                                          STR_7 0201                                            STR_8 021E  
                                          STR_9 022E                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          _LATD 000F8C                                            _LATE 000F8D  
                                          _WPUB 000F61                                   _EUSART1_Write 06BE  
                                          _Stop 0726                                            _dbuf 0001  
                                          _main 0588                                            _prec 0025  
                                          _nout 0021                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            fsr1l 000FE1  
                                          fsr2l 000FD9                                   __CFG_BORV$190 000000  
                              ??_Chair_Position 004B                                            start 0000  
                                 __CFG_IESO$OFF 000000                        __size_of_Motor_Initalize 0004  
                                  ___param_bank 000000                         __end_of_TMR0_Initialize 0682  
                __size_of_OSCILLATOR_Initialize 000E                   __end_of_OSCILLATOR_Initialize 0708  
                                         ?_Stop 002A                                           ?_main 002A  
                                         _T0CON 000FD5                                  __CFG_DEBUG$OFF 000000  
                                  vfpfcnvrt@fmt 0037                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                __CFG_EBTR0$OFF 000000                                  __CFG_FCMEN$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                                           _flags 0027  
                                         _fputc 041C                              __CFG_MCLRE$INTMCLR 000000  
                                         _width 0023                                           _putch 074E  
                                ?_EUSART1_Write 002A                                  __CFG_BOREN$OFF 000000  
                                         tablat 000FF5                                           status 000FD8  
                                __CFG_HFOFST$ON 000000              _EUSART1_DefaultFramingErrorHandler 000000  
                                __CFG_PBADEN$ON 000000                                 __initialization 06A8  
                                  __end_of_Stop 0730                      __end_of_EUSART1_Initialize 065C  
                                  __end_of_main 05DA                                  _Leftwheel_Back 0772  
                   __size_of_Rightwheel_Forward 0008                                          ??_Stop 002A  
                                        ??_main 004B                                  _Leftwheel_Stop 0782  
                                 __activetblptr 000002                                          ?_fputc 002C  
                                        _ANSELA 000F38                                          ?_putch 002A  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _ANSELD 000F3B                                          _ANSELE 000F3C  
                                __CFG_WDTEN$OFF 000000                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _SPBRG1 000FAF                                      _Move_Right 073A  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0041  
                                __CFG_STVREN$ON 000000                          __end_of_Leftwheel_Back 077A  
                            __size_of_Move_Back 000A                        ?_EUSART1_SetErrorHandler 002A  
                        __end_of_Leftwheel_Stop 0786                               _Leftwheel_Forward 06D4  
                              ?_TMR0_Initialize 002A                                          clear_0 06AE  
                            __size_of_Move_left 000A                               ??_Motor_Initalize 002A  
                                        _printf 0682                                 _Rightwheel_Back 076A  
              ??_EUSART1_SetOverrunErrorHandler 002C                 ?_EUSART1_SetOverrunErrorHandler 002A  
                                        _strcmp 04B2                              ?_Leftwheel_Forward 002A  
                               _Rightwheel_Stop 077E                                          fputc@c 002C  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                           ??_Leftwheel_Forward 0049                                __end_of_vfprintf 0588  
                               ??_EUSART1_Write 002A                               _SYSTEM_Initialize 06E8  
                                    __accesstop 0060                         __end_of__initialization 06B4  
                            ?_SYSTEM_Initialize 002A                                   ___rparam_used 000001  
                                __pcstackCOMRAM 002A                                   ?_Move_Forward 002A  
                     __end_of_Leftwheel_Forward 06E8                             ??_SYSTEM_Initialize 002C  
                               ?_Leftwheel_Back 002A                                   __end_of_fputc 04B2  
                               ?_Leftwheel_Stop 002A                                   __end_of_putch 0758  
                                       ??_fputc 0030                       __end_of_SYSTEM_Initialize 06FA  
                                       ??_putch 002B                               __end_of_Move_Back 0762  
                               __CFG_PLLCFG$OFF 000000                               __end_of_Move_left 073A  
                                   ?_Move_Right 002A                                      __pnvCOMRAM 004D  
               __end_of_EUSART1_SetErrorHandler 0726                                  ??_Move_Forward 0049  
                            __CFG_CCP2MX$PORTC1 000000                         __end_of_Rightwheel_Back 0772  
                       __end_of_Rightwheel_Stop 0782                              __CFG_CCP3MX$PORTB5 000000  
                                       ?_printf 0043                                         ?_strcmp 002A  
        __end_of_EUSART1_SetFramingErrorHandler 071C         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 0712                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 00EA                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                 __CFG_PWRTEN$OFF 000000  
                                       __Hparam 0000                                         __Lparam 0000  
                    __size_of_Leftwheel_Forward 0014                                       ?_vfprintf 003B  
                                  __psmallconst 0200                                         __pcinit 06A8  
                                       __ramtop 0200                                         __ptext0 0588  
                                       __ptext1 06E8                                         __ptext2 065C  
                                       __ptext3 05DA                                         __ptext4 06FA  
                                       __ptext5 061E                                         __ptext6 0708  
                                       __ptext7 0712                                         __ptext8 071C  
                                       __ptext9 077A                                 __size_of_printf 0026  
                                     _T0CONbits 000FD5                                 __size_of_strcmp 0078  
                           __size_of_Move_Right 000A                           _OSCILLATOR_Initialize 06FA  
                            _EUSART1_Initialize 061E                        ??_PIN_MANAGER_Initialize 002A  
                    __size_of_SYSTEM_Initialize 0012                            end_of_initialization 06B4  
                           ?_EUSART1_Initialize 002A                                         fputc@fp 002E  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 004F  
                               _Motor_Initalize 077A                               __end_of_vfpfcnvrt 0338  
                              ?_Rightwheel_Back 002A                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                      __end_of_Rightwheel_Forward 076A  
                              ?_Rightwheel_Stop 002A                                      ??_vfprintf 0041  
                          ??_EUSART1_Initialize 002C                                         strcmp@l 002A  
                                       strcmp@r 002C                         __size_of_Chair_Position 00E4  
                                     _PORTDbits 000F83                            __end_of_Move_Forward 074E  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 002A  
                              ??_Leftwheel_Back 002A                                ??_Leftwheel_Stop 002A  
                                   vfpfcnvrt@ap 0039                                     vfpfcnvrt@fp 0035  
                        ?_OSCILLATOR_Initialize 002A                                  __end_of_printf 06A8  
                                __end_of_strcmp 052A                             start_initialization 06A8  
                      __size_of_TMR0_Initialize 0026                 __size_of_PIN_MANAGER_Initialize 0044  
                                   putch@txData 002B                         __end_of_Motor_Initalize 077E  
                         __end_of_EUSART1_Write 06D4                                    ??_Move_Right 002A  
                                     _Move_Back 0758                                       _Move_left 0730  
                         Chair_Position@Command 0049                                     vfprintf@fmt 003D  
                                      ??_printf 0045                                        ??_strcmp 002E  
                            __end_of_Move_Right 0744                                     __pbssCOMRAM 0001  
              ??_EUSART1_SetFramingErrorHandler 002C                 ?_EUSART1_SetFramingErrorHandler 002A  
                                    ?_Move_Back 002A                                      ?_Move_left 002A  
                        _PIN_MANAGER_Initialize 05DA                                  _Chair_Position 0338  
                              __CFG_PRICLKEN$ON 000000                               __size_of_vfprintf 005E  
                         __size_of_Move_Forward 000A                                     __smallconst 0200  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                          _EUSART1_ErrorHandler 004D                         _EUSART1_SetErrorHandler 071C  
                                __size_of_fputc 0096                                  __size_of_putch 000A  
                              ?_Motor_Initalize 002A                               ??_TMR0_Initialize 002A  
                                      _LATAbits 000F89         EUSART1_SetErrorHandler@interruptHandler 002A  
                                      _LATDbits 000F8C                                        _LATEbits 000F8D  
                                      _PIR1bits 000F9E                          __end_of_Chair_Position 041C  
                              __CFG_WDTPS$32768 000000                                    _Move_Forward 0744  
                                     _vfpfcnvrt 024E                              _Rightwheel_Forward 0762  
                                   _INTCON2bits 000FF1                             ?_Rightwheel_Forward 002A  
                                   ??_Move_Back 002A                                     ??_Move_left 0049  
                                      __Hrparam 0000                                      vfprintf@ap 003F  
                                      __Lrparam 0000                                      vfprintf@fp 003B  
                               ?_Chair_Position 0049                               __CFG_P2BMX$PORTD2 000000  
                       ??_OSCILLATOR_Initialize 002A                     __size_of_EUSART1_Initialize 003E  
                                    ?_vfpfcnvrt 0035                            ??_Rightwheel_Forward 002A  
                      __size_of_Rightwheel_Back 0008                       ??_EUSART1_SetErrorHandler 002C  
                   _EUSART1_DefaultErrorHandler 000000                        __size_of_Rightwheel_Stop 0004  
                                      __ptext10 0338                                        __ptext11 04B2  
                                      __ptext20 0682                                        __ptext12 0726  
                                      __ptext21 052A                                        __ptext13 0730  
                                      __ptext22 024E                                        __ptext14 077E  
                                      __ptext23 041C                                        __ptext15 073A  
                                      __ptext24 074E                                        __ptext16 0782  
                                      __ptext25 06BE                                        __ptext17 0744  
                                      __ptext26 0758                                        __ptext18 0762  
                                      __ptext27 076A                                        __ptext19 06D4  
                                      __ptext28 0772                                   __size_of_Stop 000A  
                                 __size_of_main 0052  EUSART1_SetOverrunErrorHandler@interruptHandler 002A  
                                      _vfprintf 052A                                       printf@fmt 0043  
                   _EUSART1_FramingErrorHandler 0051                                      _INTCONbits 000FF2  
                       ?_PIN_MANAGER_Initialize 002A          __end_of_EUSART1_SetOverrunErrorHandler 0712  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 0708  
                                    _RCSTA1bits 000FAB                                        printf@ap 0047  
EUSART1_SetFramingErrorHandler@interruptHandler 002A                                     ??_vfpfcnvrt 003B  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 0029  
                       __size_of_Leftwheel_Back 0008                         __size_of_Leftwheel_Stop 0004  
                               _TMR0_Initialize 065C                               __CFG_T3CMX$PORTC0 000000  
                             ??_Rightwheel_Back 002A                               ??_Rightwheel_Stop 002A  
                __end_of_PIN_MANAGER_Initialize 061E                               __CFG_FOSC$INTIO67 000000  
