

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 26 07:02:16 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F43K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F43K22 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    85  0000                     
    86 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    87  0000                     
    88 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    89  0000                     
    90 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
    91  0000                     
    92 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
    93  0000                     
    94 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
    95  0000                     
    96                           	psect	idataBANK0
    97  0010BA                     __pidataBANK0:
    98                           	opt callstack 0
    99                           
   100                           ;initializer for __esp8266_waitResponse@F6573
   101  0010BA  F8                 	db	low STR_6
   102  0010BB  1F                 	db	high STR_6
   103  0010BC  BA                 	db	low STR_7
   104  0010BD  1F                 	db	high STR_7
   105  0010BE  CF                 	db	low STR_8
   106  0010BF  1F                 	db	high STR_8
   107  0010C0  85                 	db	low STR_9
   108  0010C1  1F                 	db	high STR_9
   109  0010C2  A0                 	db	low STR_10
   110  0010C3  1F                 	db	high STR_10
   111  0010C4  A7                 	db	low STR_11
   112  0010C5  1F                 	db	high STR_11
   113                           
   114                           	psect	mediumconst
   115  001EAC                     __pmediumconst:
   116                           	opt callstack 0
   117  001EAC  00                 	db	0
   118  001EAD                     __esp8266_waitResponse@responses:
   119                           	opt callstack 0
   120  001EAD  01                 	db	1
   121  001EAE  02                 	db	2
   122  001EAF  03                 	db	3
   123  001EB0  04                 	db	4
   124  001EB1  05                 	db	5
   125  001EB2  06                 	db	6
   126  001EB3                     __end_of__esp8266_waitResponse@responses:
   127                           	opt callstack 0
   128  001EB3                     __esp8266_waitResponse@lengths:
   129                           	opt callstack 0
   130  001EB3  02                 	db	2
   131  001EB4  05                 	db	5
   132  001EB5  04                 	db	4
   133  001EB6  09                 	db	9
   134  001EB7  06                 	db	6
   135  001EB8  06                 	db	6
   136  001EB9                     __end_of__esp8266_waitResponse@lengths:
   137                           	opt callstack 0
   138  001EB9                     STR_46:
   139  001EB9  47                 	db	71	;'G'
   140  001EBA  45                 	db	69	;'E'
   141  001EBB  54                 	db	84	;'T'
   142  001EBC  20                 	db	32
   143  001EBD  2F                 	db	47
   144  001EBE  75                 	db	117	;'u'
   145  001EBF  70                 	db	112	;'p'
   146  001EC0  64                 	db	100	;'d'
   147  001EC1  61                 	db	97	;'a'
   148  001EC2  74                 	db	116	;'t'
   149  001EC3  65                 	db	101	;'e'
   150  001EC4  3F                 	db	63	;'?'
   151  001EC5  61                 	db	97	;'a'
   152  001EC6  70                 	db	112	;'p'
   153  001EC7  69                 	db	105	;'i'
   154  001EC8  5F                 	db	95	;'_'
   155  001EC9  6B                 	db	107	;'k'
   156  001ECA  65                 	db	101	;'e'
   157  001ECB  79                 	db	121	;'y'
   158  001ECC  3D                 	db	61	;'='
   159  001ECD  32                 	db	50	;'2'
   160  001ECE  33                 	db	51	;'3'
   161  001ECF  31                 	db	49	;'1'
   162  001ED0  46                 	db	70	;'F'
   163  001ED1  4C                 	db	76	;'L'
   164  001ED2  36                 	db	54	;'6'
   165  001ED3  59                 	db	89	;'Y'
   166  001ED4  57                 	db	87	;'W'
   167  001ED5  55                 	db	85	;'U'
   168  001ED6  54                 	db	84	;'T'
   169  001ED7  4A                 	db	74	;'J'
   170  001ED8  4C                 	db	76	;'L'
   171  001ED9  4E                 	db	78	;'N'
   172  001EDA  36                 	db	54	;'6'
   173  001EDB  42                 	db	66	;'B'
   174  001EDC  52                 	db	82	;'R'
   175  001EDD  26                 	db	38
   176  001EDE  66                 	db	102	;'f'
   177  001EDF  69                 	db	105	;'i'
   178  001EE0  65                 	db	101	;'e'
   179  001EE1  6C                 	db	108	;'l'
   180  001EE2  64                 	db	100	;'d'
   181  001EE3  31                 	db	49	;'1'
   182  001EE4  3D                 	db	61	;'='
   183  001EE5  33                 	db	51	;'3'
   184  001EE6  33                 	db	51	;'3'
   185  001EE7  2E                 	db	46
   186  001EE8  39                 	db	57	;'9'
   187  001EE9  39                 	db	57	;'9'
   188  001EEA  39                 	db	57	;'9'
   189  001EEB  30                 	db	48	;'0'
   190  001EEC  00                 	db	0
   191  001EED                     STR_45:
   192  001EED  47                 	db	71	;'G'
   193  001EEE  45                 	db	69	;'E'
   194  001EEF  54                 	db	84	;'T'
   195  001EF0  20                 	db	32
   196  001EF1  2F                 	db	47
   197  001EF2  75                 	db	117	;'u'
   198  001EF3  70                 	db	112	;'p'
   199  001EF4  64                 	db	100	;'d'
   200  001EF5  61                 	db	97	;'a'
   201  001EF6  74                 	db	116	;'t'
   202  001EF7  65                 	db	101	;'e'
   203  001EF8  3F                 	db	63	;'?'
   204  001EF9  61                 	db	97	;'a'
   205  001EFA  70                 	db	112	;'p'
   206  001EFB  69                 	db	105	;'i'
   207  001EFC  5F                 	db	95	;'_'
   208  001EFD  6B                 	db	107	;'k'
   209  001EFE  65                 	db	101	;'e'
   210  001EFF  79                 	db	121	;'y'
   211  001F00  3D                 	db	61	;'='
   212  001F01  32                 	db	50	;'2'
   213  001F02  33                 	db	51	;'3'
   214  001F03  31                 	db	49	;'1'
   215  001F04  46                 	db	70	;'F'
   216  001F05  4C                 	db	76	;'L'
   217  001F06  36                 	db	54	;'6'
   218  001F07  59                 	db	89	;'Y'
   219  001F08  57                 	db	87	;'W'
   220  001F09  55                 	db	85	;'U'
   221  001F0A  54                 	db	84	;'T'
   222  001F0B  4A                 	db	74	;'J'
   223  001F0C  4C                 	db	76	;'L'
   224  001F0D  4E                 	db	78	;'N'
   225  001F0E  36                 	db	54	;'6'
   226  001F0F  42                 	db	66	;'B'
   227  001F10  52                 	db	82	;'R'
   228  001F11  26                 	db	38
   229  001F12  66                 	db	102	;'f'
   230  001F13  69                 	db	105	;'i'
   231  001F14  65                 	db	101	;'e'
   232  001F15  6C                 	db	108	;'l'
   233  001F16  64                 	db	100	;'d'
   234  001F17  31                 	db	49	;'1'
   235  001F18  3D                 	db	61	;'='
   236  001F19  38                 	db	56	;'8'
   237  001F1A  38                 	db	56	;'8'
   238  001F1B  2E                 	db	46
   239  001F1C  39                 	db	57	;'9'
   240  001F1D  39                 	db	57	;'9'
   241  001F1E  39                 	db	57	;'9'
   242  001F1F  30                 	db	48	;'0'
   243  001F20  00                 	db	0
   244  001F21                     STR_43:
   245  001F21  61                 	db	97	;'a'
   246  001F22  70                 	db	112	;'p'
   247  001F23  69                 	db	105	;'i'
   248  001F24  2E                 	db	46
   249  001F25  74                 	db	116	;'t'
   250  001F26  68                 	db	104	;'h'
   251  001F27  69                 	db	105	;'i'
   252  001F28  6E                 	db	110	;'n'
   253  001F29  67                 	db	103	;'g'
   254  001F2A  73                 	db	115	;'s'
   255  001F2B  70                 	db	112	;'p'
   256  001F2C  65                 	db	101	;'e'
   257  001F2D  61                 	db	97	;'a'
   258  001F2E  6B                 	db	107	;'k'
   259  001F2F  2E                 	db	46
   260  001F30  63                 	db	99	;'c'
   261  001F31  6F                 	db	111	;'o'
   262  001F32  6D                 	db	109	;'m'
   263  001F33  00                 	db	0
   264  001F34                     STR_26:
   265  001F34  41                 	db	65	;'A'
   266  001F35  54                 	db	84	;'T'
   267  001F36  2B                 	db	43
   268  001F37  43                 	db	67	;'C'
   269  001F38  49                 	db	73	;'I'
   270  001F39  50                 	db	80	;'P'
   271  001F3A  53                 	db	83	;'S'
   272  001F3B  54                 	db	84	;'T'
   273  001F3C  41                 	db	65	;'A'
   274  001F3D  52                 	db	82	;'R'
   275  001F3E  54                 	db	84	;'T'
   276  001F3F  3D                 	db	61	;'='
   277  001F40  22                 	db	34
   278  001F41  00                 	db	0
   279  001F42                     STR_34:
   280  001F42  41                 	db	65	;'A'
   281  001F43  54                 	db	84	;'T'
   282  001F44  2B                 	db	43
   283  001F45  43                 	db	67	;'C'
   284  001F46  49                 	db	73	;'I'
   285  001F47  50                 	db	80	;'P'
   286  001F48  53                 	db	83	;'S'
   287  001F49  45                 	db	69	;'E'
   288  001F4A  4E                 	db	78	;'N'
   289  001F4B  44                 	db	68	;'D'
   290  001F4C  3D                 	db	61	;'='
   291  001F4D  00                 	db	0
   292  001F4E  41                 	db	65	;'A'
   293  001F4F  54                 	db	84	;'T'
   294  001F50  2B                 	db	43
   295  001F51  43                 	db	67	;'C'
   296  001F52  57                 	db	87	;'W'
   297  001F53  51                 	db	81	;'Q'
   298  001F54  41                 	db	65	;'A'
   299  001F55  50                 	db	80	;'P'
   300  001F56  0D                 	db	13
   301  001F57  0A                 	db	10
   302  001F58  00                 	db	0
   303  001F59  41                 	db	65	;'A'
   304  001F5A  54                 	db	84	;'T'
   305  001F5B  2B                 	db	43
   306  001F5C  43                 	db	67	;'C'
   307  001F5D  49                 	db	73	;'I'
   308  001F5E  46                 	db	70	;'F'
   309  001F5F  53                 	db	83	;'S'
   310  001F60  52                 	db	82	;'R'
   311  001F61  0D                 	db	13
   312  001F62  0A                 	db	10
   313  001F63  00                 	db	0
   314  001F64                     STR_19:
   315  001F64  41                 	db	65	;'A'
   316  001F65  54                 	db	84	;'T'
   317  001F66  2B                 	db	43
   318  001F67  43                 	db	67	;'C'
   319  001F68  57                 	db	87	;'W'
   320  001F69  4A                 	db	74	;'J'
   321  001F6A  41                 	db	65	;'A'
   322  001F6B  50                 	db	80	;'P'
   323  001F6C  3D                 	db	61	;'='
   324  001F6D  22                 	db	34
   325  001F6E  00                 	db	0
   326  001F6F                     STR_17:
   327  001F6F  41                 	db	65	;'A'
   328  001F70  54                 	db	84	;'T'
   329  001F71  2B                 	db	43
   330  001F72  43                 	db	67	;'C'
   331  001F73  57                 	db	87	;'W'
   332  001F74  4D                 	db	77	;'M'
   333  001F75  4F                 	db	79	;'O'
   334  001F76  44                 	db	68	;'D'
   335  001F77  45                 	db	69	;'E'
   336  001F78  3D                 	db	61	;'='
   337  001F79  00                 	db	0
   338  001F7A                     STR_41:
   339  001F7A  4B                 	db	75	;'K'
   340  001F7B  61                 	db	97	;'a'
   341  001F7C  6A                 	db	106	;'j'
   342  001F7D  61                 	db	97	;'a'
   343  001F7E  6C                 	db	108	;'l'
   344  001F7F  4B                 	db	75	;'K'
   345  001F80  61                 	db	97	;'a'
   346  001F81  6A                 	db	106	;'j'
   347  001F82  61                 	db	97	;'a'
   348  001F83  6C                 	db	108	;'l'
   349  001F84  00                 	db	0
   350  001F85                     STR_9:
   351  001F85  6E                 	db	110	;'n'
   352  001F86  6F                 	db	111	;'o'
   353  001F87  20                 	db	32
   354  001F88  63                 	db	99	;'c'
   355  001F89  68                 	db	104	;'h'
   356  001F8A  61                 	db	97	;'a'
   357  001F8B  6E                 	db	110	;'n'
   358  001F8C  67                 	db	103	;'g'
   359  001F8D  65                 	db	101	;'e'
   360  001F8E  00                 	db	0
   361  001F8F  41                 	db	65	;'A'
   362  001F90  54                 	db	84	;'T'
   363  001F91  2B                 	db	43
   364  001F92  52                 	db	82	;'R'
   365  001F93  53                 	db	83	;'S'
   366  001F94  54                 	db	84	;'T'
   367  001F95  0D                 	db	13
   368  001F96  0A                 	db	10
   369  001F97  00                 	db	0
   370  001F98  46                 	db	70	;'F'
   371  001F99  4F                 	db	79	;'O'
   372  001F9A  52                 	db	82	;'R'
   373  001F9B  57                 	db	87	;'W'
   374  001F9C  41                 	db	65	;'A'
   375  001F9D  52                 	db	82	;'R'
   376  001F9E  44                 	db	68	;'D'
   377  001F9F  00                 	db	0
   378  001FA0                     STR_10:
   379  001FA0  4C                 	db	76	;'L'
   380  001FA1  69                 	db	105	;'i'
   381  001FA2  6E                 	db	110	;'n'
   382  001FA3  6B                 	db	107	;'k'
   383  001FA4  65                 	db	101	;'e'
   384  001FA5  64                 	db	100	;'d'
   385  001FA6  00                 	db	0
   386  001FA7                     STR_11:
   387  001FA7  55                 	db	85	;'U'
   388  001FA8  6E                 	db	110	;'n'
   389  001FA9  6C                 	db	108	;'l'
   390  001FAA  69                 	db	105	;'i'
   391  001FAB  6E                 	db	110	;'n'
   392  001FAC  6B                 	db	107	;'k'
   393  001FAD  00                 	db	0
   394  001FAE  2B                 	db	43
   395  001FAF  49                 	db	73	;'I'
   396  001FB0  50                 	db	80	;'P'
   397  001FB1  44                 	db	68	;'D'
   398  001FB2  2C                 	db	44
   399  001FB3  00                 	db	0
   400  001FB4  52                 	db	82	;'R'
   401  001FB5  49                 	db	73	;'I'
   402  001FB6  47                 	db	71	;'G'
   403  001FB7  48                 	db	72	;'H'
   404  001FB8  54                 	db	84	;'T'
   405  001FB9  00                 	db	0
   406  001FBA                     STR_7:
   407  001FBA  72                 	db	114	;'r'
   408  001FBB  65                 	db	101	;'e'
   409  001FBC  61                 	db	97	;'a'
   410  001FBD  64                 	db	100	;'d'
   411  001FBE  79                 	db	121	;'y'
   412  001FBF  00                 	db	0
   413  001FC0                     STR_37:
   414  001FC0  0D                 	db	13
   415  001FC1  0A                 	db	10
   416  001FC2  0D                 	db	13
   417  001FC3  0A                 	db	10
   418  001FC4  00                 	db	0
   419  001FC5                     STR_12:
   420  001FC5  41                 	db	65	;'A'
   421  001FC6  54                 	db	84	;'T'
   422  001FC7  0D                 	db	13
   423  001FC8  0A                 	db	10
   424  001FC9  00                 	db	0
   425  001FCA  42                 	db	66	;'B'
   426  001FCB  41                 	db	65	;'A'
   427  001FCC  43                 	db	67	;'C'
   428  001FCD  4B                 	db	75	;'K'
   429  001FCE  00                 	db	0
   430  001FCF                     STR_8:
   431  001FCF  46                 	db	70	;'F'
   432  001FD0  41                 	db	65	;'A'
   433  001FD1  49                 	db	73	;'I'
   434  001FD2  4C                 	db	76	;'L'
   435  001FD3  00                 	db	0
   436  001FD4  53                 	db	83	;'S'
   437  001FD5  54                 	db	84	;'T'
   438  001FD6  4F                 	db	79	;'O'
   439  001FD7  50                 	db	80	;'P'
   440  001FD8  00                 	db	0
   441  001FD9  4C                 	db	76	;'L'
   442  001FDA  45                 	db	69	;'E'
   443  001FDB  46                 	db	70	;'F'
   444  001FDC  54                 	db	84	;'T'
   445  001FDD  00                 	db	0
   446  001FDE                     STR_21:
   447  001FDE  22                 	db	34
   448  001FDF  0D                 	db	13
   449  001FE0  0A                 	db	10
   450  001FE1  00                 	db	0
   451  001FE2                     STR_20:
   452  001FE2  22                 	db	34
   453  001FE3  2C                 	db	44
   454  001FE4  22                 	db	34
   455  001FE5  00                 	db	0
   456  001FE6  41                 	db	65	;'A'
   457  001FE7  54                 	db	84	;'T'
   458  001FE8  45                 	db	69	;'E'
   459  001FE9  00                 	db	0
   460  001FEA                     STR_27:
   461  001FEA  54                 	db	84	;'T'
   462  001FEB  43                 	db	67	;'C'
   463  001FEC  50                 	db	80	;'P'
   464  001FED  00                 	db	0
   465  001FEE                     STR_28:
   466  001FEE  55                 	db	85	;'U'
   467  001FEF  44                 	db	68	;'D'
   468  001FF0  50                 	db	80	;'P'
   469  001FF1  00                 	db	0
   470  001FF2                     STR_30:
   471  001FF2  22                 	db	34
   472  001FF3  2C                 	db	44
   473  001FF4  00                 	db	0
   474  001FF5                     STR_44:
   475  001FF5  38                 	db	56	;'8'
   476  001FF6  30                 	db	48	;'0'
   477  001FF7  00                 	db	0
   478  001FF8                     STR_6:
   479  001FF8  4F                 	db	79	;'O'
   480  001FF9  4B                 	db	75	;'K'
   481  001FFA  00                 	db	0
   482  001FFB                     STR_31:
   483  001FFB  25                 	db	37
   484  001FFC  75                 	db	117	;'u'
   485  001FFD  00                 	db	0
   486  0000                     
   487                           ; #config settings
   488  001FFE  00                 	db	0	; dummy byte at the end
   489  0000                     
   490                           	psect	nvBANK0
   491  0000B8                     __pnvBANK0:
   492                           	opt callstack 0
   493  0000B8                     _EUSART2_ErrorHandler:
   494                           	opt callstack 0
   495  0000B8                     	ds	2
   496  0000BA                     _EUSART2_OverrunErrorHandler:
   497                           	opt callstack 0
   498  0000BA                     	ds	2
   499  0000BC                     _EUSART2_FramingErrorHandler:
   500                           	opt callstack 0
   501  0000BC                     	ds	2
   502  0000BE                     _timer1ReloadVal:
   503                           	opt callstack 0
   504  0000BE                     	ds	2
   505  0000C0                     _EUSART1_ErrorHandler:
   506                           	opt callstack 0
   507  0000C0                     	ds	2
   508  0000C2                     _EUSART1_OverrunErrorHandler:
   509                           	opt callstack 0
   510  0000C2                     	ds	2
   511  0000C4                     _EUSART1_FramingErrorHandler:
   512                           	opt callstack 0
   513  0000C4                     	ds	2
   514  0000                     _ANSELA	set	3896
   515  0000                     _ANSELE	set	3900
   516  0000                     _ANSELB	set	3897
   517  0000                     _ANSELC	set	3898
   518  0000                     _ANSELD	set	3899
   519  0000                     _TMR1	set	4046
   520  0000                     _PORTBbits	set	3969
   521  0000                     _LATBbits	set	3978
   522  0000                     _PORTDbits	set	3971
   523  0000                     _LATDbits	set	3980
   524  0000                     _LATEbits	set	3981
   525  0000                     _LATAbits	set	3977
   526  0000                     _TXREG2	set	3955
   527  0000                     _RCREG2	set	3956
   528  0000                     _RCSTA2bits	set	3953
   529  0000                     _TXSTA2bits	set	3954
   530  0000                     _PIR3bits	set	4004
   531  0000                     _SPBRGH2	set	3958
   532  0000                     _SPBRG2	set	3957
   533  0000                     _TXSTA2	set	3954
   534  0000                     _RCSTA2	set	3953
   535  0000                     _BAUDCON2	set	3952
   536  0000                     _T1GCONbits	set	4044
   537  0000                     _T1CONbits	set	4045
   538  0000                     _T1CON	set	4045
   539  0000                     _TMR1L	set	4046
   540  0000                     _TMR1H	set	4047
   541  0000                     _T1GCON	set	4044
   542  0000                     _INTCONbits	set	4082
   543  0000                     _INTCON2bits	set	4081
   544  0000                     _WPUB	set	3937
   545  0000                     _TRISD	set	3989
   546  0000                     _TRISC	set	3988
   547  0000                     _TRISB	set	3987
   548  0000                     _TRISA	set	3986
   549  0000                     _TRISE	set	3990
   550  0000                     _LATC	set	3979
   551  0000                     _LATB	set	3978
   552  0000                     _LATA	set	3977
   553  0000                     _LATD	set	3980
   554  0000                     _LATE	set	3981
   555  0000                     _OSCTUNE	set	3995
   556  0000                     _OSCCON2	set	4050
   557  0000                     _OSCCON	set	4051
   558  0000                     _TXREG1	set	4013
   559  0000                     _RCREG1	set	4014
   560  0000                     _RCSTA1bits	set	4011
   561  0000                     _TXSTA1bits	set	4012
   562  0000                     _PIR1bits	set	3998
   563  0000                     _SPBRGH1	set	4016
   564  0000                     _SPBRG1	set	4015
   565  0000                     _TXSTA1	set	4012
   566  0000                     _RCSTA1	set	4011
   567  0000                     _BAUDCON1	set	4024
   568                           
   569                           	psect	cinit
   570  001180                     __pcinit:
   571                           	opt callstack 0
   572  001180                     start_initialization:
   573                           	opt callstack 0
   574  001180                     __initialization:
   575                           	opt callstack 0
   576                           
   577                           ; Initialize objects allocated to BANK0 (12 bytes)
   578                           ; load TBLPTR registers with __pidataBANK0
   579  001180  0EBA               	movlw	low __pidataBANK0
   580  001182  6EF6               	movwf	tblptrl,c
   581  001184  0E10               	movlw	high __pidataBANK0
   582  001186  6EF7               	movwf	tblptrh,c
   583  001188  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   584  00118A  6EF8               	movwf	tblptru,c
   585  00118C  EE00  F0C6         	lfsr	0,__pdataBANK0
   586  001190  EE10 F00C          	lfsr	1,12
   587  001194                     copy_data0:
   588  001194  0009               	tblrd		*+
   589  001196  CFF5 FFEE          	movff	tablat,postinc0
   590  00119A  50E5               	movf	postdec1,w,c
   591  00119C  50E1               	movf	fsr1l,w,c
   592  00119E  E1FA               	bnz	copy_data0
   593                           
   594                           ; Clear objects allocated to BANK0 (67 bytes)
   595  0011A0  EE00  F060         	lfsr	0,__pbssBANK0
   596  0011A4  0E43               	movlw	67
   597  0011A6                     clear_0:
   598  0011A6  6AEE               	clrf	postinc0,c
   599  0011A8  06E8               	decf	wreg,f,c
   600  0011AA  E1FD               	bnz	clear_0
   601  0011AC                     end_of_initialization:
   602                           	opt callstack 0
   603  0011AC                     __end_of__initialization:
   604                           	opt callstack 0
   605  0011AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   606  0011AE  6EF8               	movwf	tblptru,c
   607  0011B0  0100               	movlb	0
   608  0011B2  EF00  F00D         	goto	_main	;jump to C main() function
   609                           
   610                           	psect	bssBANK0
   611  000060                     __pbssBANK0:
   612                           	opt callstack 0
   613  000060                     	ds	6
   614  000066                     	ds	6
   615  00006C                     	ds	5
   616  000071                     _Distance:
   617                           	opt callstack 0
   618  000071                     	ds	4
   619  000075                     _Time:
   620                           	opt callstack 0
   621  000075                     	ds	4
   622  000079                     _nout:
   623                           	opt callstack 0
   624  000079                     	ds	2
   625  00007B                     _width:
   626                           	opt callstack 0
   627  00007B                     	ds	2
   628  00007D                     _prec:
   629                           	opt callstack 0
   630  00007D                     	ds	2
   631  00007F                     _flags:
   632                           	opt callstack 0
   633  00007F                     	ds	2
   634  000081                     _eusart2RxLastError:
   635                           	opt callstack 0
   636  000081                     	ds	1
   637  000082                     _eusart1RxLastError:
   638                           	opt callstack 0
   639  000082                     	ds	1
   640  000083                     _dbuf:
   641                           	opt callstack 0
   642  000083                     	ds	32
   643                           
   644                           	psect	dataBANK0
   645  0000C6                     __pdataBANK0:
   646                           	opt callstack 0
   647  0000C6                     __esp8266_waitResponse@F6573:
   648                           	opt callstack 0
   649  0000C6                     	ds	12
   650                           
   651                           	psect	cstackBANK0
   652  0000A3                     __pcstackBANK0:
   653                           	opt callstack 0
   654  0000A3                     	ds	2
   655  0000A5                     sprintf@ap:
   656                           	opt callstack 0
   657                           
   658                           ; 2 bytes @ 0x2
   659  0000A5                     	ds	2
   660  0000A7                     sprintf@f:
   661                           	opt callstack 0
   662                           
   663                           ; 6 bytes @ 0x4
   664  0000A7                     	ds	6
   665  0000AD                     esp8266_start@ip:
   666                           	opt callstack 0
   667  0000AD                     esp8266_send@length_str:
   668                           	opt callstack 0
   669                           
   670                           ; 6 bytes @ 0xA
   671  0000AD                     	ds	2
   672  0000AF                     esp8266_start@port:
   673                           	opt callstack 0
   674                           
   675                           ; 1 bytes @ 0xC
   676  0000AF                     	ds	1
   677  0000B0                     esp8266_start@port_str:
   678                           	opt callstack 0
   679                           
   680                           ; 5 bytes @ 0xD
   681  0000B0                     	ds	3
   682  0000B3                     _esp8266_send$2273:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x10
   686  0000B3                     	ds	2
   687  0000B5                     esp8266_start@protocol:
   688                           	opt callstack 0
   689                           
   690                           ; 1 bytes @ 0x12
   691  0000B5                     	ds	1
   692  0000B6                     ??_main:
   693                           
   694                           ; 1 bytes @ 0x13
   695  0000B6                     	ds	2
   696                           
   697                           	psect	cstackCOMRAM
   698  000001                     __pcstackCOMRAM:
   699                           	opt callstack 0
   700  000001                     ??__esp8266_waitResponse:
   701  000001                     ?_strlen:
   702                           	opt callstack 0
   703  000001                     ?___lodiv:
   704                           	opt callstack 0
   705  000001                     ?___lomod:
   706                           	opt callstack 0
   707  000001                     EUSART1_Write@txData:
   708                           	opt callstack 0
   709  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   710                           	opt callstack 0
   711  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   712                           	opt callstack 0
   713  000001                     EUSART1_SetErrorHandler@interruptHandler:
   714                           	opt callstack 0
   715  000001                     EUSART2_SetFramingErrorHandler@interruptHandler:
   716                           	opt callstack 0
   717  000001                     EUSART2_SetOverrunErrorHandler@interruptHandler:
   718                           	opt callstack 0
   719  000001                     EUSART2_SetErrorHandler@interruptHandler:
   720                           	opt callstack 0
   721  000001                     strlen@s:
   722                           	opt callstack 0
   723  000001                     ___lodiv@dividend:
   724                           	opt callstack 0
   725  000001                     ___lomod@dividend:
   726                           	opt callstack 0
   727                           
   728                           ; 8 bytes @ 0x0
   729  000001                     	ds	1
   730  000002                     putch@txData:
   731                           	opt callstack 0
   732  000002                     __esp8266_print@ptr:
   733                           	opt callstack 0
   734                           
   735                           ; 2 bytes @ 0x1
   736  000002                     	ds	1
   737  000003                     fputc@c:
   738                           	opt callstack 0
   739  000003                     strlen@a:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x2
   743  000003                     	ds	1
   744  000004                     __esp8266_waitResponse@strings:
   745                           	opt callstack 0
   746                           
   747                           ; 12 bytes @ 0x3
   748  000004                     	ds	1
   749  000005                     fputc@fp:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x4
   753  000005                     	ds	2
   754  000007                     ??_fputc:
   755                           
   756                           ; 1 bytes @ 0x6
   757  000007                     	ds	2
   758  000009                     ___lodiv@divisor:
   759                           	opt callstack 0
   760  000009                     ___lomod@divisor:
   761                           	opt callstack 0
   762                           
   763                           ; 8 bytes @ 0x8
   764  000009                     	ds	3
   765  00000C                     fputs@s:
   766                           	opt callstack 0
   767                           
   768                           ; 2 bytes @ 0xB
   769  00000C                     	ds	2
   770  00000E                     fputs@fp:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0xD
   774  00000E                     	ds	2
   775  000010                     fputs@c:
   776                           	opt callstack 0
   777  000010                     __esp8266_waitResponse@so_far:
   778                           	opt callstack 0
   779                           
   780                           ; 6 bytes @ 0xF
   781  000010                     	ds	1
   782  000011                     ___lomod@counter:
   783                           	opt callstack 0
   784  000011                     fputs@i:
   785                           	opt callstack 0
   786  000011                     ___lodiv@quotient:
   787                           	opt callstack 0
   788                           
   789                           ; 8 bytes @ 0x10
   790  000011                     	ds	2
   791  000013                     ?_pad:
   792                           	opt callstack 0
   793  000013                     pad@fp:
   794                           	opt callstack 0
   795                           
   796                           ; 2 bytes @ 0x12
   797  000013                     	ds	2
   798  000015                     pad@buf:
   799                           	opt callstack 0
   800                           
   801                           ; 2 bytes @ 0x14
   802  000015                     	ds	1
   803  000016                     __esp8266_waitResponse@received:
   804                           	opt callstack 0
   805                           
   806                           ; 1 bytes @ 0x15
   807  000016                     	ds	1
   808  000017                     __esp8266_waitResponse@response:
   809                           	opt callstack 0
   810  000017                     pad@p:
   811                           	opt callstack 0
   812                           
   813                           ; 2 bytes @ 0x16
   814  000017                     	ds	1
   815  000018                     __esp8266_waitResponse@continue_loop:
   816                           	opt callstack 0
   817                           
   818                           ; 1 bytes @ 0x17
   819  000018                     	ds	1
   820  000019                     ??_pad:
   821  000019                     __esp8266_waitResponse@i:
   822                           	opt callstack 0
   823  000019                     ___lodiv@counter:
   824                           	opt callstack 0
   825                           
   826                           ; 1 bytes @ 0x18
   827  000019                     	ds	1
   828  00001A                     esp8266_mode@mode:
   829                           	opt callstack 0
   830  00001A                     esp8266_connect@ssid:
   831                           	opt callstack 0
   832  00001A                     pad@i:
   833                           	opt callstack 0
   834                           
   835                           ; 2 bytes @ 0x19
   836  00001A                     	ds	2
   837  00001C                     esp8266_connect@pass:
   838                           	opt callstack 0
   839  00001C                     pad@w:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x1B
   843  00001C                     	ds	2
   844  00001E                     ?_utoa:
   845                           	opt callstack 0
   846  00001E                     utoa@fp:
   847                           	opt callstack 0
   848                           
   849                           ; 2 bytes @ 0x1D
   850  00001E                     	ds	2
   851  000020                     utoa@d:
   852                           	opt callstack 0
   853                           
   854                           ; 8 bytes @ 0x1F
   855  000020                     	ds	8
   856  000028                     ??_utoa:
   857                           
   858                           ; 1 bytes @ 0x27
   859  000028                     	ds	8
   860  000030                     utoa@p:
   861                           	opt callstack 0
   862                           
   863                           ; 2 bytes @ 0x2F
   864  000030                     	ds	2
   865  000032                     utoa@w:
   866                           	opt callstack 0
   867                           
   868                           ; 2 bytes @ 0x31
   869  000032                     	ds	2
   870  000034                     utoa@n:
   871                           	opt callstack 0
   872                           
   873                           ; 8 bytes @ 0x33
   874  000034                     	ds	8
   875  00003C                     utoa@i:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x3B
   879  00003C                     	ds	2
   880  00003E                     ?_vfpfcnvrt:
   881                           	opt callstack 0
   882  00003E                     vfpfcnvrt@fp:
   883                           	opt callstack 0
   884                           
   885                           ; 2 bytes @ 0x3D
   886  00003E                     	ds	2
   887  000040                     vfpfcnvrt@fmt:
   888                           	opt callstack 0
   889                           
   890                           ; 2 bytes @ 0x3F
   891  000040                     	ds	2
   892  000042                     vfpfcnvrt@ap:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0x41
   896  000042                     	ds	2
   897  000044                     ??_vfpfcnvrt:
   898                           
   899                           ; 1 bytes @ 0x43
   900  000044                     	ds	4
   901  000048                     vfpfcnvrt@llu:
   902                           	opt callstack 0
   903                           
   904                           ; 8 bytes @ 0x47
   905  000048                     	ds	8
   906  000050                     ?_vfprintf:
   907                           	opt callstack 0
   908  000050                     vfprintf@fp:
   909                           	opt callstack 0
   910                           
   911                           ; 2 bytes @ 0x4F
   912  000050                     	ds	2
   913  000052                     vfprintf@fmt:
   914                           	opt callstack 0
   915                           
   916                           ; 2 bytes @ 0x51
   917  000052                     	ds	2
   918  000054                     vfprintf@ap:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0x53
   922  000054                     	ds	2
   923  000056                     vfprintf@cfmt:
   924                           	opt callstack 0
   925                           
   926                           ; 2 bytes @ 0x55
   927  000056                     	ds	2
   928  000058                     ?_sprintf:
   929                           	opt callstack 0
   930  000058                     sprintf@s:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0x57
   934  000058                     	ds	2
   935  00005A                     sprintf@fmt:
   936                           	opt callstack 0
   937                           
   938                           ; 2 bytes @ 0x59
   939  00005A                     	ds	4
   940  00005E                     esp8266_send@data:
   941                           	opt callstack 0
   942                           
   943                           ; 2 bytes @ 0x5D
   944  00005E                     	ds	2
   945  000060                     
   946                           ; 1 bytes @ 0x5F
   947 ;;
   948 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   949 ;;
   950 ;; *************** function _main *****************
   951 ;; Defined at:
   952 ;;		line 18 in file "main.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  rec           100    0        unsigned char [100]
   957 ;;  Time            4    0        float 
   958 ;;  Distance        4    0        float 
   959 ;;  Direction       1    0        unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1
   969 ;;      Params:         0       0       0
   970 ;;      Locals:         0       8       0
   971 ;;      Temps:          0       2       0
   972 ;;      Totals:         0      10       0
   973 ;;Total ram usage:       10 bytes
   974 ;; Hardware stack levels required when called:   10
   975 ;; This function calls:
   976 ;;		_SYSTEM_Initialize
   977 ;;		_esp8266_connect
   978 ;;		_esp8266_isStarted
   979 ;;		_esp8266_mode
   980 ;;		_esp8266_send
   981 ;;		_esp8266_start
   982 ;; This function is called by:
   983 ;;		Startup code after reset
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text0
   988  001A00                     __ptext0:
   989                           	opt callstack 0
   990  001A00                     _main:
   991                           	opt callstack 21
   992  001A00                     
   993                           ;main.c: 21:     SYSTEM_Initialize();
   994  001A00  EC73  F008         	call	_SYSTEM_Initialize	;wreg free
   995  001A04                     
   996                           ;main.c: 27:     esp8266_isStarted();
   997  001A04  EC6A  F008         	call	_esp8266_isStarted	;wreg free
   998  001A08                     
   999                           ;main.c: 29:     esp8266_mode(1);
  1000  001A08  0E01               	movlw	1
  1001  001A0A  EC97  F008         	call	_esp8266_mode
  1002  001A0E                     
  1003                           ;main.c: 30:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1004  001A0E  0E1A               	movlw	26
  1005  001A10  0100               	movlb	0	; () banked
  1006  001A12  6FB6               	movwf	??_main& (0+255),b
  1007  001A14  0EF8               	movlw	248
  1008  001A16                     u2217:
  1009  001A16  2EE8               	decfsz	wreg,f,c
  1010  001A18  D7FE               	bra	u2217
  1011  001A1A  2FB6               	decfsz	??_main& (0+255),f,b
  1012  001A1C  D7FC               	bra	u2217
  1013  001A1E  F000               	nop	
  1014  001A20                     
  1015                           ;main.c: 31:     esp8266_connect("Kajal","KajalKajal");
  1016  001A20  0E7F               	movlw	low (STR_41+5)
  1017  001A22  6E1A               	movwf	esp8266_connect@ssid^0,c
  1018  001A24  0E1F               	movlw	high (STR_41+5)
  1019  001A26  6E1B               	movwf	(esp8266_connect@ssid+1)^0,c
  1020  001A28  0E7A               	movlw	low STR_41
  1021  001A2A  6E1C               	movwf	esp8266_connect@pass^0,c
  1022  001A2C  0E1F               	movlw	high STR_41
  1023  001A2E  6E1D               	movwf	(esp8266_connect@pass+1)^0,c
  1024  001A30  EC1B  F009         	call	_esp8266_connect	;wreg free
  1025  001A34                     
  1026                           ;main.c: 32:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1027  001A34  0E1A               	movlw	26
  1028  001A36  0100               	movlb	0	; () banked
  1029  001A38  6FB6               	movwf	??_main& (0+255),b
  1030  001A3A  0EF8               	movlw	248
  1031  001A3C                     u2227:
  1032  001A3C  2EE8               	decfsz	wreg,f,c
  1033  001A3E  D7FE               	bra	u2227
  1034  001A40  2FB6               	decfsz	??_main& (0+255),f,b
  1035  001A42  D7FC               	bra	u2227
  1036  001A44  F000               	nop	
  1037  001A46                     
  1038                           ;main.c: 33:     esp8266_start("TCP","api.thingspeak.com","80");
  1039  001A46  0E21               	movlw	low STR_43
  1040  001A48  0100               	movlb	0	; () banked
  1041  001A4A  6FAD               	movwf	esp8266_start@ip& (0+255),b
  1042  001A4C  0E1F               	movlw	high STR_43
  1043  001A4E  6FAE               	movwf	(esp8266_start@ip+1)& (0+255),b
  1044  001A50  0EF5               	movlw	low (low STR_44)
  1045  001A52  6FAF               	movwf	esp8266_start@port& (0+255),b
  1046  001A54  0EEA               	movlw	STR_27& (0+255)
  1047  001A56  EC74  F00A         	call	_esp8266_start
  1048  001A5A                     
  1049                           ;main.c: 34:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1050  001A5A  0E1A               	movlw	26
  1051  001A5C  0100               	movlb	0	; () banked
  1052  001A5E  6FB6               	movwf	??_main& (0+255),b
  1053  001A60  0EF8               	movlw	248
  1054  001A62                     u2237:
  1055  001A62  2EE8               	decfsz	wreg,f,c
  1056  001A64  D7FE               	bra	u2237
  1057  001A66  2FB6               	decfsz	??_main& (0+255),f,b
  1058  001A68  D7FC               	bra	u2237
  1059  001A6A  F000               	nop	
  1060  001A6C                     
  1061                           ;main.c: 35:     esp8266_send("GET /update?api_key=231FL6YWUTJLN6BR&field1=88.9990");
  1062  001A6C  0EED               	movlw	low STR_45
  1063  001A6E  6E5E               	movwf	esp8266_send@data^0,c
  1064  001A70  0E1E               	movlw	high STR_45
  1065  001A72  6E5F               	movwf	(esp8266_send@data+1)^0,c
  1066  001A74  EC31  F00A         	call	_esp8266_send	;wreg free
  1067  001A78                     
  1068                           ;main.c: 36:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1069  001A78  0E1A               	movlw	26
  1070  001A7A  0100               	movlb	0	; () banked
  1071  001A7C  6FB6               	movwf	??_main& (0+255),b
  1072  001A7E  0EF8               	movlw	248
  1073  001A80                     u2247:
  1074  001A80  2EE8               	decfsz	wreg,f,c
  1075  001A82  D7FE               	bra	u2247
  1076  001A84  2FB6               	decfsz	??_main& (0+255),f,b
  1077  001A86  D7FC               	bra	u2247
  1078  001A88  F000               	nop	
  1079  001A8A                     l2812:
  1080                           
  1081                           ;main.c: 51:     {;main.c: 52:         _delay((unsigned long)((900)*(8000000/4000.0)));
  1082  001A8A  0E0A               	movlw	10
  1083  001A8C  0100               	movlb	0	; () banked
  1084  001A8E  6FB7               	movwf	(??_main+1)& (0+255),b
  1085  001A90  0E22               	movlw	34
  1086  001A92  6FB6               	movwf	??_main& (0+255),b
  1087  001A94  0EA1               	movlw	161
  1088  001A96                     u2257:
  1089  001A96  2EE8               	decfsz	wreg,f,c
  1090  001A98  D7FE               	bra	u2257
  1091  001A9A  2FB6               	decfsz	??_main& (0+255),f,b
  1092  001A9C  D7FC               	bra	u2257
  1093  001A9E  2FB7               	decfsz	(??_main+1)& (0+255),f,b
  1094  001AA0  D7FA               	bra	u2257
  1095  001AA2                     
  1096                           ;main.c: 53:         _delay((unsigned long)((900)*(8000000/4000.0)));
  1097  001AA2  0E0A               	movlw	10
  1098  001AA4  0100               	movlb	0	; () banked
  1099  001AA6  6FB7               	movwf	(??_main+1)& (0+255),b
  1100  001AA8  0E22               	movlw	34
  1101  001AAA  6FB6               	movwf	??_main& (0+255),b
  1102  001AAC  0EA1               	movlw	161
  1103  001AAE                     u2267:
  1104  001AAE  2EE8               	decfsz	wreg,f,c
  1105  001AB0  D7FE               	bra	u2267
  1106  001AB2  2FB6               	decfsz	??_main& (0+255),f,b
  1107  001AB4  D7FC               	bra	u2267
  1108  001AB6  2FB7               	decfsz	(??_main+1)& (0+255),f,b
  1109  001AB8  D7FA               	bra	u2267
  1110  001ABA                     
  1111                           ;main.c: 54:              esp8266_send("GET /update?api_key=231FL6YWUTJLN6BR&field1=33.9
      +                          990");
  1112  001ABA  0EB9               	movlw	low STR_46
  1113  001ABC  6E5E               	movwf	esp8266_send@data^0,c
  1114  001ABE  0E1E               	movlw	high STR_46
  1115  001AC0  6E5F               	movwf	(esp8266_send@data+1)^0,c
  1116  001AC2  EC31  F00A         	call	_esp8266_send	;wreg free
  1117  001AC6                     
  1118                           ;main.c: 55:          _delay((unsigned long)((900)*(8000000/4000.0)));
  1119  001AC6  0E0A               	movlw	10
  1120  001AC8  0100               	movlb	0	; () banked
  1121  001ACA  6FB7               	movwf	(??_main+1)& (0+255),b
  1122  001ACC  0E22               	movlw	34
  1123  001ACE  6FB6               	movwf	??_main& (0+255),b
  1124  001AD0  0EA1               	movlw	161
  1125  001AD2                     u2277:
  1126  001AD2  2EE8               	decfsz	wreg,f,c
  1127  001AD4  D7FE               	bra	u2277
  1128  001AD6  2FB6               	decfsz	??_main& (0+255),f,b
  1129  001AD8  D7FC               	bra	u2277
  1130  001ADA  2FB7               	decfsz	(??_main+1)& (0+255),f,b
  1131  001ADC  D7FA               	bra	u2277
  1132  001ADE                     
  1133                           ;main.c: 56:          _delay((unsigned long)((900)*(8000000/4000.0)));
  1134  001ADE  0E0A               	movlw	10
  1135  001AE0  0100               	movlb	0	; () banked
  1136  001AE2  6FB7               	movwf	(??_main+1)& (0+255),b
  1137  001AE4  0E22               	movlw	34
  1138  001AE6  6FB6               	movwf	??_main& (0+255),b
  1139  001AE8  0EA1               	movlw	161
  1140  001AEA                     u2287:
  1141  001AEA  2EE8               	decfsz	wreg,f,c
  1142  001AEC  D7FE               	bra	u2287
  1143  001AEE  2FB6               	decfsz	??_main& (0+255),f,b
  1144  001AF0  D7FC               	bra	u2287
  1145  001AF2  2FB7               	decfsz	(??_main+1)& (0+255),f,b
  1146  001AF4  D7FA               	bra	u2287
  1147  001AF6                     
  1148                           ;main.c: 119:           _delay((unsigned long)((500)*(8000000/4000.0)));
  1149  001AF6  0E06               	movlw	6
  1150  001AF8  0100               	movlb	0	; () banked
  1151  001AFA  6FB7               	movwf	(??_main+1)& (0+255),b
  1152  001AFC  0E13               	movlw	19
  1153  001AFE  6FB6               	movwf	??_main& (0+255),b
  1154  001B00  0EAD               	movlw	173
  1155  001B02                     u2297:
  1156  001B02  2EE8               	decfsz	wreg,f,c
  1157  001B04  D7FE               	bra	u2297
  1158  001B06  2FB6               	decfsz	??_main& (0+255),f,b
  1159  001B08  D7FC               	bra	u2297
  1160  001B0A  2FB7               	decfsz	(??_main+1)& (0+255),f,b
  1161  001B0C  D7FA               	bra	u2297
  1162  001B0E  D000               	nop2	
  1163  001B10  EF45  F00D         	goto	l2812
  1164  001B14  EF00  F000         	goto	start
  1165  001B18                     __end_of_main:
  1166                           	opt callstack 0
  1167                           
  1168 ;; *************** function _esp8266_start *****************
  1169 ;; Defined at:
  1170 ;;		line 231 in file "./Esp_8266.h"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  protocol        1    wreg     unsigned char 
  1173 ;;  ip              2   10[BANK0 ] PTR unsigned char 
  1174 ;;		 -> STR_43(19), 
  1175 ;;  port            1   12[BANK0 ] unsigned char 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  protocol        1   18[BANK0 ] unsigned char 
  1178 ;;  port_str        5   13[BANK0 ] unsigned char [5]
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      _Bool 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1
  1188 ;;      Params:         0       3       0
  1189 ;;      Locals:         0       6       0
  1190 ;;      Temps:          0       0       0
  1191 ;;      Totals:         0       9       0
  1192 ;;Total ram usage:        9 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; Hardware stack levels required when called:    9
  1195 ;; This function calls:
  1196 ;;		__esp8266_print
  1197 ;;		__esp8266_waitResponse
  1198 ;;		_sprintf
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text1
  1205  0014E8                     __ptext1:
  1206                           	opt callstack 0
  1207  0014E8                     _esp8266_start:
  1208                           	opt callstack 21
  1209                           
  1210                           ;incstack = 0
  1211                           ;esp8266_start@protocol stored from wreg
  1212  0014E8  0100               	movlb	0	; () banked
  1213  0014EA  6FB5               	movwf	esp8266_start@protocol& (0+255),b
  1214  0014EC                     
  1215                           ;./Esp_8266.h: 232:     _esp8266_print("AT+CIPSTART=\"");
  1216  0014EC  0E34               	movlw	low STR_26
  1217  0014EE  6E02               	movwf	__esp8266_print@ptr^0,c
  1218  0014F0  0E1F               	movlw	high STR_26
  1219  0014F2  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  1220  0014F4  ECD1  F009         	call	__esp8266_print	;wreg free
  1221  0014F8                     
  1222                           ;./Esp_8266.h: 233:     if (protocol == 1) {
  1223  0014F8  0100               	movlb	0	; () banked
  1224  0014FA  05B5               	decf	esp8266_start@protocol& (0+255),w,b
  1225  0014FC  A4D8               	btfss	status,2,c
  1226  0014FE  EF83  F00A         	goto	u1241
  1227  001502  EF85  F00A         	goto	u1240
  1228  001506                     u1241:
  1229  001506  EF8D  F00A         	goto	l2386
  1230  00150A                     u1240:
  1231  00150A                     
  1232                           ; BSR set to: 0
  1233                           ;./Esp_8266.h: 234:         _esp8266_print("TCP");
  1234  00150A  0EEA               	movlw	low STR_27
  1235  00150C  6E02               	movwf	__esp8266_print@ptr^0,c
  1236  00150E  0E1F               	movlw	high STR_27
  1237  001510  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  1238  001512  ECD1  F009         	call	__esp8266_print	;wreg free
  1239                           
  1240                           ;./Esp_8266.h: 235:     } else {
  1241  001516  EF93  F00A         	goto	l505
  1242  00151A                     l2386:
  1243                           
  1244                           ; BSR set to: 0
  1245                           ;./Esp_8266.h: 236:         _esp8266_print("UDP");
  1246  00151A  0EEE               	movlw	low STR_28
  1247  00151C  6E02               	movwf	__esp8266_print@ptr^0,c
  1248  00151E  0E1F               	movlw	high STR_28
  1249  001520  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  1250  001522  ECD1  F009         	call	__esp8266_print	;wreg free
  1251  001526                     l505:
  1252                           
  1253                           ;./Esp_8266.h: 238:     _esp8266_print("\",\"");
  1254  001526  0EE2               	movlw	low STR_20
  1255  001528  6E02               	movwf	__esp8266_print@ptr^0,c
  1256  00152A  0E1F               	movlw	high STR_20
  1257  00152C  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  1258  00152E  ECD1  F009         	call	__esp8266_print	;wreg free
  1259                           
  1260                           ;./Esp_8266.h: 239:     _esp8266_print(ip);
  1261  001532  C0AD  F002         	movff	esp8266_start@ip,__esp8266_print@ptr
  1262  001536  C0AE  F003         	movff	esp8266_start@ip+1,__esp8266_print@ptr+1
  1263  00153A  ECD1  F009         	call	__esp8266_print	;wreg free
  1264                           
  1265                           ;./Esp_8266.h: 240:     _esp8266_print("\",");
  1266  00153E  0EF2               	movlw	low STR_30
  1267  001540  6E02               	movwf	__esp8266_print@ptr^0,c
  1268  001542  0E1F               	movlw	high STR_30
  1269  001544  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  1270  001546  ECD1  F009         	call	__esp8266_print	;wreg free
  1271  00154A                     
  1272                           ;./Esp_8266.h: 241:     unsigned char port_str[5] = "\0\0\0\0";
  1273  00154A  EE20  F0B0         	lfsr	2,esp8266_start@port_str
  1274  00154E  0E04               	movlw	4
  1275  001550                     u1251:
  1276  001550  6ADE               	clrf	postinc2,c
  1277  001552  06E8               	decf	wreg,f,c
  1278  001554  E2FD               	bc	u1251
  1279  001556                     
  1280                           ;./Esp_8266.h: 242:     sprintf(port_str, "%u", port);
  1281  001556  0EB0               	movlw	low esp8266_start@port_str
  1282  001558  6E58               	movwf	sprintf@s^0,c
  1283  00155A  0E00               	movlw	high esp8266_start@port_str
  1284  00155C  6E59               	movwf	(sprintf@s+1)^0,c
  1285  00155E  0EFB               	movlw	low STR_31
  1286  001560  6E5A               	movwf	sprintf@fmt^0,c
  1287  001562  0E1F               	movlw	high STR_31
  1288  001564  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1289  001566  C0AF  F05C         	movff	esp8266_start@port,?_sprintf+4
  1290  00156A  6A5D               	clrf	(?_sprintf+5)^0,c
  1291  00156C  ECA8  F009         	call	_sprintf	;wreg free
  1292  001570                     
  1293                           ;./Esp_8266.h: 243:     _esp8266_print(port_str);
  1294  001570  0EB0               	movlw	low esp8266_start@port_str
  1295  001572  6E02               	movwf	__esp8266_print@ptr^0,c
  1296  001574  0E00               	movlw	high esp8266_start@port_str
  1297  001576  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  1298  001578  ECD1  F009         	call	__esp8266_print	;wreg free
  1299  00157C                     
  1300                           ;./Esp_8266.h: 244:     _esp8266_print("\r\n");
  1301  00157C  0EC2               	movlw	low (STR_37+2)
  1302  00157E  6E02               	movwf	__esp8266_print@ptr^0,c
  1303  001580  0E1F               	movlw	high (STR_37+2)
  1304  001582  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  1305  001584  ECD1  F009         	call	__esp8266_print	;wreg free
  1306  001588                     
  1307                           ;./Esp_8266.h: 245:     if (_esp8266_waitResponse() != 1) {
  1308  001588  EC7B  F00C         	call	__esp8266_waitResponse	;wreg free
  1309  00158C  06E8               	decf	wreg,f,c
  1310  00158E  B4D8               	btfsc	status,2,c
  1311  001590  EFCC  F00A         	goto	u1261
  1312  001594  EFCE  F00A         	goto	u1260
  1313  001598                     u1261:
  1314  001598  EFD0  F00A         	goto	l2400
  1315  00159C                     u1260:
  1316  00159C  EFD2  F00A         	goto	l509
  1317  0015A0                     l2400:
  1318                           
  1319                           ;./Esp_8266.h: 248:     if (_esp8266_waitResponse() != 5) {
  1320  0015A0  EC7B  F00C         	call	__esp8266_waitResponse	;wreg free
  1321  0015A4                     l509:
  1322  0015A4  0012               	return		;funcret
  1323  0015A6                     __end_of_esp8266_start:
  1324                           	opt callstack 0
  1325                           
  1326 ;; *************** function _esp8266_send *****************
  1327 ;; Defined at:
  1328 ;;		line 264 in file "./Esp_8266.h"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  data            2   93[COMRAM] PTR unsigned char 
  1331 ;;		 -> STR_46(52), STR_45(52), 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  length_str      6   10[BANK0 ] unsigned char [6]
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      _Bool 
  1336 ;; Registers used:
  1337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1
  1343 ;;      Params:         2       0       0
  1344 ;;      Locals:         0       8       0
  1345 ;;      Temps:          0       0       0
  1346 ;;      Totals:         2       8       0
  1347 ;;Total ram usage:       10 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:    9
  1350 ;; This function calls:
  1351 ;;		_EUSART1_Read
  1352 ;;		__esp8266_print
  1353 ;;		__esp8266_waitResponse
  1354 ;;		_sprintf
  1355 ;;		_strlen
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text2
  1362  001462                     __ptext2:
  1363                           	opt callstack 0
  1364  001462                     _esp8266_send:
  1365                           	opt callstack 21
  1366  001462                     
  1367                           ;./Esp_8266.h: 265:     unsigned char length_str[6] = "\0\0\0\0\0";
  1368  001462  EE20  F0AD         	lfsr	2,esp8266_send@length_str
  1369  001466  0E05               	movlw	5
  1370  001468                     u1271:
  1371  001468  6ADE               	clrf	postinc2,c
  1372  00146A  06E8               	decf	wreg,f,c
  1373  00146C  E2FD               	bc	u1271
  1374  00146E                     
  1375                           ;./Esp_8266.h: 266:     sprintf(length_str, "%u", strlen(data));
  1376  00146E  C05E  F001         	movff	esp8266_send@data,strlen@s
  1377  001472  C05F  F002         	movff	esp8266_send@data+1,strlen@s+1
  1378  001476  EC81  F009         	call	_strlen	;wreg free
  1379  00147A  C001  F0B3         	movff	?_strlen,_esp8266_send$2273
  1380  00147E  C002  F0B4         	movff	?_strlen+1,_esp8266_send$2273+1
  1381  001482                     
  1382                           ;./Esp_8266.h: 266:     sprintf(length_str, "%u", strlen(data));
  1383  001482  0EAD               	movlw	low esp8266_send@length_str
  1384  001484  6E58               	movwf	sprintf@s^0,c
  1385  001486  0E00               	movlw	high esp8266_send@length_str
  1386  001488  6E59               	movwf	(sprintf@s+1)^0,c
  1387  00148A  0EFB               	movlw	low STR_31
  1388  00148C  6E5A               	movwf	sprintf@fmt^0,c
  1389  00148E  0E1F               	movlw	high STR_31
  1390  001490  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1391  001492  C0B3  F05C         	movff	_esp8266_send$2273,?_sprintf+4
  1392  001496  C0B4  F05D         	movff	_esp8266_send$2273+1,?_sprintf+5
  1393  00149A  ECA8  F009         	call	_sprintf	;wreg free
  1394  00149E                     
  1395                           ;./Esp_8266.h: 267:     _esp8266_print("AT+CIPSEND=");
  1396  00149E  0E42               	movlw	low STR_34
  1397  0014A0  6E02               	movwf	__esp8266_print@ptr^0,c
  1398  0014A2  0E1F               	movlw	high STR_34
  1399  0014A4  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  1400  0014A6  ECD1  F009         	call	__esp8266_print	;wreg free
  1401  0014AA                     
  1402                           ;./Esp_8266.h: 268:     _esp8266_print(length_str);
  1403  0014AA  0EAD               	movlw	low esp8266_send@length_str
  1404  0014AC  6E02               	movwf	__esp8266_print@ptr^0,c
  1405  0014AE  0E00               	movlw	high esp8266_send@length_str
  1406  0014B0  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  1407  0014B2  ECD1  F009         	call	__esp8266_print	;wreg free
  1408  0014B6                     
  1409                           ;./Esp_8266.h: 269:     _esp8266_print("\r\n");
  1410  0014B6  0EC2               	movlw	low (STR_37+2)
  1411  0014B8  6E02               	movwf	__esp8266_print@ptr^0,c
  1412  0014BA  0E1F               	movlw	high (STR_37+2)
  1413  0014BC  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  1414  0014BE  ECD1  F009         	call	__esp8266_print	;wreg free
  1415  0014C2                     l2416:
  1416  0014C2  ECAB  F008         	call	_EUSART1_Read	;wreg free
  1417  0014C6  0A3E               	xorlw	62
  1418  0014C8  A4D8               	btfss	status,2,c
  1419  0014CA  EF69  F00A         	goto	u1281
  1420  0014CE  EF6B  F00A         	goto	u1280
  1421  0014D2                     u1281:
  1422  0014D2  EF61  F00A         	goto	l2416
  1423  0014D6                     u1280:
  1424  0014D6                     
  1425                           ;./Esp_8266.h: 271:     _esp8266_print(data);
  1426  0014D6  C05E  F002         	movff	esp8266_send@data,__esp8266_print@ptr
  1427  0014DA  C05F  F003         	movff	esp8266_send@data+1,__esp8266_print@ptr+1
  1428  0014DE  ECD1  F009         	call	__esp8266_print	;wreg free
  1429  0014E2                     
  1430                           ;./Esp_8266.h: 272:     if (_esp8266_waitResponse() == 1) {
  1431  0014E2  EC7B  F00C         	call	__esp8266_waitResponse	;wreg free
  1432  0014E6  0012               	return		;funcret
  1433  0014E8                     __end_of_esp8266_send:
  1434                           	opt callstack 0
  1435                           
  1436 ;; *************** function _sprintf *****************
  1437 ;; Defined at:
  1438 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  s               2   87[COMRAM] PTR unsigned char 
  1441 ;;		 -> esp8266_send@length_str(6), esp8266_start@port_str(5), 
  1442 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1443 ;;		 -> STR_33(3), STR_31(3), 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1446 ;;  ap              2    2[BANK0 ] PTR void [1]
  1447 ;;		 -> ?_sprintf(2), 
  1448 ;;  ret             2    0        int 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  2   87[COMRAM] int 
  1451 ;; Registers used:
  1452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1
  1458 ;;      Params:         6       0       0
  1459 ;;      Locals:         0      10       0
  1460 ;;      Temps:          0       0       0
  1461 ;;      Totals:         6      10       0
  1462 ;;Total ram usage:       16 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    8
  1465 ;; This function calls:
  1466 ;;		_vfprintf
  1467 ;; This function is called by:
  1468 ;;		_esp8266_start
  1469 ;;		_esp8266_send
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text3
  1474  001350                     __ptext3:
  1475                           	opt callstack 0
  1476  001350                     _sprintf:
  1477                           	opt callstack 21
  1478  001350  0E5C               	movlw	low (?_sprintf+4)
  1479  001352  0100               	movlb	0	; () banked
  1480  001354  6FA5               	movwf	sprintf@ap& (0+255),b
  1481  001356  0E00               	movlw	high (?_sprintf+4)
  1482  001358  6FA6               	movwf	(sprintf@ap+1)& (0+255),b
  1483  00135A  C058  F0A7         	movff	sprintf@s,sprintf@f
  1484  00135E  C059  F0A8         	movff	sprintf@s+1,sprintf@f+1
  1485  001362                     
  1486                           ; BSR set to: 0
  1487  001362  0E00               	movlw	0
  1488  001364  6FAA               	movwf	(sprintf@f+3)& (0+255),b
  1489  001366  0E00               	movlw	0
  1490  001368  6FA9               	movwf	(sprintf@f+2)& (0+255),b
  1491  00136A                     
  1492                           ; BSR set to: 0
  1493  00136A  0E00               	movlw	0
  1494  00136C  6FAC               	movwf	(sprintf@f+5)& (0+255),b
  1495  00136E  0E00               	movlw	0
  1496  001370  6FAB               	movwf	(sprintf@f+4)& (0+255),b
  1497  001372                     
  1498                           ; BSR set to: 0
  1499  001372  0EA7               	movlw	low sprintf@f
  1500  001374  6E50               	movwf	vfprintf@fp^0,c
  1501  001376  0E00               	movlw	high sprintf@f
  1502  001378  6E51               	movwf	(vfprintf@fp+1)^0,c
  1503  00137A  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1504  00137E  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1505  001382  0EA5               	movlw	low sprintf@ap
  1506  001384  6E54               	movwf	vfprintf@ap^0,c
  1507  001386  0E00               	movlw	high sprintf@ap
  1508  001388  6E55               	movwf	(vfprintf@ap+1)^0,c
  1509  00138A  EC00  F00A         	call	_vfprintf	;wreg free
  1510  00138E  0100               	movlb	0	; () banked
  1511  001390  51A9               	movf	(sprintf@f+2)& (0+255),w,b
  1512  001392  2458               	addwf	sprintf@s^0,w,c
  1513  001394  6ED9               	movwf	fsr2l,c
  1514  001396  51AA               	movf	(sprintf@f+3)& (0+255),w,b
  1515  001398  2059               	addwfc	(sprintf@s+1)^0,w,c
  1516  00139A  6EDA               	movwf	fsr2h,c
  1517  00139C  0E00               	movlw	0
  1518  00139E  6EDF               	movwf	indf2,c
  1519  0013A0                     
  1520                           ; BSR set to: 0
  1521  0013A0  0012               	return		;funcret
  1522  0013A2                     __end_of_sprintf:
  1523                           	opt callstack 0
  1524                           
  1525 ;; *************** function _vfprintf *****************
  1526 ;; Defined at:
  1527 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1530 ;;		 -> sprintf@f(6), 
  1531 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1532 ;;		 -> STR_33(3), STR_31(3), 
  1533 ;;  ap              2   83[COMRAM] PTR PTR void 
  1534 ;;		 -> sprintf@ap(2), 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1537 ;;		 -> STR_33(3), STR_31(3), 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  2   79[COMRAM] int 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1
  1547 ;;      Params:         6       0       0
  1548 ;;      Locals:         2       0       0
  1549 ;;      Temps:          0       0       0
  1550 ;;      Totals:         8       0       0
  1551 ;;Total ram usage:        8 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    7
  1554 ;; This function calls:
  1555 ;;		_vfpfcnvrt
  1556 ;; This function is called by:
  1557 ;;		_sprintf
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text4
  1562  001400                     __ptext4:
  1563                           	opt callstack 0
  1564  001400                     _vfprintf:
  1565                           	opt callstack 21
  1566  001400                     
  1567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1568  001400  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1569  001404  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1570  001408                     
  1571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1572  001408  0E00               	movlw	0
  1573  00140A  0100               	movlb	0	; () banked
  1574  00140C  6F7A               	movwf	(_nout+1)& (0+255),b
  1575  00140E  0E00               	movlw	0
  1576  001410  6F79               	movwf	_nout& (0+255),b
  1577                           
  1578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1579  001412  EF1E  F00A         	goto	l2224
  1580  001416                     l2222:
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1584  001416  C050  F03E         	movff	vfprintf@fp,vfpfcnvrt@fp
  1585  00141A  C051  F03F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1586  00141E  0E56               	movlw	low vfprintf@cfmt
  1587  001420  6E40               	movwf	vfpfcnvrt@fmt^0,c
  1588  001422  0E00               	movlw	high vfprintf@cfmt
  1589  001424  6E41               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1590  001426  C054  F042         	movff	vfprintf@ap,vfpfcnvrt@ap
  1591  00142A  C055  F043         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1592  00142E  EC8C  F00D         	call	_vfpfcnvrt	;wreg free
  1593  001432  503E               	movf	?_vfpfcnvrt^0,w,c
  1594  001434  0100               	movlb	0	; () banked
  1595  001436  2779               	addwf	_nout& (0+255),f,b
  1596  001438  503F               	movf	(?_vfpfcnvrt+1)^0,w,c
  1597  00143A  237A               	addwfc	(_nout+1)& (0+255),f,b
  1598  00143C                     l2224:
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1602  00143C  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1603  001440  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1604  001444                     	if	0	;tblptru may be non-zero
  1605  001444                     	endif
  1606  001444                     	if	0	;tblptru may be non-zero
  1607  001444                     	endif
  1608  001444  0008               	tblrd		*
  1609  001446  50F5               	movf	tablat,w,c
  1610  001448  0900               	iorlw	0
  1611  00144A  A4D8               	btfss	status,2,c
  1612  00144C  EF2A  F00A         	goto	u1111
  1613  001450  EF2C  F00A         	goto	u1110
  1614  001454                     u1111:
  1615  001454  EF0B  F00A         	goto	l2222
  1616  001458                     u1110:
  1617  001458                     
  1618                           ; BSR set to: 0
  1619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1620  001458  C079  F050         	movff	_nout,?_vfprintf
  1621  00145C  C07A  F051         	movff	_nout+1,?_vfprintf+1
  1622  001460                     
  1623                           ; BSR set to: 0
  1624  001460  0012               	return		;funcret
  1625  001462                     __end_of_vfprintf:
  1626                           	opt callstack 0
  1627                           
  1628 ;; *************** function _vfpfcnvrt *****************
  1629 ;; Defined at:
  1630 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  fp              2   61[COMRAM] PTR struct _IO_FILE
  1633 ;;		 -> sprintf@f(6), 
  1634 ;;  fmt             2   63[COMRAM] PTR PTR unsigned char 
  1635 ;;		 -> vfprintf@cfmt(2), 
  1636 ;;  ap              2   65[COMRAM] PTR PTR void 
  1637 ;;		 -> sprintf@ap(2), 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  llu             8   71[COMRAM] unsigned long long 
  1640 ;;  ll              8    0        long long 
  1641 ;;  f               4    0        long long 
  1642 ;;  vp              3    0        PTR void 
  1643 ;;  ct              3    0        unsigned char [3]
  1644 ;;  cp              3    0        PTR unsigned char 
  1645 ;;  i               2    0        int 
  1646 ;;  done            2    0        int 
  1647 ;;  c               1    0        unsigned char 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  2   61[COMRAM] int 
  1650 ;; Registers used:
  1651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1
  1657 ;;      Params:         6       0       0
  1658 ;;      Locals:         8       0       0
  1659 ;;      Temps:          4       0       0
  1660 ;;      Totals:        18       0       0
  1661 ;;Total ram usage:       18 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    6
  1664 ;; This function calls:
  1665 ;;		_fputc
  1666 ;;		_utoa
  1667 ;; This function is called by:
  1668 ;;		_vfprintf
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text5
  1673  001B18                     __ptext5:
  1674                           	opt callstack 0
  1675  001B18                     _vfpfcnvrt:
  1676                           	opt callstack 21
  1677  001B18                     
  1678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1679  001B18  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1680  001B1C  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1681  001B20  CFDE FFF6          	movff	postinc2,tblptrl
  1682  001B24  CFDD FFF7          	movff	postdec2,tblptrh
  1683  001B28                     	if	0	;tblptru may be non-zero
  1684  001B28                     	endif
  1685  001B28                     	if	0	;tblptru may be non-zero
  1686  001B28                     	endif
  1687  001B28  0008               	tblrd		*
  1688  001B2A  50F5               	movf	tablat,w,c
  1689  001B2C  0A25               	xorlw	37
  1690  001B2E  A4D8               	btfss	status,2,c
  1691  001B30  EF9C  F00D         	goto	u1061
  1692  001B34  EF9E  F00D         	goto	u1060
  1693  001B38                     u1061:
  1694  001B38  EF39  F00E         	goto	l2186
  1695  001B3C                     u1060:
  1696  001B3C                     
  1697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1698  001B3C  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1699  001B40  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1700  001B44  2ADE               	incf	postinc2,f,c
  1701  001B46  0E00               	movlw	0
  1702  001B48  22DD               	addwfc	postdec2,f,c
  1703  001B4A                     
  1704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1705  001B4A  0E00               	movlw	0
  1706  001B4C  0100               	movlb	0	; () banked
  1707  001B4E  6F7C               	movwf	(_width+1)& (0+255),b
  1708  001B50  0E00               	movlw	0
  1709  001B52  6F7B               	movwf	_width& (0+255),b
  1710  001B54  C07B  F07F         	movff	_width,_flags
  1711  001B58  C07C  F080         	movff	_width+1,_flags+1
  1712  001B5C                     
  1713                           ; BSR set to: 0
  1714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1715  001B5C  697D               	setf	_prec& (0+255),b
  1716  001B5E  697E               	setf	(_prec+1)& (0+255),b
  1717  001B60                     
  1718                           ; BSR set to: 0
  1719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1720  001B60  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1721  001B64  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1722  001B68  CFDE FFF6          	movff	postinc2,tblptrl
  1723  001B6C  CFDD FFF7          	movff	postdec2,tblptrh
  1724  001B70                     	if	0	;tblptru may be non-zero
  1725  001B70                     	endif
  1726  001B70                     	if	0	;tblptru may be non-zero
  1727  001B70                     	endif
  1728  001B70  0008               	tblrd		*
  1729  001B72  50F5               	movf	tablat,w,c
  1730  001B74  0A75               	xorlw	117
  1731  001B76  A4D8               	btfss	status,2,c
  1732  001B78  EFC0  F00D         	goto	u1071
  1733  001B7C  EFC2  F00D         	goto	u1070
  1734  001B80                     u1071:
  1735  001B80  EF03  F00E         	goto	l2170
  1736  001B84                     u1070:
  1737  001B84                     
  1738                           ; BSR set to: 0
  1739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1740  001B84  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1741  001B88  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1742  001B8C  2ADE               	incf	postinc2,f,c
  1743  001B8E  0E00               	movlw	0
  1744  001B90  22DD               	addwfc	postdec2,f,c
  1745                           
  1746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1747  001B92  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1748  001B96  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1749  001B9A  CFDF F044          	movff	indf2,??_vfpfcnvrt
  1750  001B9E  0E02               	movlw	2
  1751  001BA0  26DE               	addwf	postinc2,f,c
  1752  001BA2  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  1753  001BA6  0E00               	movlw	0
  1754  001BA8  22DD               	addwfc	postdec2,f,c
  1755  001BAA  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1756  001BAE  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1757  001BB2  CFDE F046          	movff	postinc2,??_vfpfcnvrt+2
  1758  001BB6  CFDD F047          	movff	postdec2,??_vfpfcnvrt+3
  1759  001BBA  C046  F048         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1760  001BBE  C047  F049         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1761  001BC2  6A4A               	clrf	(vfpfcnvrt@llu+2)^0,c
  1762  001BC4  6A4B               	clrf	(vfpfcnvrt@llu+3)^0,c
  1763  001BC6  6A4C               	clrf	(vfpfcnvrt@llu+4)^0,c
  1764  001BC8  6A4D               	clrf	(vfpfcnvrt@llu+5)^0,c
  1765  001BCA  6A4E               	clrf	(vfpfcnvrt@llu+6)^0,c
  1766  001BCC  6A4F               	clrf	(vfpfcnvrt@llu+7)^0,c
  1767  001BCE                     
  1768                           ; BSR set to: 0
  1769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1770  001BCE  C03E  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  1771  001BD2  C03F  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1772  001BD6  C048  F020         	movff	vfpfcnvrt@llu,utoa@d
  1773  001BDA  C049  F021         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1774  001BDE  C04A  F022         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1775  001BE2  C04B  F023         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1776  001BE6  C04C  F024         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1777  001BEA  C04D  F025         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1778  001BEE  C04E  F026         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1779  001BF2  C04F  F027         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1780  001BF6  EC55  F00E         	call	_utoa	;wreg free
  1781  001BFA  C01E  F03E         	movff	?_utoa,?_vfpfcnvrt
  1782  001BFE  C01F  F03F         	movff	?_utoa+1,?_vfpfcnvrt+1
  1783  001C02  EF54  F00E         	goto	l592
  1784  001C06                     l2170:
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1788  001C06  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1789  001C0A  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1790  001C0E  CFDE FFF6          	movff	postinc2,tblptrl
  1791  001C12  CFDD FFF7          	movff	postdec2,tblptrh
  1792  001C16                     	if	0	;tblptru may be non-zero
  1793  001C16                     	endif
  1794  001C16                     	if	0	;tblptru may be non-zero
  1795  001C16                     	endif
  1796  001C16  0008               	tblrd		*
  1797  001C18  50F5               	movf	tablat,w,c
  1798  001C1A  0A25               	xorlw	37
  1799  001C1C  A4D8               	btfss	status,2,c
  1800  001C1E  EF13  F00E         	goto	u1081
  1801  001C22  EF15  F00E         	goto	u1080
  1802  001C26                     u1081:
  1803  001C26  EF2C  F00E         	goto	l2180
  1804  001C2A                     u1080:
  1805  001C2A                     
  1806                           ; BSR set to: 0
  1807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1808  001C2A  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1809  001C2E  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1810  001C32  2ADE               	incf	postinc2,f,c
  1811  001C34  0E00               	movlw	0
  1812  001C36  22DD               	addwfc	postdec2,f,c
  1813  001C38                     
  1814                           ; BSR set to: 0
  1815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1816  001C38  0E00               	movlw	0
  1817  001C3A  6E04               	movwf	(fputc@c+1)^0,c
  1818  001C3C  0E25               	movlw	37
  1819  001C3E  6E03               	movwf	fputc@c^0,c
  1820  001C40  C03E  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1821  001C44  C03F  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1822  001C48  EC36  F00B         	call	_fputc	;wreg free
  1823  001C4C                     l2176:
  1824                           
  1825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1826  001C4C  0E00               	movlw	0
  1827  001C4E  6E3F               	movwf	(?_vfpfcnvrt+1)^0,c
  1828  001C50  0E01               	movlw	1
  1829  001C52  6E3E               	movwf	?_vfpfcnvrt^0,c
  1830  001C54  EF54  F00E         	goto	l592
  1831  001C58                     l2180:
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1835  001C58  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1836  001C5C  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1837  001C60  2ADE               	incf	postinc2,f,c
  1838  001C62  0E00               	movlw	0
  1839  001C64  22DD               	addwfc	postdec2,f,c
  1840  001C66                     
  1841                           ; BSR set to: 0
  1842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1843  001C66  0E00               	movlw	0
  1844  001C68  6E3F               	movwf	(?_vfpfcnvrt+1)^0,c
  1845  001C6A  0E00               	movlw	0
  1846  001C6C  6E3E               	movwf	?_vfpfcnvrt^0,c
  1847  001C6E  EF54  F00E         	goto	l592
  1848  001C72                     l2186:
  1849                           
  1850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1851  001C72  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1852  001C76  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1853  001C7A  CFDE FFF6          	movff	postinc2,tblptrl
  1854  001C7E  CFDD FFF7          	movff	postdec2,tblptrh
  1855  001C82                     	if	0	;tblptru may be non-zero
  1856  001C82                     	endif
  1857  001C82                     	if	0	;tblptru may be non-zero
  1858  001C82                     	endif
  1859  001C82  0008               	tblrd		*
  1860  001C84  50F5               	movf	tablat,w,c
  1861  001C86  6E03               	movwf	fputc@c^0,c
  1862  001C88  6A04               	clrf	(fputc@c+1)^0,c
  1863  001C8A  C03E  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1864  001C8E  C03F  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1865  001C92  EC36  F00B         	call	_fputc	;wreg free
  1866  001C96                     
  1867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1868  001C96  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1869  001C9A  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1870  001C9E  2ADE               	incf	postinc2,f,c
  1871  001CA0  0E00               	movlw	0
  1872  001CA2  22DD               	addwfc	postdec2,f,c
  1873  001CA4  EF26  F00E         	goto	l2176
  1874  001CA8                     l592:
  1875  001CA8  0012               	return		;funcret
  1876  001CAA                     __end_of_vfpfcnvrt:
  1877                           	opt callstack 0
  1878                           
  1879 ;; *************** function _utoa *****************
  1880 ;; Defined at:
  1881 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1884 ;;		 -> sprintf@f(6), 
  1885 ;;  d               8   31[COMRAM] unsigned long long 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  n               8   51[COMRAM] unsigned long long 
  1888 ;;  i               2   59[COMRAM] int 
  1889 ;;  w               2   49[COMRAM] int 
  1890 ;;  p               2   47[COMRAM] int 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  2   29[COMRAM] int 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1
  1900 ;;      Params:        10       0       0
  1901 ;;      Locals:        14       0       0
  1902 ;;      Temps:          8       0       0
  1903 ;;      Totals:        32       0       0
  1904 ;;Total ram usage:       32 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    5
  1907 ;; This function calls:
  1908 ;;		___lodiv
  1909 ;;		___lomod
  1910 ;;		_pad
  1911 ;; This function is called by:
  1912 ;;		_vfpfcnvrt
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text6
  1917  001CAA                     __ptext6:
  1918                           	opt callstack 0
  1919  001CAA                     _utoa:
  1920                           	opt callstack 21
  1921  001CAA                     
  1922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1923  001CAA  0100               	movlb	0	; () banked
  1924  001CAC  BF7E               	btfsc	(_prec+1)& (0+255),7,b
  1925  001CAE  EF5B  F00E         	goto	u991
  1926  001CB2  EF5D  F00E         	goto	u990
  1927  001CB6                     u991:
  1928  001CB6  EF5E  F00E         	goto	l2122
  1929  001CBA                     u990:
  1930  001CBA                     
  1931                           ; BSR set to: 0
  1932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1933  001CBA  937F               	bcf	_flags& (0+255),1,b
  1934  001CBC                     l2122:
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1938  001CBC  BF7E               	btfsc	(_prec+1)& (0+255),7,b
  1939  001CBE  EF6B  F00E         	goto	u1000
  1940  001CC2  517E               	movf	(_prec+1)& (0+255),w,b
  1941  001CC4  E106               	bnz	u1001
  1942  001CC6  057D               	decf	_prec& (0+255),w,b
  1943  001CC8  B0D8               	btfsc	status,0,c
  1944  001CCA  EF69  F00E         	goto	u1001
  1945  001CCE  EF6B  F00E         	goto	u1000
  1946  001CD2                     u1001:
  1947  001CD2  EF71  F00E         	goto	l577
  1948  001CD6                     u1000:
  1949  001CD6                     
  1950                           ; BSR set to: 0
  1951  001CD6  0E00               	movlw	0
  1952  001CD8  6E31               	movwf	(utoa@p+1)^0,c
  1953  001CDA  0E01               	movlw	1
  1954  001CDC  6E30               	movwf	utoa@p^0,c
  1955  001CDE  EF75  F00E         	goto	l579
  1956  001CE2                     l577:
  1957                           
  1958                           ; BSR set to: 0
  1959  001CE2  C07D  F030         	movff	_prec,utoa@p
  1960  001CE6  C07E  F031         	movff	_prec+1,utoa@p+1
  1961  001CEA                     l579:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1965  001CEA  C07B  F032         	movff	_width,utoa@w
  1966  001CEE  C07C  F033         	movff	_width+1,utoa@w+1
  1967                           
  1968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1969  001CF2  C020  F034         	movff	utoa@d,utoa@n
  1970  001CF6  C021  F035         	movff	utoa@d+1,utoa@n+1
  1971  001CFA  C022  F036         	movff	utoa@d+2,utoa@n+2
  1972  001CFE  C023  F037         	movff	utoa@d+3,utoa@n+3
  1973  001D02  C024  F038         	movff	utoa@d+4,utoa@n+4
  1974  001D06  C025  F039         	movff	utoa@d+5,utoa@n+5
  1975  001D0A  C026  F03A         	movff	utoa@d+6,utoa@n+6
  1976  001D0E  C027  F03B         	movff	utoa@d+7,utoa@n+7
  1977  001D12                     
  1978                           ; BSR set to: 0
  1979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1980  001D12  0E00               	movlw	0
  1981  001D14  6E3D               	movwf	(utoa@i+1)^0,c
  1982  001D16  0E1F               	movlw	31
  1983  001D18  6E3C               	movwf	utoa@i^0,c
  1984  001D1A                     
  1985                           ; BSR set to: 0
  1986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1987  001D1A  0E00               	movlw	0
  1988  001D1C  6FA2               	movwf	(_dbuf+31)& (0+255),b
  1989                           
  1990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1991  001D1E  EF07  F00F         	goto	l2140
  1992  001D22                     l2130:
  1993                           
  1994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1995  001D22  063C               	decf	utoa@i^0,f,c
  1996  001D24  A0D8               	btfss	status,0,c
  1997  001D26  063D               	decf	(utoa@i+1)^0,f,c
  1998  001D28                     
  1999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  2000  001D28  0E83               	movlw	low _dbuf
  2001  001D2A  243C               	addwf	utoa@i^0,w,c
  2002  001D2C  6ED9               	movwf	fsr2l,c
  2003  001D2E  0E00               	movlw	high _dbuf
  2004  001D30  203D               	addwfc	(utoa@i+1)^0,w,c
  2005  001D32  6EDA               	movwf	fsr2h,c
  2006  001D34  C034  F001         	movff	utoa@n,___lomod@dividend
  2007  001D38  C035  F002         	movff	utoa@n+1,___lomod@dividend+1
  2008  001D3C  C036  F003         	movff	utoa@n+2,___lomod@dividend+2
  2009  001D40  C037  F004         	movff	utoa@n+3,___lomod@dividend+3
  2010  001D44  C038  F005         	movff	utoa@n+4,___lomod@dividend+4
  2011  001D48  C039  F006         	movff	utoa@n+5,___lomod@dividend+5
  2012  001D4C  C03A  F007         	movff	utoa@n+6,___lomod@dividend+6
  2013  001D50  C03B  F008         	movff	utoa@n+7,___lomod@dividend+7
  2014  001D54  0E0A               	movlw	10
  2015  001D56  6E09               	movwf	___lomod@divisor^0,c
  2016  001D58  0E00               	movlw	0
  2017  001D5A  6E0A               	movwf	(___lomod@divisor+1)^0,c
  2018  001D5C  0E00               	movlw	0
  2019  001D5E  6E0B               	movwf	(___lomod@divisor+2)^0,c
  2020  001D60  0E00               	movlw	0
  2021  001D62  6E0C               	movwf	(___lomod@divisor+3)^0,c
  2022  001D64  0E00               	movlw	0
  2023  001D66  6E0D               	movwf	(___lomod@divisor+4)^0,c
  2024  001D68  0E00               	movlw	0
  2025  001D6A  6E0E               	movwf	(___lomod@divisor+5)^0,c
  2026  001D6C  0E00               	movlw	0
  2027  001D6E  6E0F               	movwf	(___lomod@divisor+6)^0,c
  2028  001D70  0E00               	movlw	0
  2029  001D72  6E10               	movwf	(___lomod@divisor+7)^0,c
  2030  001D74  EC9B  F00B         	call	___lomod	;wreg free
  2031  001D78  C001  F028         	movff	?___lomod,??_utoa
  2032  001D7C  C002  F029         	movff	?___lomod+1,??_utoa+1
  2033  001D80  C003  F02A         	movff	?___lomod+2,??_utoa+2
  2034  001D84  C004  F02B         	movff	?___lomod+3,??_utoa+3
  2035  001D88  C005  F02C         	movff	?___lomod+4,??_utoa+4
  2036  001D8C  C006  F02D         	movff	?___lomod+5,??_utoa+5
  2037  001D90  C007  F02E         	movff	?___lomod+6,??_utoa+6
  2038  001D94  C008  F02F         	movff	?___lomod+7,??_utoa+7
  2039  001D98  5028               	movf	??_utoa^0,w,c
  2040  001D9A  0F30               	addlw	48
  2041  001D9C  6EDF               	movwf	indf2,c
  2042  001D9E                     
  2043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  2044  001D9E  0630               	decf	utoa@p^0,f,c
  2045  001DA0  A0D8               	btfss	status,0,c
  2046  001DA2  0631               	decf	(utoa@p+1)^0,f,c
  2047  001DA4                     
  2048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  2049  001DA4  0632               	decf	utoa@w^0,f,c
  2050  001DA6  A0D8               	btfss	status,0,c
  2051  001DA8  0633               	decf	(utoa@w+1)^0,f,c
  2052  001DAA                     
  2053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  2054  001DAA  C034  F001         	movff	utoa@n,___lodiv@dividend
  2055  001DAE  C035  F002         	movff	utoa@n+1,___lodiv@dividend+1
  2056  001DB2  C036  F003         	movff	utoa@n+2,___lodiv@dividend+2
  2057  001DB6  C037  F004         	movff	utoa@n+3,___lodiv@dividend+3
  2058  001DBA  C038  F005         	movff	utoa@n+4,___lodiv@dividend+4
  2059  001DBE  C039  F006         	movff	utoa@n+5,___lodiv@dividend+5
  2060  001DC2  C03A  F007         	movff	utoa@n+6,___lodiv@dividend+6
  2061  001DC6  C03B  F008         	movff	utoa@n+7,___lodiv@dividend+7
  2062  001DCA  0E0A               	movlw	10
  2063  001DCC  6E09               	movwf	___lodiv@divisor^0,c
  2064  001DCE  0E00               	movlw	0
  2065  001DD0  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  2066  001DD2  0E00               	movlw	0
  2067  001DD4  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  2068  001DD6  0E00               	movlw	0
  2069  001DD8  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  2070  001DDA  0E00               	movlw	0
  2071  001DDC  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  2072  001DDE  0E00               	movlw	0
  2073  001DE0  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  2074  001DE2  0E00               	movlw	0
  2075  001DE4  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  2076  001DE6  0E00               	movlw	0
  2077  001DE8  6E10               	movwf	(___lodiv@divisor+7)^0,c
  2078  001DEA  EC03  F00C         	call	___lodiv	;wreg free
  2079  001DEE  C001  F034         	movff	?___lodiv,utoa@n
  2080  001DF2  C002  F035         	movff	?___lodiv+1,utoa@n+1
  2081  001DF6  C003  F036         	movff	?___lodiv+2,utoa@n+2
  2082  001DFA  C004  F037         	movff	?___lodiv+3,utoa@n+3
  2083  001DFE  C005  F038         	movff	?___lodiv+4,utoa@n+4
  2084  001E02  C006  F039         	movff	?___lodiv+5,utoa@n+5
  2085  001E06  C007  F03A         	movff	?___lodiv+6,utoa@n+6
  2086  001E0A  C008  F03B         	movff	?___lodiv+7,utoa@n+7
  2087  001E0E                     l2140:
  2088                           
  2089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2090  001E0E  503C               	movf	utoa@i^0,w,c
  2091  001E10  103D               	iorwf	(utoa@i+1)^0,w,c
  2092  001E12  B4D8               	btfsc	status,2,c
  2093  001E14  EF0E  F00F         	goto	u1011
  2094  001E18  EF10  F00F         	goto	u1010
  2095  001E1C                     u1011:
  2096  001E1C  EF41  F00F         	goto	l2150
  2097  001E20                     u1010:
  2098  001E20  5034               	movf	utoa@n^0,w,c
  2099  001E22  1035               	iorwf	(utoa@n+1)^0,w,c
  2100  001E24  1036               	iorwf	(utoa@n+2)^0,w,c
  2101  001E26  1037               	iorwf	(utoa@n+3)^0,w,c
  2102  001E28  1038               	iorwf	(utoa@n+4)^0,w,c
  2103  001E2A  1039               	iorwf	(utoa@n+5)^0,w,c
  2104  001E2C  103A               	iorwf	(utoa@n+6)^0,w,c
  2105  001E2E  103B               	iorwf	(utoa@n+7)^0,w,c
  2106  001E30  A4D8               	btfss	status,2,c
  2107  001E32  EF1D  F00F         	goto	u1021
  2108  001E36  EF1F  F00F         	goto	u1020
  2109  001E3A                     u1021:
  2110  001E3A  EF91  F00E         	goto	l2130
  2111  001E3E                     u1020:
  2112  001E3E  BE31               	btfsc	(utoa@p+1)^0,7,c
  2113  001E40  EF2C  F00F         	goto	u1030
  2114  001E44  5031               	movf	(utoa@p+1)^0,w,c
  2115  001E46  E106               	bnz	u1031
  2116  001E48  0430               	decf	utoa@p^0,w,c
  2117  001E4A  B0D8               	btfsc	status,0,c
  2118  001E4C  EF2A  F00F         	goto	u1031
  2119  001E50  EF2C  F00F         	goto	u1030
  2120  001E54                     u1031:
  2121  001E54  EF91  F00E         	goto	l2130
  2122  001E58                     u1030:
  2123  001E58  BE33               	btfsc	(utoa@w+1)^0,7,c
  2124  001E5A  EF37  F00F         	goto	u1041
  2125  001E5E  5033               	movf	(utoa@w+1)^0,w,c
  2126  001E60  E108               	bnz	u1040
  2127  001E62  0432               	decf	utoa@w^0,w,c
  2128  001E64  A0D8               	btfss	status,0,c
  2129  001E66  EF37  F00F         	goto	u1041
  2130  001E6A  EF39  F00F         	goto	u1040
  2131  001E6E                     u1041:
  2132  001E6E  EF41  F00F         	goto	l2150
  2133  001E72                     u1040:
  2134  001E72  0100               	movlb	0	; () banked
  2135  001E74  B37F               	btfsc	_flags& (0+255),1,b
  2136  001E76  EF3F  F00F         	goto	u1051
  2137  001E7A  EF41  F00F         	goto	u1050
  2138  001E7E                     u1051:
  2139  001E7E  EF91  F00E         	goto	l2130
  2140  001E82                     u1050:
  2141  001E82                     l2150:
  2142                           
  2143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  2144  001E82  C01E  F013         	movff	utoa@fp,pad@fp
  2145  001E86  C01F  F014         	movff	utoa@fp+1,pad@fp+1
  2146  001E8A  0E83               	movlw	low _dbuf
  2147  001E8C  243C               	addwf	utoa@i^0,w,c
  2148  001E8E  6E15               	movwf	pad@buf^0,c
  2149  001E90  0E00               	movlw	high _dbuf
  2150  001E92  203D               	addwfc	(utoa@i+1)^0,w,c
  2151  001E94  6E16               	movwf	(pad@buf+1)^0,c
  2152  001E96  C032  F017         	movff	utoa@w,pad@p
  2153  001E9A  C033  F018         	movff	utoa@w+1,pad@p+1
  2154  001E9E  ECD3  F00A         	call	_pad	;wreg free
  2155  001EA2  C013  F01E         	movff	?_pad,?_utoa
  2156  001EA6  C014  F01F         	movff	?_pad+1,?_utoa+1
  2157  001EAA  0012               	return		;funcret
  2158  001EAC                     __end_of_utoa:
  2159                           	opt callstack 0
  2160                           
  2161 ;; *************** function _pad *****************
  2162 ;; Defined at:
  2163 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  2166 ;;		 -> sprintf@f(6), 
  2167 ;;  buf             2   20[COMRAM] PTR unsigned char 
  2168 ;;		 -> dbuf(32), 
  2169 ;;  p               2   22[COMRAM] int 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  w               2   27[COMRAM] int 
  2172 ;;  i               2   25[COMRAM] int 
  2173 ;; Return value:  Size  Location     Type
  2174 ;;                  2   18[COMRAM] int 
  2175 ;; Registers used:
  2176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1
  2182 ;;      Params:         6       0       0
  2183 ;;      Locals:         4       0       0
  2184 ;;      Temps:          1       0       0
  2185 ;;      Totals:        11       0       0
  2186 ;;Total ram usage:       11 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    4
  2189 ;; This function calls:
  2190 ;;		_fputc
  2191 ;;		_fputs
  2192 ;;		_strlen
  2193 ;; This function is called by:
  2194 ;;		_utoa
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text7
  2199  0015A6                     __ptext7:
  2200                           	opt callstack 0
  2201  0015A6                     _pad:
  2202                           	opt callstack 21
  2203  0015A6                     
  2204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2205  0015A6  0100               	movlb	0	; () banked
  2206  0015A8  A17F               	btfss	_flags& (0+255),0,b
  2207  0015AA  EFD9  F00A         	goto	u881
  2208  0015AE  EFDB  F00A         	goto	u880
  2209  0015B2                     u881:
  2210  0015B2  EFE5  F00A         	goto	l2062
  2211  0015B6                     u880:
  2212  0015B6                     
  2213                           ; BSR set to: 0
  2214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2215  0015B6  C015  F00C         	movff	pad@buf,fputs@s
  2216  0015BA  C016  F00D         	movff	pad@buf+1,fputs@s+1
  2217  0015BE  C013  F00E         	movff	pad@fp,fputs@fp
  2218  0015C2  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  2219  0015C6  EC3C  F009         	call	_fputs	;wreg free
  2220  0015CA                     l2062:
  2221                           
  2222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2223  0015CA  BE18               	btfsc	(pad@p+1)^0,7,c
  2224  0015CC  EFEA  F00A         	goto	u891
  2225  0015D0  EFEC  F00A         	goto	u890
  2226  0015D4                     u891:
  2227  0015D4  EFF2  F00A         	goto	l2066
  2228  0015D8                     u890:
  2229  0015D8  C017  F01C         	movff	pad@p,pad@w
  2230  0015DC  C018  F01D         	movff	pad@p+1,pad@w+1
  2231  0015E0  EFF6  F00A         	goto	l567
  2232  0015E4                     l2066:
  2233  0015E4  0E00               	movlw	0
  2234  0015E6  6E1D               	movwf	(pad@w+1)^0,c
  2235  0015E8  0E00               	movlw	0
  2236  0015EA  6E1C               	movwf	pad@w^0,c
  2237  0015EC                     l567:
  2238                           
  2239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2240  0015EC  0E00               	movlw	0
  2241  0015EE  6E1B               	movwf	(pad@i+1)^0,c
  2242  0015F0  0E00               	movlw	0
  2243  0015F2  6E1A               	movwf	pad@i^0,c
  2244                           
  2245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2246  0015F4  EF08  F00B         	goto	l2072
  2247  0015F8                     l2068:
  2248                           
  2249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2250  0015F8  0E00               	movlw	0
  2251  0015FA  6E04               	movwf	(fputc@c+1)^0,c
  2252  0015FC  0E20               	movlw	32
  2253  0015FE  6E03               	movwf	fputc@c^0,c
  2254  001600  C013  F005         	movff	pad@fp,fputc@fp
  2255  001604  C014  F006         	movff	pad@fp+1,fputc@fp+1
  2256  001608  EC36  F00B         	call	_fputc	;wreg free
  2257  00160C                     
  2258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2259  00160C  4A1A               	infsnz	pad@i^0,f,c
  2260  00160E  2A1B               	incf	(pad@i+1)^0,f,c
  2261  001610                     l2072:
  2262                           
  2263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2264  001610  501C               	movf	pad@w^0,w,c
  2265  001612  5C1A               	subwf	pad@i^0,w,c
  2266  001614  501B               	movf	(pad@i+1)^0,w,c
  2267  001616  0A80               	xorlw	128
  2268  001618  6E19               	movwf	??_pad^0,c
  2269  00161A  501D               	movf	(pad@w+1)^0,w,c
  2270  00161C  0A80               	xorlw	128
  2271  00161E  5819               	subwfb	??_pad^0,w,c
  2272  001620  A0D8               	btfss	status,0,c
  2273  001622  EF15  F00B         	goto	u901
  2274  001626  EF17  F00B         	goto	u900
  2275  00162A                     u901:
  2276  00162A  EFFC  F00A         	goto	l2068
  2277  00162E                     u900:
  2278  00162E                     
  2279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2280  00162E  0100               	movlb	0	; () banked
  2281  001630  B17F               	btfsc	_flags& (0+255),0,b
  2282  001632  EF1D  F00B         	goto	u911
  2283  001636  EF1F  F00B         	goto	u910
  2284  00163A                     u911:
  2285  00163A  EF29  F00B         	goto	l2076
  2286  00163E                     u910:
  2287  00163E                     
  2288                           ; BSR set to: 0
  2289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2290  00163E  C015  F00C         	movff	pad@buf,fputs@s
  2291  001642  C016  F00D         	movff	pad@buf+1,fputs@s+1
  2292  001646  C013  F00E         	movff	pad@fp,fputs@fp
  2293  00164A  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  2294  00164E  EC3C  F009         	call	_fputs	;wreg free
  2295  001652                     l2076:
  2296                           
  2297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2298  001652  C015  F001         	movff	pad@buf,strlen@s
  2299  001656  C016  F002         	movff	pad@buf+1,strlen@s+1
  2300  00165A  EC81  F009         	call	_strlen	;wreg free
  2301  00165E  501C               	movf	pad@w^0,w,c
  2302  001660  2401               	addwf	?_strlen^0,w,c
  2303  001662  6E13               	movwf	?_pad^0,c
  2304  001664  501D               	movf	(pad@w+1)^0,w,c
  2305  001666  2002               	addwfc	(?_strlen+1)^0,w,c
  2306  001668  6E14               	movwf	(?_pad+1)^0,c
  2307  00166A  0012               	return		;funcret
  2308  00166C                     __end_of_pad:
  2309                           	opt callstack 0
  2310                           
  2311 ;; *************** function _strlen *****************
  2312 ;; Defined at:
  2313 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2316 ;;		 -> dbuf(32), STR_46(52), STR_45(52), 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2319 ;;		 -> dbuf(32), STR_46(52), STR_45(52), 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  2    0[COMRAM] unsigned int 
  2322 ;; Registers used:
  2323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1
  2329 ;;      Params:         2       0       0
  2330 ;;      Locals:         2       0       0
  2331 ;;      Temps:          0       0       0
  2332 ;;      Totals:         4       0       0
  2333 ;;Total ram usage:        4 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_esp8266_send
  2339 ;;		_pad
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text8
  2344  001302                     __ptext8:
  2345                           	opt callstack 0
  2346  001302                     _strlen:
  2347                           	opt callstack 24
  2348  001302  C001  F003         	movff	strlen@s,strlen@a
  2349  001306  C002  F004         	movff	strlen@s+1,strlen@a+1
  2350  00130A  EF89  F009         	goto	l2044
  2351  00130E                     l2042:
  2352  00130E  4A01               	infsnz	strlen@s^0,f,c
  2353  001310  2A02               	incf	(strlen@s+1)^0,f,c
  2354  001312                     l2044:
  2355  001312  C001  FFF6         	movff	strlen@s,tblptrl
  2356  001316  C002  FFF7         	movff	strlen@s+1,tblptrh
  2357  00131A  6AF8               	clrf	tblptru,c
  2358  00131C  0E01               	movlw	(high __ramtop+-1)
  2359  00131E  64F7               	cpfsgt	tblptrh,c
  2360  001320  D003               	bra	u857
  2361  001322  0008               	tblrd		*
  2362  001324  50F5               	movf	tablat,w,c
  2363  001326  D005               	bra	u850
  2364  001328                     u857:
  2365  001328  CFF6 FFE9          	movff	tblptrl,fsr0l
  2366  00132C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2367  001330  50EF               	movf	indf0,w,c
  2368  001332                     u850:
  2369  001332  0900               	iorlw	0
  2370  001334  A4D8               	btfss	status,2,c
  2371  001336  EF9F  F009         	goto	u861
  2372  00133A  EFA1  F009         	goto	u860
  2373  00133E                     u861:
  2374  00133E  EF87  F009         	goto	l2042
  2375  001342                     u860:
  2376  001342  5003               	movf	strlen@a^0,w,c
  2377  001344  5C01               	subwf	strlen@s^0,w,c
  2378  001346  6E01               	movwf	?_strlen^0,c
  2379  001348  5004               	movf	(strlen@a+1)^0,w,c
  2380  00134A  5802               	subwfb	(strlen@s+1)^0,w,c
  2381  00134C  6E02               	movwf	(?_strlen+1)^0,c
  2382  00134E  0012               	return		;funcret
  2383  001350                     __end_of_strlen:
  2384                           	opt callstack 0
  2385                           
  2386 ;; *************** function _fputs *****************
  2387 ;; Defined at:
  2388 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  s               2   11[COMRAM] PTR const unsigned char 
  2391 ;;		 -> dbuf(32), 
  2392 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  2393 ;;		 -> sprintf@f(6), 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  i               2   16[COMRAM] int 
  2396 ;;  c               1   15[COMRAM] unsigned char 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  2   11[COMRAM] int 
  2399 ;; Registers used:
  2400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1
  2406 ;;      Params:         4       0       0
  2407 ;;      Locals:         3       0       0
  2408 ;;      Temps:          0       0       0
  2409 ;;      Totals:         7       0       0
  2410 ;;Total ram usage:        7 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    3
  2413 ;; This function calls:
  2414 ;;		_fputc
  2415 ;; This function is called by:
  2416 ;;		_pad
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text9
  2421  001278                     __ptext9:
  2422                           	opt callstack 0
  2423  001278                     _fputs:
  2424                           	opt callstack 21
  2425  001278  0E00               	movlw	0
  2426  00127A  6E12               	movwf	(fputs@i+1)^0,c
  2427  00127C  0E00               	movlw	0
  2428  00127E  6E11               	movwf	fputs@i^0,c
  2429  001280  EF4D  F009         	goto	l2056
  2430  001284                     l2052:
  2431  001284  C010  F003         	movff	fputs@c,fputc@c
  2432  001288  6A04               	clrf	(fputc@c+1)^0,c
  2433  00128A  C00E  F005         	movff	fputs@fp,fputc@fp
  2434  00128E  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  2435  001292  EC36  F00B         	call	_fputc	;wreg free
  2436  001296  4A11               	infsnz	fputs@i^0,f,c
  2437  001298  2A12               	incf	(fputs@i+1)^0,f,c
  2438  00129A                     l2056:
  2439  00129A  5011               	movf	fputs@i^0,w,c
  2440  00129C  240C               	addwf	fputs@s^0,w,c
  2441  00129E  6ED9               	movwf	fsr2l,c
  2442  0012A0  5012               	movf	(fputs@i+1)^0,w,c
  2443  0012A2  200D               	addwfc	(fputs@s+1)^0,w,c
  2444  0012A4  6EDA               	movwf	fsr2h,c
  2445  0012A6  50DF               	movf	indf2,w,c
  2446  0012A8  6E10               	movwf	fputs@c^0,c
  2447  0012AA  5010               	movf	fputs@c^0,w,c
  2448  0012AC  A4D8               	btfss	status,2,c
  2449  0012AE  EF5B  F009         	goto	u871
  2450  0012B2  EF5D  F009         	goto	u870
  2451  0012B6                     u871:
  2452  0012B6  EF42  F009         	goto	l2052
  2453  0012BA                     u870:
  2454  0012BA  0012               	return		;funcret
  2455  0012BC                     __end_of_fputs:
  2456                           	opt callstack 0
  2457                           
  2458 ;; *************** function _fputc *****************
  2459 ;; Defined at:
  2460 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  c               2    2[COMRAM] int 
  2463 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  2464 ;;		 -> sprintf@f(6), 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  2    2[COMRAM] int 
  2469 ;; Registers used:
  2470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1
  2476 ;;      Params:         4       0       0
  2477 ;;      Locals:         0       0       0
  2478 ;;      Temps:          5       0       0
  2479 ;;      Totals:         9       0       0
  2480 ;;Total ram usage:        9 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:    2
  2483 ;; This function calls:
  2484 ;;		_putch
  2485 ;; This function is called by:
  2486 ;;		_pad
  2487 ;;		_vfpfcnvrt
  2488 ;;		_fputs
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text10
  2493  00166C                     __ptext10:
  2494                           	opt callstack 0
  2495  00166C                     _fputc:
  2496                           	opt callstack 21
  2497  00166C  5005               	movf	fputc@fp^0,w,c
  2498  00166E  1006               	iorwf	(fputc@fp+1)^0,w,c
  2499  001670  B4D8               	btfsc	status,2,c
  2500  001672  EF3D  F00B         	goto	u811
  2501  001676  EF3F  F00B         	goto	u810
  2502  00167A                     u811:
  2503  00167A  EF48  F00B         	goto	l2030
  2504  00167E                     u810:
  2505  00167E  5005               	movf	fputc@fp^0,w,c
  2506  001680  1006               	iorwf	(fputc@fp+1)^0,w,c
  2507  001682  A4D8               	btfss	status,2,c
  2508  001684  EF46  F00B         	goto	u821
  2509  001688  EF48  F00B         	goto	u820
  2510  00168C                     u821:
  2511  00168C  EF4D  F00B         	goto	l2032
  2512  001690                     u820:
  2513  001690                     l2030:
  2514  001690  5003               	movf	fputc@c^0,w,c
  2515  001692  EC58  F008         	call	_putch
  2516  001696  EF9A  F00B         	goto	l1285
  2517  00169A                     l2032:
  2518  00169A  EE20 F004          	lfsr	2,4
  2519  00169E  5005               	movf	fputc@fp^0,w,c
  2520  0016A0  26D9               	addwf	fsr2l,f,c
  2521  0016A2  5006               	movf	(fputc@fp+1)^0,w,c
  2522  0016A4  22DA               	addwfc	fsr2h,f,c
  2523  0016A6  50DE               	movf	postinc2,w,c
  2524  0016A8  10DE               	iorwf	postinc2,w,c
  2525  0016AA  B4D8               	btfsc	status,2,c
  2526  0016AC  EF5A  F00B         	goto	u831
  2527  0016B0  EF5C  F00B         	goto	u830
  2528  0016B4                     u831:
  2529  0016B4  EF77  F00B         	goto	l2036
  2530  0016B8                     u830:
  2531  0016B8  EE20 F004          	lfsr	2,4
  2532  0016BC  5005               	movf	fputc@fp^0,w,c
  2533  0016BE  26D9               	addwf	fsr2l,f,c
  2534  0016C0  5006               	movf	(fputc@fp+1)^0,w,c
  2535  0016C2  22DA               	addwfc	fsr2h,f,c
  2536  0016C4  EE10 F002          	lfsr	1,2
  2537  0016C8  5005               	movf	fputc@fp^0,w,c
  2538  0016CA  26E1               	addwf	fsr1l,f,c
  2539  0016CC  5006               	movf	(fputc@fp+1)^0,w,c
  2540  0016CE  22E2               	addwfc	fsr1h,f,c
  2541  0016D0  50DE               	movf	postinc2,w,c
  2542  0016D2  5CE6               	subwf	postinc1,w,c
  2543  0016D4  50E6               	movf	postinc1,w,c
  2544  0016D6  0A80               	xorlw	128
  2545  0016D8  6E0B               	movwf	(??_fputc+4)^0,c
  2546  0016DA  50DE               	movf	postinc2,w,c
  2547  0016DC  0A80               	xorlw	128
  2548  0016DE  580B               	subwfb	(??_fputc+4)^0,w,c
  2549  0016E0  B0D8               	btfsc	status,0,c
  2550  0016E2  EF75  F00B         	goto	u841
  2551  0016E6  EF77  F00B         	goto	u840
  2552  0016EA                     u841:
  2553  0016EA  EF9A  F00B         	goto	l1285
  2554  0016EE                     u840:
  2555  0016EE                     l2036:
  2556  0016EE  EE20 F002          	lfsr	2,2
  2557  0016F2  5005               	movf	fputc@fp^0,w,c
  2558  0016F4  26D9               	addwf	fsr2l,f,c
  2559  0016F6  5006               	movf	(fputc@fp+1)^0,w,c
  2560  0016F8  22DA               	addwfc	fsr2h,f,c
  2561  0016FA  CFDE F007          	movff	postinc2,??_fputc
  2562  0016FE  CFDD F008          	movff	postdec2,??_fputc+1
  2563  001702  C005  FFD9         	movff	fputc@fp,fsr2l
  2564  001706  C006  FFDA         	movff	fputc@fp+1,fsr2h
  2565  00170A  CFDE F009          	movff	postinc2,??_fputc+2
  2566  00170E  CFDD F00A          	movff	postdec2,??_fputc+3
  2567  001712  5007               	movf	??_fputc^0,w,c
  2568  001714  2409               	addwf	(??_fputc+2)^0,w,c
  2569  001716  6ED9               	movwf	fsr2l,c
  2570  001718  5008               	movf	(??_fputc+1)^0,w,c
  2571  00171A  200A               	addwfc	(??_fputc+3)^0,w,c
  2572  00171C  6EDA               	movwf	fsr2h,c
  2573  00171E  C003  FFDF         	movff	fputc@c,indf2
  2574  001722  EE20 F002          	lfsr	2,2
  2575  001726  5005               	movf	fputc@fp^0,w,c
  2576  001728  26D9               	addwf	fsr2l,f,c
  2577  00172A  5006               	movf	(fputc@fp+1)^0,w,c
  2578  00172C  22DA               	addwfc	fsr2h,f,c
  2579  00172E  2ADE               	incf	postinc2,f,c
  2580  001730  0E00               	movlw	0
  2581  001732  22DD               	addwfc	postdec2,f,c
  2582  001734                     l1285:
  2583  001734  0012               	return		;funcret
  2584  001736                     __end_of_fputc:
  2585                           	opt callstack 0
  2586                           
  2587 ;; *************** function _putch *****************
  2588 ;; Defined at:
  2589 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  txData          1    wreg     unsigned char 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  txData          1    1[COMRAM] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1
  2603 ;;      Params:         0       0       0
  2604 ;;      Locals:         1       0       0
  2605 ;;      Temps:          0       0       0
  2606 ;;      Totals:         1       0       0
  2607 ;;Total ram usage:        1 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    1
  2610 ;; This function calls:
  2611 ;;		_EUSART1_Write
  2612 ;; This function is called by:
  2613 ;;		_fputc
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text11
  2618  0010B0                     __ptext11:
  2619                           	opt callstack 0
  2620  0010B0                     _putch:
  2621                           	opt callstack 21
  2622                           
  2623                           ;incstack = 0
  2624                           ;putch@txData stored from wreg
  2625  0010B0  6E02               	movwf	putch@txData^0,c
  2626  0010B2                     
  2627                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  2628  0010B2  5002               	movf	putch@txData^0,w,c
  2629  0010B4  EC7E  F008         	call	_EUSART1_Write
  2630  0010B8  0012               	return		;funcret
  2631  0010BA                     __end_of_putch:
  2632                           	opt callstack 0
  2633                           
  2634 ;; *************** function ___lomod *****************
  2635 ;; Defined at:
  2636 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  dividend        8    0[COMRAM] unsigned long long 
  2639 ;;  divisor         8    8[COMRAM] unsigned long long 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  counter         1   16[COMRAM] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  8    0[COMRAM] unsigned long long 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1
  2651 ;;      Params:        16       0       0
  2652 ;;      Locals:         1       0       0
  2653 ;;      Temps:          0       0       0
  2654 ;;      Totals:        17       0       0
  2655 ;;Total ram usage:       17 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_utoa
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text12
  2665  001736                     __ptext12:
  2666                           	opt callstack 0
  2667  001736                     ___lomod:
  2668                           	opt callstack 25
  2669  001736  5009               	movf	___lomod@divisor^0,w,c
  2670  001738  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2671  00173A  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2672  00173C  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2673  00173E  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2674  001740  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2675  001742  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2676  001744  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2677  001746  B4D8               	btfsc	status,2,c
  2678  001748  EFA8  F00B         	goto	u961
  2679  00174C  EFAA  F00B         	goto	u960
  2680  001750                     u961:
  2681  001750  EFF2  F00B         	goto	l1050
  2682  001754                     u960:
  2683  001754  0E01               	movlw	1
  2684  001756  6E11               	movwf	___lomod@counter^0,c
  2685  001758  EFB8  F00B         	goto	l2108
  2686  00175C                     l2106:
  2687  00175C  90D8               	bcf	status,0,c
  2688  00175E  3609               	rlcf	___lomod@divisor^0,f,c
  2689  001760  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2690  001762  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2691  001764  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2692  001766  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2693  001768  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2694  00176A  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2695  00176C  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2696  00176E  2A11               	incf	___lomod@counter^0,f,c
  2697  001770                     l2108:
  2698  001770  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2699  001772  EFBD  F00B         	goto	u971
  2700  001776  EFBF  F00B         	goto	u970
  2701  00177A                     u971:
  2702  00177A  EFAE  F00B         	goto	l2106
  2703  00177E                     u970:
  2704  00177E                     l2110:
  2705  00177E  5009               	movf	___lomod@divisor^0,w,c
  2706  001780  5C01               	subwf	___lomod@dividend^0,w,c
  2707  001782  500A               	movf	(___lomod@divisor+1)^0,w,c
  2708  001784  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2709  001786  500B               	movf	(___lomod@divisor+2)^0,w,c
  2710  001788  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2711  00178A  500C               	movf	(___lomod@divisor+3)^0,w,c
  2712  00178C  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2713  00178E  500D               	movf	(___lomod@divisor+4)^0,w,c
  2714  001790  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2715  001792  500E               	movf	(___lomod@divisor+5)^0,w,c
  2716  001794  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2717  001796  500F               	movf	(___lomod@divisor+6)^0,w,c
  2718  001798  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2719  00179A  5010               	movf	(___lomod@divisor+7)^0,w,c
  2720  00179C  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2721  00179E  A0D8               	btfss	status,0,c
  2722  0017A0  EFD4  F00B         	goto	u981
  2723  0017A4  EFD6  F00B         	goto	u980
  2724  0017A8                     u981:
  2725  0017A8  EFE6  F00B         	goto	l2114
  2726  0017AC                     u980:
  2727  0017AC  5009               	movf	___lomod@divisor^0,w,c
  2728  0017AE  5E01               	subwf	___lomod@dividend^0,f,c
  2729  0017B0  500A               	movf	(___lomod@divisor+1)^0,w,c
  2730  0017B2  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2731  0017B4  500B               	movf	(___lomod@divisor+2)^0,w,c
  2732  0017B6  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2733  0017B8  500C               	movf	(___lomod@divisor+3)^0,w,c
  2734  0017BA  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2735  0017BC  500D               	movf	(___lomod@divisor+4)^0,w,c
  2736  0017BE  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2737  0017C0  500E               	movf	(___lomod@divisor+5)^0,w,c
  2738  0017C2  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2739  0017C4  500F               	movf	(___lomod@divisor+6)^0,w,c
  2740  0017C6  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2741  0017C8  5010               	movf	(___lomod@divisor+7)^0,w,c
  2742  0017CA  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2743  0017CC                     l2114:
  2744  0017CC  90D8               	bcf	status,0,c
  2745  0017CE  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2746  0017D0  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2747  0017D2  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2748  0017D4  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2749  0017D6  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2750  0017D8  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2751  0017DA  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2752  0017DC  3209               	rrcf	___lomod@divisor^0,f,c
  2753  0017DE  2E11               	decfsz	___lomod@counter^0,f,c
  2754  0017E0  EFBF  F00B         	goto	l2110
  2755  0017E4                     l1050:
  2756  0017E4  C001  F001         	movff	___lomod@dividend,?___lomod
  2757  0017E8  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2758  0017EC  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2759  0017F0  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2760  0017F4  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2761  0017F8  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2762  0017FC  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2763  001800  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2764  001804  0012               	return		;funcret
  2765  001806                     __end_of___lomod:
  2766                           	opt callstack 0
  2767                           
  2768 ;; *************** function ___lodiv *****************
  2769 ;; Defined at:
  2770 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  dividend        8    0[COMRAM] unsigned long long 
  2773 ;;  divisor         8    8[COMRAM] unsigned long long 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  quotient        8   16[COMRAM] unsigned long long 
  2776 ;;  counter         1   24[COMRAM] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  8    0[COMRAM] unsigned long long 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1
  2786 ;;      Params:        16       0       0
  2787 ;;      Locals:         9       0       0
  2788 ;;      Temps:          0       0       0
  2789 ;;      Totals:        25       0       0
  2790 ;;Total ram usage:       25 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_utoa
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text13
  2800  001806                     __ptext13:
  2801                           	opt callstack 0
  2802  001806                     ___lodiv:
  2803                           	opt callstack 25
  2804  001806  EE20  F011         	lfsr	2,___lodiv@quotient
  2805  00180A  0E07               	movlw	7
  2806  00180C                     u921:
  2807  00180C  6ADE               	clrf	postinc2,c
  2808  00180E  06E8               	decf	wreg,f,c
  2809  001810  E2FD               	bc	u921
  2810  001812  5009               	movf	___lodiv@divisor^0,w,c
  2811  001814  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2812  001816  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2813  001818  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2814  00181A  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2815  00181C  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2816  00181E  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2817  001820  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2818  001822  B4D8               	btfsc	status,2,c
  2819  001824  EF16  F00C         	goto	u931
  2820  001828  EF18  F00C         	goto	u930
  2821  00182C                     u931:
  2822  00182C  EF6A  F00C         	goto	l1040
  2823  001830                     u930:
  2824  001830  0E01               	movlw	1
  2825  001832  6E19               	movwf	___lodiv@counter^0,c
  2826  001834  EF26  F00C         	goto	l2088
  2827  001838                     l2086:
  2828  001838  90D8               	bcf	status,0,c
  2829  00183A  3609               	rlcf	___lodiv@divisor^0,f,c
  2830  00183C  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2831  00183E  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2832  001840  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2833  001842  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2834  001844  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2835  001846  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2836  001848  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2837  00184A  2A19               	incf	___lodiv@counter^0,f,c
  2838  00184C                     l2088:
  2839  00184C  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2840  00184E  EF2B  F00C         	goto	u941
  2841  001852  EF2D  F00C         	goto	u940
  2842  001856                     u941:
  2843  001856  EF1C  F00C         	goto	l2086
  2844  00185A                     u940:
  2845  00185A                     l2090:
  2846  00185A  90D8               	bcf	status,0,c
  2847  00185C  3611               	rlcf	___lodiv@quotient^0,f,c
  2848  00185E  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2849  001860  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2850  001862  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2851  001864  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2852  001866  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2853  001868  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2854  00186A  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2855  00186C  5009               	movf	___lodiv@divisor^0,w,c
  2856  00186E  5C01               	subwf	___lodiv@dividend^0,w,c
  2857  001870  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2858  001872  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2859  001874  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2860  001876  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2861  001878  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2862  00187A  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2863  00187C  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2864  00187E  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2865  001880  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2866  001882  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2867  001884  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2868  001886  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2869  001888  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2870  00188A  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2871  00188C  A0D8               	btfss	status,0,c
  2872  00188E  EF4B  F00C         	goto	u951
  2873  001892  EF4D  F00C         	goto	u950
  2874  001896                     u951:
  2875  001896  EF5E  F00C         	goto	l2098
  2876  00189A                     u950:
  2877  00189A  5009               	movf	___lodiv@divisor^0,w,c
  2878  00189C  5E01               	subwf	___lodiv@dividend^0,f,c
  2879  00189E  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2880  0018A0  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2881  0018A2  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2882  0018A4  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2883  0018A6  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2884  0018A8  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2885  0018AA  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2886  0018AC  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2887  0018AE  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2888  0018B0  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2889  0018B2  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2890  0018B4  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2891  0018B6  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2892  0018B8  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2893  0018BA  8011               	bsf	___lodiv@quotient^0,0,c
  2894  0018BC                     l2098:
  2895  0018BC  90D8               	bcf	status,0,c
  2896  0018BE  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2897  0018C0  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2898  0018C2  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2899  0018C4  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2900  0018C6  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2901  0018C8  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2902  0018CA  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2903  0018CC  3209               	rrcf	___lodiv@divisor^0,f,c
  2904  0018CE  2E19               	decfsz	___lodiv@counter^0,f,c
  2905  0018D0  EF2D  F00C         	goto	l2090
  2906  0018D4                     l1040:
  2907  0018D4  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2908  0018D8  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2909  0018DC  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2910  0018E0  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2911  0018E4  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2912  0018E8  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2913  0018EC  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2914  0018F0  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2915  0018F4  0012               	return		;funcret
  2916  0018F6                     __end_of___lodiv:
  2917                           	opt callstack 0
  2918                           
  2919 ;; *************** function _esp8266_mode *****************
  2920 ;; Defined at:
  2921 ;;		line 157 in file "./Esp_8266.h"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  mode            1    wreg     unsigned char 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  mode            1   25[COMRAM] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1
  2935 ;;      Params:         0       0       0
  2936 ;;      Locals:         1       0       0
  2937 ;;      Temps:          0       0       0
  2938 ;;      Totals:         1       0       0
  2939 ;;Total ram usage:        1 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    2
  2942 ;; This function calls:
  2943 ;;		_EUSART1_Write
  2944 ;;		__esp8266_print
  2945 ;;		__esp8266_waitResponse
  2946 ;; This function is called by:
  2947 ;;		_main
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text14
  2952  00112E                     __ptext14:
  2953                           	opt callstack 0
  2954  00112E                     _esp8266_mode:
  2955                           	opt callstack 28
  2956                           
  2957                           ;incstack = 0
  2958                           ;esp8266_mode@mode stored from wreg
  2959  00112E  6E1A               	movwf	esp8266_mode@mode^0,c
  2960  001130                     
  2961                           ;./Esp_8266.h: 158:     _esp8266_print("AT+CWMODE=");
  2962  001130  0E6F               	movlw	low STR_17
  2963  001132  6E02               	movwf	__esp8266_print@ptr^0,c
  2964  001134  0E1F               	movlw	high STR_17
  2965  001136  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  2966  001138  ECD1  F009         	call	__esp8266_print	;wreg free
  2967  00113C                     
  2968                           ;./Esp_8266.h: 159:     EUSART1_Write(mode + '0');
  2969  00113C  501A               	movf	esp8266_mode@mode^0,w,c
  2970  00113E  0F30               	addlw	48
  2971  001140  EC7E  F008         	call	_EUSART1_Write
  2972  001144                     
  2973                           ;./Esp_8266.h: 160:     _esp8266_print("\r\n");
  2974  001144  0EC2               	movlw	low (STR_37+2)
  2975  001146  6E02               	movwf	__esp8266_print@ptr^0,c
  2976  001148  0E1F               	movlw	high (STR_37+2)
  2977  00114A  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  2978  00114C  ECD1  F009         	call	__esp8266_print	;wreg free
  2979  001150                     
  2980                           ;./Esp_8266.h: 161:     _esp8266_waitResponse();
  2981  001150  EC7B  F00C         	call	__esp8266_waitResponse	;wreg free
  2982  001154  0012               	return		;funcret
  2983  001156                     __end_of_esp8266_mode:
  2984                           	opt callstack 0
  2985                           
  2986 ;; *************** function _esp8266_isStarted *****************
  2987 ;; Defined at:
  2988 ;;		line 105 in file "./Esp_8266.h"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      _Bool 
  2995 ;; Registers used:
  2996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1
  3002 ;;      Params:         0       0       0
  3003 ;;      Locals:         0       0       0
  3004 ;;      Temps:          0       0       0
  3005 ;;      Totals:         0       0       0
  3006 ;;Total ram usage:        0 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    2
  3009 ;; This function calls:
  3010 ;;		__esp8266_print
  3011 ;;		__esp8266_waitResponse
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text15
  3018  0010D4                     __ptext15:
  3019                           	opt callstack 0
  3020  0010D4                     _esp8266_isStarted:
  3021                           	opt callstack 28
  3022  0010D4                     
  3023                           ;./Esp_8266.h: 106:     _esp8266_print("AT\r\n");
  3024  0010D4  0EC5               	movlw	low STR_12
  3025  0010D6  6E02               	movwf	__esp8266_print@ptr^0,c
  3026  0010D8  0E1F               	movlw	high STR_12
  3027  0010DA  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  3028  0010DC  ECD1  F009         	call	__esp8266_print	;wreg free
  3029  0010E0                     
  3030                           ;./Esp_8266.h: 107:     return (_esp8266_waitResponse() == 1);;	Return value of _esp8266
      +                          _isStarted is never used
  3031  0010E0  EC7B  F00C         	call	__esp8266_waitResponse	;wreg free
  3032  0010E4  0012               	return		;funcret
  3033  0010E6                     __end_of_esp8266_isStarted:
  3034                           	opt callstack 0
  3035                           
  3036 ;; *************** function _esp8266_connect *****************
  3037 ;; Defined at:
  3038 ;;		line 173 in file "./Esp_8266.h"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  ssid            2   25[COMRAM] PTR unsigned char 
  3041 ;;		 -> STR_40(6), 
  3042 ;;  pass            2   27[COMRAM] PTR unsigned char 
  3043 ;;		 -> STR_41(11), 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      unsigned char 
  3048 ;; Registers used:
  3049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1
  3055 ;;      Params:         4       0       0
  3056 ;;      Locals:         0       0       0
  3057 ;;      Temps:          0       0       0
  3058 ;;      Totals:         4       0       0
  3059 ;;Total ram usage:        4 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    2
  3062 ;; This function calls:
  3063 ;;		__esp8266_print
  3064 ;;		__esp8266_waitResponse
  3065 ;; This function is called by:
  3066 ;;		_main
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text16
  3071  001236                     __ptext16:
  3072                           	opt callstack 0
  3073  001236                     _esp8266_connect:
  3074                           	opt callstack 28
  3075  001236                     
  3076                           ;./Esp_8266.h: 174:     _esp8266_print("AT+CWJAP=\"");
  3077  001236  0E64               	movlw	low STR_19
  3078  001238  6E02               	movwf	__esp8266_print@ptr^0,c
  3079  00123A  0E1F               	movlw	high STR_19
  3080  00123C  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  3081  00123E  ECD1  F009         	call	__esp8266_print	;wreg free
  3082                           
  3083                           ;./Esp_8266.h: 175:     _esp8266_print(ssid);
  3084  001242  C01A  F002         	movff	esp8266_connect@ssid,__esp8266_print@ptr
  3085  001246  C01B  F003         	movff	esp8266_connect@ssid+1,__esp8266_print@ptr+1
  3086  00124A  ECD1  F009         	call	__esp8266_print	;wreg free
  3087                           
  3088                           ;./Esp_8266.h: 176:     _esp8266_print("\",\"");
  3089  00124E  0EE2               	movlw	low STR_20
  3090  001250  6E02               	movwf	__esp8266_print@ptr^0,c
  3091  001252  0E1F               	movlw	high STR_20
  3092  001254  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  3093  001256  ECD1  F009         	call	__esp8266_print	;wreg free
  3094                           
  3095                           ;./Esp_8266.h: 177:     _esp8266_print(pass);
  3096  00125A  C01C  F002         	movff	esp8266_connect@pass,__esp8266_print@ptr
  3097  00125E  C01D  F003         	movff	esp8266_connect@pass+1,__esp8266_print@ptr+1
  3098  001262  ECD1  F009         	call	__esp8266_print	;wreg free
  3099                           
  3100                           ;./Esp_8266.h: 178:     _esp8266_print("\"\r\n");
  3101  001266  0EDE               	movlw	low STR_21
  3102  001268  6E02               	movwf	__esp8266_print@ptr^0,c
  3103  00126A  0E1F               	movlw	high STR_21
  3104  00126C  6E03               	movwf	(__esp8266_print@ptr+1)^0,c
  3105  00126E  ECD1  F009         	call	__esp8266_print	;wreg free
  3106  001272                     
  3107                           ;./Esp_8266.h: 179:     return _esp8266_waitResponse();;	Return value of _esp8266_connec
      +                          t is never used
  3108  001272  EC7B  F00C         	call	__esp8266_waitResponse	;wreg free
  3109  001276  0012               	return		;funcret
  3110  001278                     __end_of_esp8266_connect:
  3111                           	opt callstack 0
  3112                           
  3113 ;; *************** function __esp8266_waitResponse *****************
  3114 ;; Defined at:
  3115 ;;		line 36 in file "./Esp_8266.h"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  i               1   24[COMRAM] unsigned char 
  3120 ;;  strings        12    3[COMRAM] PTR const unsigned char 
  3121 ;;		 -> STR_11(7), STR_10(7), STR_9(10), STR_8(5), 
  3122 ;;		 -> STR_7(6), STR_6(3), 
  3123 ;;  so_far          6   15[COMRAM] unsigned char [6]
  3124 ;;  continue_loo    1   23[COMRAM] _Bool 
  3125 ;;  response        1   22[COMRAM] unsigned char 
  3126 ;;  received        1   21[COMRAM] unsigned char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      unsigned char 
  3129 ;; Registers used:
  3130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1
  3136 ;;      Params:         0       0       0
  3137 ;;      Locals:        22       0       0
  3138 ;;      Temps:          3       0       0
  3139 ;;      Totals:        25       0       0
  3140 ;;Total ram usage:       25 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    1
  3143 ;; This function calls:
  3144 ;;		_EUSART1_Read
  3145 ;; This function is called by:
  3146 ;;		_esp8266_isStarted
  3147 ;;		_esp8266_mode
  3148 ;;		_esp8266_connect
  3149 ;;		_esp8266_start
  3150 ;;		_esp8266_send
  3151 ;;		_esp8266_restart
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text17
  3156  0018F6                     __ptext17:
  3157                           	opt callstack 0
  3158  0018F6                     __esp8266_waitResponse:
  3159                           	opt callstack 28
  3160  0018F6                     
  3161                           ;./Esp_8266.h: 37:     unsigned char so_far[6] = {0,0,0,0,0,0};
  3162  0018F6  EE20  F010         	lfsr	2,__esp8266_waitResponse@so_far
  3163  0018FA  0E05               	movlw	5
  3164  0018FC                     u1121:
  3165  0018FC  6ADE               	clrf	postinc2,c
  3166  0018FE  06E8               	decf	wreg,f,c
  3167  001900  E2FD               	bc	u1121
  3168  001902                     
  3169                           ;./Esp_8266.h: 38:     unsigned const char lengths[6] = {2,5,4,9,6,6};;./Esp_8266.h: 39:
      +                               unsigned const char* strings[6] = {"OK", "ready", "FAIL", "no change", "Linked", "U
      +                          nlink"};
  3170  001902  EE20  F0C6         	lfsr	2,__esp8266_waitResponse@F6573
  3171  001906  EE10  F004         	lfsr	1,__esp8266_waitResponse@strings
  3172  00190A  0E0B               	movlw	11
  3173  00190C                     u1131:
  3174  00190C  CFDB FFE3          	movff	plusw2,plusw1
  3175  001910  06E8               	decf	wreg,f,c
  3176  001912  E2FC               	bc	u1131
  3177  001914                     
  3178                           ;./Esp_8266.h: 40:     unsigned const char responses[6] = {1, 2, 3, 4, 5, 6};;./Esp_8266
      +                          .h: 41:     unsigned char received;;./Esp_8266.h: 42:     unsigned char response;;./Esp_
      +                          8266.h: 43:     _Bool continue_loop = 1;
  3179  001914  0E01               	movlw	1
  3180  001916  6E18               	movwf	__esp8266_waitResponse@continue_loop^0,c
  3181                           
  3182                           ;./Esp_8266.h: 44:     while (continue_loop) {
  3183  001918  EFF6  F00C         	goto	l2288
  3184  00191C                     l2264:
  3185                           
  3186                           ;./Esp_8266.h: 45:         received = EUSART1_Read();
  3187  00191C  ECAB  F008         	call	_EUSART1_Read	;wreg free
  3188  001920  6E16               	movwf	__esp8266_waitResponse@received^0,c
  3189  001922                     
  3190                           ;./Esp_8266.h: 46:         for (unsigned char i = 0; i < 6; i++) {
  3191  001922  0E00               	movlw	0
  3192  001924  6E19               	movwf	__esp8266_waitResponse@i^0,c
  3193  001926                     l2272:
  3194                           
  3195                           ;./Esp_8266.h: 47:             if (strings[i][so_far[i]] == received) {
  3196  001926  5019               	movf	__esp8266_waitResponse@i^0,w,c
  3197  001928  0D02               	mullw	2
  3198  00192A  0E04               	movlw	low __esp8266_waitResponse@strings
  3199  00192C  24F3               	addwf	243,w,c
  3200  00192E  6ED9               	movwf	fsr2l,c
  3201  001930  0E00               	movlw	high __esp8266_waitResponse@strings
  3202  001932  20F4               	addwfc	prodh,w,c
  3203  001934  6EDA               	movwf	fsr2h,c
  3204  001936  CFDE F001          	movff	postinc2,??__esp8266_waitResponse
  3205  00193A  CFDD F002          	movff	postdec2,??__esp8266_waitResponse+1
  3206  00193E  0E10               	movlw	low __esp8266_waitResponse@so_far
  3207  001940  2419               	addwf	__esp8266_waitResponse@i^0,w,c
  3208  001942  6ED9               	movwf	fsr2l,c
  3209  001944  6ADA               	clrf	fsr2h,c
  3210  001946  0E00               	movlw	high __esp8266_waitResponse@so_far
  3211  001948  22DA               	addwfc	fsr2h,f,c
  3212  00194A  50DF               	movf	indf2,w,c
  3213  00194C  6E03               	movwf	(??__esp8266_waitResponse+2)^0,c
  3214  00194E  5003               	movf	(??__esp8266_waitResponse+2)^0,w,c
  3215  001950  2601               	addwf	??__esp8266_waitResponse^0,f,c
  3216  001952  0E00               	movlw	0
  3217  001954  2202               	addwfc	(??__esp8266_waitResponse+1)^0,f,c
  3218  001956  C001  FFF6         	movff	??__esp8266_waitResponse,tblptrl
  3219  00195A  C002  FFF7         	movff	??__esp8266_waitResponse+1,tblptrh
  3220  00195E                     	if	0	;tblptru may be non-zero
  3221  00195E                     	endif
  3222  00195E                     	if	0	;tblptru may be non-zero
  3223  00195E                     	endif
  3224  00195E  0008               	tblrd		*
  3225  001960  50F5               	movf	tablat,w,c
  3226  001962  1816               	xorwf	__esp8266_waitResponse@received^0,w,c
  3227  001964  A4D8               	btfss	status,2,c
  3228  001966  EFB7  F00C         	goto	u1141
  3229  00196A  EFB9  F00C         	goto	u1140
  3230  00196E                     u1141:
  3231  00196E  EFE5  F00C         	goto	l2282
  3232  001972                     u1140:
  3233  001972                     
  3234                           ;./Esp_8266.h: 48:                 so_far[i]++;
  3235  001972  0E10               	movlw	low __esp8266_waitResponse@so_far
  3236  001974  2419               	addwf	__esp8266_waitResponse@i^0,w,c
  3237  001976  6ED9               	movwf	fsr2l,c
  3238  001978  6ADA               	clrf	fsr2h,c
  3239  00197A  0E00               	movlw	high __esp8266_waitResponse@so_far
  3240  00197C  22DA               	addwfc	fsr2h,f,c
  3241  00197E  2ADF               	incf	indf2,f,c
  3242  001980                     
  3243                           ;./Esp_8266.h: 49:                 if (so_far[i] == lengths[i]) {
  3244  001980  0E10               	movlw	low __esp8266_waitResponse@so_far
  3245  001982  2419               	addwf	__esp8266_waitResponse@i^0,w,c
  3246  001984  6ED9               	movwf	fsr2l,c
  3247  001986  6ADA               	clrf	fsr2h,c
  3248  001988  0E00               	movlw	high __esp8266_waitResponse@so_far
  3249  00198A  22DA               	addwfc	fsr2h,f,c
  3250  00198C  50DF               	movf	indf2,w,c
  3251  00198E  6E01               	movwf	??__esp8266_waitResponse^0,c
  3252  001990  0EB3               	movlw	low __esp8266_waitResponse@lengths
  3253  001992  2419               	addwf	__esp8266_waitResponse@i^0,w,c
  3254  001994  6EF6               	movwf	tblptrl,c
  3255  001996  6AF7               	clrf	tblptrh,c
  3256  001998  0E1E               	movlw	high __esp8266_waitResponse@lengths
  3257  00199A  22F7               	addwfc	tblptrh,f,c
  3258  00199C                     	if	0	;There are less than 3 active tblptr bytes
  3259  00199C                     	endif
  3260  00199C  0008               	tblrd		*
  3261  00199E  50F5               	movf	tablat,w,c
  3262  0019A0  1801               	xorwf	??__esp8266_waitResponse^0,w,c
  3263  0019A2  A4D8               	btfss	status,2,c
  3264  0019A4  EFD6  F00C         	goto	u1151
  3265  0019A8  EFD8  F00C         	goto	u1150
  3266  0019AC                     u1151:
  3267  0019AC  EFED  F00C         	goto	l2284
  3268  0019B0                     u1150:
  3269  0019B0                     
  3270                           ;./Esp_8266.h: 50:                     response = responses[i];
  3271  0019B0  0EAD               	movlw	low __esp8266_waitResponse@responses
  3272  0019B2  2419               	addwf	__esp8266_waitResponse@i^0,w,c
  3273  0019B4  6EF6               	movwf	tblptrl,c
  3274  0019B6  6AF7               	clrf	tblptrh,c
  3275  0019B8  0E1E               	movlw	high __esp8266_waitResponse@responses
  3276  0019BA  22F7               	addwfc	tblptrh,f,c
  3277  0019BC                     	if	0	;There are less than 3 active tblptr bytes
  3278  0019BC                     	endif
  3279  0019BC  0008               	tblrd		*
  3280  0019BE  CFF5 F017          	movff	tablat,__esp8266_waitResponse@response
  3281  0019C2                     
  3282                           ;./Esp_8266.h: 51:                     continue_loop = 0;
  3283  0019C2  0E00               	movlw	0
  3284  0019C4  6E18               	movwf	__esp8266_waitResponse@continue_loop^0,c
  3285  0019C6  EFED  F00C         	goto	l2284
  3286  0019CA                     l2282:
  3287                           
  3288                           ;./Esp_8266.h: 54:                 so_far[i] = 0;
  3289  0019CA  0E10               	movlw	low __esp8266_waitResponse@so_far
  3290  0019CC  2419               	addwf	__esp8266_waitResponse@i^0,w,c
  3291  0019CE  6ED9               	movwf	fsr2l,c
  3292  0019D0  6ADA               	clrf	fsr2h,c
  3293  0019D2  0E00               	movlw	high __esp8266_waitResponse@so_far
  3294  0019D4  22DA               	addwfc	fsr2h,f,c
  3295  0019D6  0E00               	movlw	0
  3296  0019D8  6EDF               	movwf	indf2,c
  3297  0019DA                     l2284:
  3298                           
  3299                           ;./Esp_8266.h: 56:         }
  3300  0019DA  2A19               	incf	__esp8266_waitResponse@i^0,f,c
  3301  0019DC  0E05               	movlw	5
  3302  0019DE  6419               	cpfsgt	__esp8266_waitResponse@i^0,c
  3303  0019E0  EFF4  F00C         	goto	u1161
  3304  0019E4  EFF6  F00C         	goto	u1160
  3305  0019E8                     u1161:
  3306  0019E8  EF93  F00C         	goto	l2272
  3307  0019EC                     u1160:
  3308  0019EC                     l2288:
  3309                           
  3310                           ;./Esp_8266.h: 44:     while (continue_loop) {
  3311  0019EC  5018               	movf	__esp8266_waitResponse@continue_loop^0,w,c
  3312  0019EE  A4D8               	btfss	status,2,c
  3313  0019F0  EFFC  F00C         	goto	u1171
  3314  0019F4  EFFE  F00C         	goto	u1170
  3315  0019F8                     u1171:
  3316  0019F8  EF8E  F00C         	goto	l2264
  3317  0019FC                     u1170:
  3318  0019FC                     
  3319                           ;./Esp_8266.h: 58:     return response;
  3320  0019FC  5017               	movf	__esp8266_waitResponse@response^0,w,c
  3321  0019FE  0012               	return		;funcret
  3322  001A00                     __end_of__esp8266_waitResponse:
  3323                           	opt callstack 0
  3324                           
  3325 ;; *************** function _EUSART1_Read *****************
  3326 ;; Defined at:
  3327 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      unsigned char 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1
  3341 ;;      Params:         0       0       0
  3342 ;;      Locals:         0       0       0
  3343 ;;      Temps:          0       0       0
  3344 ;;      Totals:         0       0       0
  3345 ;;Total ram usage:        0 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		__esp8266_waitResponse
  3351 ;;		_esp8266_send
  3352 ;;		_getch
  3353 ;;		__esp8266_waitFor
  3354 ;;		_esp8266_IP
  3355 ;;		_esp8266_receive
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text18
  3360  001156                     __ptext18:
  3361                           	opt callstack 0
  3362  001156                     _EUSART1_Read:
  3363                           	opt callstack 28
  3364  001156                     l60:
  3365                           
  3366                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  3367  001156  AA9E               	btfss	158,5,c	;volatile
  3368  001158  EFB0  F008         	goto	u1091
  3369  00115C  EFB2  F008         	goto	u1090
  3370  001160                     u1091:
  3371  001160  EFAB  F008         	goto	l60
  3372  001164                     u1090:
  3373  001164                     
  3374                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  3375  001164  0E00               	movlw	0
  3376  001166  0100               	movlb	0	; () banked
  3377  001168  6F82               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  3378  00116A                     
  3379                           ; BSR set to: 0
  3380                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  3381  00116A  A2AB               	btfss	171,1,c	;volatile
  3382  00116C  EFBA  F008         	goto	u1101
  3383  001170  EFBC  F008         	goto	u1100
  3384  001174                     u1101:
  3385  001174  EFBE  F008         	goto	l2208
  3386  001178                     u1100:
  3387  001178                     
  3388                           ; BSR set to: 0
  3389                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  3390  001178  98AB               	bcf	171,4,c	;volatile
  3391                           
  3392                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  3393  00117A  88AB               	bsf	171,4,c	;volatile
  3394  00117C                     l2208:
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  3398  00117C  50AE               	movf	174,w,c	;volatile
  3399  00117E                     
  3400                           ; BSR set to: 0
  3401  00117E  0012               	return		;funcret
  3402  001180                     __end_of_EUSART1_Read:
  3403                           	opt callstack 0
  3404                           
  3405 ;; *************** function __esp8266_print *****************
  3406 ;; Defined at:
  3407 ;;		line 63 in file "./Esp_8266.h"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  ptr             2    1[COMRAM] PTR const unsigned char 
  3410 ;;		 -> STR_46(52), STR_45(52), STR_43(19), STR_41(11), 
  3411 ;;		 -> STR_40(6), STR_35(3), STR_34(12), esp8266_send@length_str(6), 
  3412 ;;		 -> STR_32(3), esp8266_start@port_str(5), STR_30(3), STR_29(4), 
  3413 ;;		 -> STR_28(4), STR_27(4), STR_26(14), STR_24(11), 
  3414 ;;		 -> STR_22(11), STR_21(4), STR_20(4), STR_19(11), 
  3415 ;;		 -> STR_18(3), STR_17(11), STR_15(3), STR_14(4), 
  3416 ;;		 -> STR_13(9), STR_12(5), 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1
  3428 ;;      Params:         2       0       0
  3429 ;;      Locals:         0       0       0
  3430 ;;      Temps:          0       0       0
  3431 ;;      Totals:         2       0       0
  3432 ;;Total ram usage:        2 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    1
  3435 ;; This function calls:
  3436 ;;		_EUSART1_Write
  3437 ;; This function is called by:
  3438 ;;		_esp8266_isStarted
  3439 ;;		_esp8266_mode
  3440 ;;		_esp8266_connect
  3441 ;;		_esp8266_start
  3442 ;;		_esp8266_send
  3443 ;;		_esp8266_restart
  3444 ;;		_esp8266_echoCmds
  3445 ;;		_esp8266_disconnect
  3446 ;;		_esp8266_IP
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450                           	psect	text19
  3451  0013A2                     __ptext19:
  3452                           	opt callstack 0
  3453  0013A2                     __esp8266_print:
  3454                           	opt callstack 28
  3455  0013A2                     
  3456                           ;./Esp_8266.h: 64:     while (*ptr != 0) {
  3457  0013A2  EFE7  F009         	goto	l2300
  3458  0013A6                     l2296:
  3459                           
  3460                           ;./Esp_8266.h: 65:         EUSART1_Write(*ptr++);
  3461  0013A6  C002  FFF6         	movff	__esp8266_print@ptr,tblptrl
  3462  0013AA  C003  FFF7         	movff	__esp8266_print@ptr+1,tblptrh
  3463  0013AE  6AF8               	clrf	tblptru,c
  3464  0013B0  0E01               	movlw	(high __ramtop+-1)
  3465  0013B2  64F7               	cpfsgt	tblptrh,c
  3466  0013B4  D003               	bra	u1187
  3467  0013B6  0008               	tblrd		*
  3468  0013B8  50F5               	movf	tablat,w,c
  3469  0013BA  D005               	bra	u1180
  3470  0013BC                     u1187:
  3471  0013BC  CFF6 FFE9          	movff	tblptrl,fsr0l
  3472  0013C0  CFF7 FFEA          	movff	tblptrh,fsr0h
  3473  0013C4  50EF               	movf	indf0,w,c
  3474  0013C6                     u1180:
  3475  0013C6  EC7E  F008         	call	_EUSART1_Write
  3476  0013CA  4A02               	infsnz	__esp8266_print@ptr^0,f,c
  3477  0013CC  2A03               	incf	(__esp8266_print@ptr+1)^0,f,c
  3478  0013CE                     l2300:
  3479                           
  3480                           ;./Esp_8266.h: 64:     while (*ptr != 0) {
  3481  0013CE  C002  FFF6         	movff	__esp8266_print@ptr,tblptrl
  3482  0013D2  C003  FFF7         	movff	__esp8266_print@ptr+1,tblptrh
  3483  0013D6  6AF8               	clrf	tblptru,c
  3484  0013D8  0E01               	movlw	(high __ramtop+-1)
  3485  0013DA  64F7               	cpfsgt	tblptrh,c
  3486  0013DC  D003               	bra	u1197
  3487  0013DE  0008               	tblrd		*
  3488  0013E0  50F5               	movf	tablat,w,c
  3489  0013E2  D005               	bra	u1190
  3490  0013E4                     u1197:
  3491  0013E4  CFF6 FFE9          	movff	tblptrl,fsr0l
  3492  0013E8  CFF7 FFEA          	movff	tblptrh,fsr0h
  3493  0013EC  50EF               	movf	indf0,w,c
  3494  0013EE                     u1190:
  3495  0013EE  0900               	iorlw	0
  3496  0013F0  A4D8               	btfss	status,2,c
  3497  0013F2  EFFD  F009         	goto	u1201
  3498  0013F6  EFFF  F009         	goto	u1200
  3499  0013FA                     u1201:
  3500  0013FA  EFD3  F009         	goto	l2296
  3501  0013FE                     u1200:
  3502  0013FE  0012               	return		;funcret
  3503  001400                     __end_of__esp8266_print:
  3504                           	opt callstack 0
  3505                           
  3506 ;; *************** function _EUSART1_Write *****************
  3507 ;; Defined at:
  3508 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  txData          1    wreg     unsigned char 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  txData          1    0[COMRAM] unsigned char 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1
  3522 ;;      Params:         0       0       0
  3523 ;;      Locals:         1       0       0
  3524 ;;      Temps:          0       0       0
  3525 ;;      Totals:         1       0       0
  3526 ;;Total ram usage:        1 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_putch
  3532 ;;		__esp8266_print
  3533 ;;		_esp8266_mode
  3534 ;;		_ESP8266_send_string
  3535 ;;		_esp8266_echoCmds
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text20
  3540  0010FC                     __ptext20:
  3541                           	opt callstack 0
  3542  0010FC                     _EUSART1_Write:
  3543                           	opt callstack 21
  3544                           
  3545                           ;incstack = 0
  3546                           ;EUSART1_Write@txData stored from wreg
  3547  0010FC  6E01               	movwf	EUSART1_Write@txData^0,c
  3548  0010FE                     l67:
  3549                           
  3550                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3551  0010FE  A89E               	btfss	158,4,c	;volatile
  3552  001100  EF84  F008         	goto	u801
  3553  001104  EF86  F008         	goto	u800
  3554  001108                     u801:
  3555  001108  EF7F  F008         	goto	l67
  3556  00110C                     u800:
  3557  00110C                     
  3558                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3559  00110C  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3560  001110  0012               	return		;funcret
  3561  001112                     __end_of_EUSART1_Write:
  3562                           	opt callstack 0
  3563                           
  3564 ;; *************** function _SYSTEM_Initialize *****************
  3565 ;; Defined at:
  3566 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg, status,2, status,0, cstack
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1
  3580 ;;      Params:         0       0       0
  3581 ;;      Locals:         0       0       0
  3582 ;;      Temps:          0       0       0
  3583 ;;      Totals:         0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:    2
  3587 ;; This function calls:
  3588 ;;		_EUSART1_Initialize
  3589 ;;		_EUSART2_Initialize
  3590 ;;		_OSCILLATOR_Initialize
  3591 ;;		_PIN_MANAGER_Initialize
  3592 ;;		_TMR1_Initialize
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text21
  3599  0010E6                     __ptext21:
  3600                           	opt callstack 0
  3601  0010E6                     _SYSTEM_Initialize:
  3602                           	opt callstack 28
  3603  0010E6                     
  3604                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3605  0010E6  EC5E  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  3606                           
  3607                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3608  0010EA  EC63  F008         	call	_OSCILLATOR_Initialize	;wreg free
  3609                           
  3610                           ;mcc_generated_files/mcc.c: 55:     TMR1_Initialize();
  3611  0010EE  EC89  F008         	call	_TMR1_Initialize	;wreg free
  3612  0010F2                     
  3613                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  3614  0010F2  ECDB  F008         	call	_EUSART1_Initialize	;wreg free
  3615  0010F6                     
  3616                           ;mcc_generated_files/mcc.c: 57:     EUSART2_Initialize();
  3617  0010F6  ECFB  F008         	call	_EUSART2_Initialize	;wreg free
  3618  0010FA  0012               	return		;funcret
  3619  0010FC                     __end_of_SYSTEM_Initialize:
  3620                           	opt callstack 0
  3621                           
  3622 ;; *************** function _TMR1_Initialize *****************
  3623 ;; Defined at:
  3624 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1
  3638 ;;      Params:         0       0       0
  3639 ;;      Locals:         0       0       0
  3640 ;;      Temps:          0       0       0
  3641 ;;      Totals:         0       0       0
  3642 ;;Total ram usage:        0 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_SYSTEM_Initialize
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text22
  3652  001112                     __ptext22:
  3653                           	opt callstack 0
  3654  001112                     _TMR1_Initialize:
  3655                           	opt callstack 29
  3656  001112                     
  3657                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  3658  001112  0E00               	movlw	0
  3659  001114  6ECC               	movwf	204,c	;volatile
  3660                           
  3661                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  3662  001116  0E00               	movlw	0
  3663  001118  6ECF               	movwf	207,c	;volatile
  3664                           
  3665                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  3666  00111A  0E00               	movlw	0
  3667  00111C  6ECE               	movwf	206,c	;volatile
  3668  00111E                     
  3669                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
  3670  00111E  CFCE F0BE          	movff	4046,_timer1ReloadVal	;volatile
  3671  001122  CFCF F0BF          	movff	4047,_timer1ReloadVal+1	;volatile
  3672  001126                     
  3673                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  3674  001126  909E               	bcf	158,0,c	;volatile
  3675                           
  3676                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x13;
  3677  001128  0E13               	movlw	19
  3678  00112A  6ECD               	movwf	205,c	;volatile
  3679  00112C  0012               	return		;funcret
  3680  00112E                     __end_of_TMR1_Initialize:
  3681                           	opt callstack 0
  3682                           
  3683 ;; *************** function _PIN_MANAGER_Initialize *****************
  3684 ;; Defined at:
  3685 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1
  3699 ;;      Params:         0       0       0
  3700 ;;      Locals:         0       0       0
  3701 ;;      Temps:          0       0       0
  3702 ;;      Totals:         0       0       0
  3703 ;;Total ram usage:        0 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_SYSTEM_Initialize
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text23
  3713  0012BC                     __ptext23:
  3714                           	opt callstack 0
  3715  0012BC                     _PIN_MANAGER_Initialize:
  3716                           	opt callstack 29
  3717  0012BC                     
  3718                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3719  0012BC  0E00               	movlw	0
  3720  0012BE  6E8D               	movwf	141,c	;volatile
  3721                           
  3722                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x04;
  3723  0012C0  0E04               	movlw	4
  3724  0012C2  6E8C               	movwf	140,c	;volatile
  3725                           
  3726                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x08;
  3727  0012C4  0E08               	movlw	8
  3728  0012C6  6E89               	movwf	137,c	;volatile
  3729                           
  3730                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3731  0012C8  0E00               	movlw	0
  3732  0012CA  6E8A               	movwf	138,c	;volatile
  3733                           
  3734                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x02;
  3735  0012CC  0E02               	movlw	2
  3736  0012CE  6E8B               	movwf	139,c	;volatile
  3737                           
  3738                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  3739  0012D0  0E06               	movlw	6
  3740  0012D2  6E96               	movwf	150,c	;volatile
  3741                           
  3742                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  3743  0012D4  0EC0               	movlw	192
  3744  0012D6  6E92               	movwf	146,c	;volatile
  3745                           
  3746                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFD;
  3747  0012D8  0EFD               	movlw	253
  3748  0012DA  6E93               	movwf	147,c	;volatile
  3749                           
  3750                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  3751  0012DC  0EBF               	movlw	191
  3752  0012DE  6E94               	movwf	148,c	;volatile
  3753                           
  3754                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xBA;
  3755  0012E0  0EBA               	movlw	186
  3756  0012E2  6E95               	movwf	149,c	;volatile
  3757                           
  3758                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x38;
  3759  0012E4  0E38               	movlw	56
  3760  0012E6  010F               	movlb	15	; () banked
  3761  0012E8  6F3B               	movwf	59,b	;volatile
  3762                           
  3763                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x3C;
  3764  0012EA  0E3C               	movlw	60
  3765  0012EC  6F3A               	movwf	58,b	;volatile
  3766                           
  3767                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3C;
  3768  0012EE  0E3C               	movlw	60
  3769  0012F0  6F39               	movwf	57,b	;volatile
  3770                           
  3771                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  3772  0012F2  0E06               	movlw	6
  3773  0012F4  6F3C               	movwf	60,b	;volatile
  3774                           
  3775                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x00;
  3776  0012F6  0E00               	movlw	0
  3777  0012F8  6F38               	movwf	56,b	;volatile
  3778                           
  3779                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  3780  0012FA  0E00               	movlw	0
  3781  0012FC  6E61               	movwf	97,c	;volatile
  3782  0012FE                     
  3783                           ; BSR set to: 15
  3784                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  3785  0012FE  8EF1               	bsf	241,7,c	;volatile
  3786  001300                     
  3787                           ; BSR set to: 15
  3788  001300  0012               	return		;funcret
  3789  001302                     __end_of_PIN_MANAGER_Initialize:
  3790                           	opt callstack 0
  3791                           
  3792 ;; *************** function _OSCILLATOR_Initialize *****************
  3793 ;; Defined at:
  3794 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1
  3808 ;;      Params:         0       0       0
  3809 ;;      Locals:         0       0       0
  3810 ;;      Temps:          0       0       0
  3811 ;;      Totals:         0       0       0
  3812 ;;Total ram usage:        0 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_SYSTEM_Initialize
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text24
  3822  0010C6                     __ptext24:
  3823                           	opt callstack 0
  3824  0010C6                     _OSCILLATOR_Initialize:
  3825                           	opt callstack 29
  3826  0010C6                     
  3827                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  3828  0010C6  0E60               	movlw	96
  3829  0010C8  6ED3               	movwf	211,c	;volatile
  3830                           
  3831                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x04;
  3832  0010CA  0E04               	movlw	4
  3833  0010CC  6ED2               	movwf	210,c	;volatile
  3834                           
  3835                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  3836  0010CE  0E00               	movlw	0
  3837  0010D0  6E9B               	movwf	155,c	;volatile
  3838  0010D2  0012               	return		;funcret
  3839  0010D4                     __end_of_OSCILLATOR_Initialize:
  3840                           	opt callstack 0
  3841                           
  3842 ;; *************** function _EUSART2_Initialize *****************
  3843 ;; Defined at:
  3844 ;;		line 66 in file "mcc_generated_files/eusart2.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;		None
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1
  3858 ;;      Params:         0       0       0
  3859 ;;      Locals:         0       0       0
  3860 ;;      Temps:          0       0       0
  3861 ;;      Totals:         0       0       0
  3862 ;;Total ram usage:        0 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    1
  3865 ;; This function calls:
  3866 ;;		_EUSART2_SetErrorHandler
  3867 ;;		_EUSART2_SetFramingErrorHandler
  3868 ;;		_EUSART2_SetOverrunErrorHandler
  3869 ;; This function is called by:
  3870 ;;		_SYSTEM_Initialize
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text25
  3875  0011F6                     __ptext25:
  3876                           	opt callstack 0
  3877  0011F6                     _EUSART2_Initialize:
  3878                           	opt callstack 28
  3879  0011F6                     
  3880                           ;mcc_generated_files/eusart2.c: 71:     BAUDCON2 = 0x08;
  3881  0011F6  0E08               	movlw	8
  3882  0011F8  6E70               	movwf	112,c	;volatile
  3883                           
  3884                           ;mcc_generated_files/eusart2.c: 74:     RCSTA2 = 0x90;
  3885  0011FA  0E90               	movlw	144
  3886  0011FC  6E71               	movwf	113,c	;volatile
  3887                           
  3888                           ;mcc_generated_files/eusart2.c: 77:     TXSTA2 = 0x24;
  3889  0011FE  0E24               	movlw	36
  3890  001200  6E72               	movwf	114,c	;volatile
  3891                           
  3892                           ;mcc_generated_files/eusart2.c: 80:     SPBRG2 = 0xCF;
  3893  001202  0ECF               	movlw	207
  3894  001204  6E75               	movwf	117,c	;volatile
  3895                           
  3896                           ;mcc_generated_files/eusart2.c: 83:     SPBRGH2 = 0x00;
  3897  001206  0E00               	movlw	0
  3898  001208  6E76               	movwf	118,c	;volatile
  3899  00120A                     
  3900                           ;mcc_generated_files/eusart2.c: 86:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultFr
      +                          amingErrorHandler);
  3901  00120A  0E00               	movlw	0
  3902  00120C  6E01               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  3903  00120E  0E00               	movlw	0
  3904  001210  6E02               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  3905  001212  EC4E  F008         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  3906  001216                     
  3907                           ;mcc_generated_files/eusart2.c: 87:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOv
      +                          errunErrorHandler);
  3908  001216  0E00               	movlw	0
  3909  001218  6E01               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  3910  00121A  0E00               	movlw	0
  3911  00121C  6E02               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3912  00121E  EC53  F008         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  3913  001222                     
  3914                           ;mcc_generated_files/eusart2.c: 88:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHand
      +                          ler);
  3915  001222  0E00               	movlw	0
  3916  001224  6E01               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  3917  001226  0E00               	movlw	0
  3918  001228  6E02               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  3919  00122A  EC49  F008         	call	_EUSART2_SetErrorHandler	;wreg free
  3920  00122E                     
  3921                           ;mcc_generated_files/eusart2.c: 90:     eusart2RxLastError.status = 0;
  3922  00122E  0E00               	movlw	0
  3923  001230  0100               	movlb	0	; () banked
  3924  001232  6F81               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  3925  001234                     
  3926                           ; BSR set to: 0
  3927  001234  0012               	return		;funcret
  3928  001236                     __end_of_EUSART2_Initialize:
  3929                           	opt callstack 0
  3930                           
  3931 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  3932 ;; Defined at:
  3933 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  3936 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1
  3948 ;;      Params:         2       0       0
  3949 ;;      Locals:         0       0       0
  3950 ;;      Temps:          0       0       0
  3951 ;;      Totals:         2       0       0
  3952 ;;Total ram usage:        2 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_EUSART2_Initialize
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text26
  3962  0010A6                     __ptext26:
  3963                           	opt callstack 0
  3964  0010A6                     _EUSART2_SetOverrunErrorHandler:
  3965                           	opt callstack 28
  3966  0010A6                     
  3967                           ;mcc_generated_files/eusart2.c: 162:     EUSART2_OverrunErrorHandler = interruptHandler;
  3968  0010A6  C001  F0BA         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  3969  0010AA  C002  F0BB         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  3970  0010AE  0012               	return		;funcret
  3971  0010B0                     __end_of_EUSART2_SetOverrunErrorHandler:
  3972                           	opt callstack 0
  3973                           
  3974 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  3975 ;; Defined at:
  3976 ;;		line 157 in file "mcc_generated_files/eusart2.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  3979 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1
  3991 ;;      Params:         2       0       0
  3992 ;;      Locals:         0       0       0
  3993 ;;      Temps:          0       0       0
  3994 ;;      Totals:         2       0       0
  3995 ;;Total ram usage:        2 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_EUSART2_Initialize
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text27
  4005  00109C                     __ptext27:
  4006                           	opt callstack 0
  4007  00109C                     _EUSART2_SetFramingErrorHandler:
  4008                           	opt callstack 28
  4009  00109C                     
  4010                           ;mcc_generated_files/eusart2.c: 158:     EUSART2_FramingErrorHandler = interruptHandler;
  4011  00109C  C001  F0BC         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  4012  0010A0  C002  F0BD         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  4013  0010A4  0012               	return		;funcret
  4014  0010A6                     __end_of_EUSART2_SetFramingErrorHandler:
  4015                           	opt callstack 0
  4016                           
  4017 ;; *************** function _EUSART2_SetErrorHandler *****************
  4018 ;; Defined at:
  4019 ;;		line 165 in file "mcc_generated_files/eusart2.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  4022 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1
  4034 ;;      Params:         2       0       0
  4035 ;;      Locals:         0       0       0
  4036 ;;      Temps:          0       0       0
  4037 ;;      Totals:         2       0       0
  4038 ;;Total ram usage:        2 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; This function calls:
  4041 ;;		Nothing
  4042 ;; This function is called by:
  4043 ;;		_EUSART2_Initialize
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text28
  4048  001092                     __ptext28:
  4049                           	opt callstack 0
  4050  001092                     _EUSART2_SetErrorHandler:
  4051                           	opt callstack 28
  4052  001092                     
  4053                           ;mcc_generated_files/eusart2.c: 166:     EUSART2_ErrorHandler = interruptHandler;
  4054  001092  C001  F0B8         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  4055  001096  C002  F0B9         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  4056  00109A  0012               	return		;funcret
  4057  00109C                     __end_of_EUSART2_SetErrorHandler:
  4058                           	opt callstack 0
  4059                           
  4060 ;; *************** function _EUSART1_Initialize *****************
  4061 ;; Defined at:
  4062 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1
  4076 ;;      Params:         0       0       0
  4077 ;;      Locals:         0       0       0
  4078 ;;      Temps:          0       0       0
  4079 ;;      Totals:         0       0       0
  4080 ;;Total ram usage:        0 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    1
  4083 ;; This function calls:
  4084 ;;		_EUSART1_SetErrorHandler
  4085 ;;		_EUSART1_SetFramingErrorHandler
  4086 ;;		_EUSART1_SetOverrunErrorHandler
  4087 ;; This function is called by:
  4088 ;;		_SYSTEM_Initialize
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text29
  4093  0011B6                     __ptext29:
  4094                           	opt callstack 0
  4095  0011B6                     _EUSART1_Initialize:
  4096                           	opt callstack 28
  4097  0011B6                     
  4098                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4099  0011B6  0E08               	movlw	8
  4100  0011B8  6EB8               	movwf	184,c	;volatile
  4101                           
  4102                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4103  0011BA  0E90               	movlw	144
  4104  0011BC  6EAB               	movwf	171,c	;volatile
  4105                           
  4106                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4107  0011BE  0E24               	movlw	36
  4108  0011C0  6EAC               	movwf	172,c	;volatile
  4109                           
  4110                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xCF;
  4111  0011C2  0ECF               	movlw	207
  4112  0011C4  6EAF               	movwf	175,c	;volatile
  4113                           
  4114                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
  4115  0011C6  0E00               	movlw	0
  4116  0011C8  6EB0               	movwf	176,c	;volatile
  4117  0011CA                     
  4118                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4119  0011CA  0E00               	movlw	0
  4120  0011CC  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4121  0011CE  0E00               	movlw	0
  4122  0011D0  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4123  0011D2  EC3F  F008         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4124  0011D6                     
  4125                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4126  0011D6  0E00               	movlw	0
  4127  0011D8  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4128  0011DA  0E00               	movlw	0
  4129  0011DC  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4130  0011DE  EC44  F008         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4131  0011E2                     
  4132                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4133  0011E2  0E00               	movlw	0
  4134  0011E4  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4135  0011E6  0E00               	movlw	0
  4136  0011E8  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4137  0011EA  EC3A  F008         	call	_EUSART1_SetErrorHandler	;wreg free
  4138  0011EE                     
  4139                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4140  0011EE  0E00               	movlw	0
  4141  0011F0  0100               	movlb	0	; () banked
  4142  0011F2  6F82               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4143  0011F4                     
  4144                           ; BSR set to: 0
  4145  0011F4  0012               	return		;funcret
  4146  0011F6                     __end_of_EUSART1_Initialize:
  4147                           	opt callstack 0
  4148                           
  4149 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4150 ;; Defined at:
  4151 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  4154 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		wreg, status,2, status,0
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1
  4166 ;;      Params:         2       0       0
  4167 ;;      Locals:         0       0       0
  4168 ;;      Temps:          0       0       0
  4169 ;;      Totals:         2       0       0
  4170 ;;Total ram usage:        2 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_EUSART1_Initialize
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text30
  4180  001088                     __ptext30:
  4181                           	opt callstack 0
  4182  001088                     _EUSART1_SetOverrunErrorHandler:
  4183                           	opt callstack 28
  4184  001088                     
  4185                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  4186  001088  C001  F0C2         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4187  00108C  C002  F0C3         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4188  001090  0012               	return		;funcret
  4189  001092                     __end_of_EUSART1_SetOverrunErrorHandler:
  4190                           	opt callstack 0
  4191                           
  4192 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4193 ;; Defined at:
  4194 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  4197 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1
  4209 ;;      Params:         2       0       0
  4210 ;;      Locals:         0       0       0
  4211 ;;      Temps:          0       0       0
  4212 ;;      Totals:         2       0       0
  4213 ;;Total ram usage:        2 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_EUSART1_Initialize
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text31
  4223  00107E                     __ptext31:
  4224                           	opt callstack 0
  4225  00107E                     _EUSART1_SetFramingErrorHandler:
  4226                           	opt callstack 28
  4227  00107E                     
  4228                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  4229  00107E  C001  F0C4         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4230  001082  C002  F0C5         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4231  001086  0012               	return		;funcret
  4232  001088                     __end_of_EUSART1_SetFramingErrorHandler:
  4233                           	opt callstack 0
  4234                           
  4235 ;; *************** function _EUSART1_SetErrorHandler *****************
  4236 ;; Defined at:
  4237 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  4240 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1
  4252 ;;      Params:         2       0       0
  4253 ;;      Locals:         0       0       0
  4254 ;;      Temps:          0       0       0
  4255 ;;      Totals:         2       0       0
  4256 ;;Total ram usage:        2 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_EUSART1_Initialize
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text32
  4266  001074                     __ptext32:
  4267                           	opt callstack 0
  4268  001074                     _EUSART1_SetErrorHandler:
  4269                           	opt callstack 28
  4270  001074                     
  4271                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  4272  001074  C001  F0C0         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4273  001078  C002  F0C1         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4274  00107C  0012               	return		;funcret
  4275  00107E                     __end_of_EUSART1_SetErrorHandler:
  4276                           	opt callstack 0
  4277                           
  4278                           	psect	rparam
  4279  0000                     tosu	equ	0xFFF
  4280                           tosh	equ	0xFFE
  4281                           tosl	equ	0xFFD
  4282                           stkptr	equ	0xFFC
  4283                           pclatu	equ	0xFFB
  4284                           pclath	equ	0xFFA
  4285                           pcl	equ	0xFF9
  4286                           tblptru	equ	0xFF8
  4287                           tblptrh	equ	0xFF7
  4288                           tblptrl	equ	0xFF6
  4289                           tablat	equ	0xFF5
  4290                           prodh	equ	0xFF4
  4291                           prodl	equ	0xFF3
  4292                           indf0	equ	0xFEF
  4293                           postinc0	equ	0xFEE
  4294                           postdec0	equ	0xFED
  4295                           preinc0	equ	0xFEC
  4296                           plusw0	equ	0xFEB
  4297                           fsr0h	equ	0xFEA
  4298                           fsr0l	equ	0xFE9
  4299                           wreg	equ	0xFE8
  4300                           indf1	equ	0xFE7
  4301                           postinc1	equ	0xFE6
  4302                           postdec1	equ	0xFE5
  4303                           preinc1	equ	0xFE4
  4304                           plusw1	equ	0xFE3
  4305                           fsr1h	equ	0xFE2
  4306                           fsr1l	equ	0xFE1
  4307                           bsr	equ	0xFE0
  4308                           indf2	equ	0xFDF
  4309                           postinc2	equ	0xFDE
  4310                           postdec2	equ	0xFDD
  4311                           preinc2	equ	0xFDC
  4312                           plusw2	equ	0xFDB
  4313                           fsr2h	equ	0xFDA
  4314                           fsr2l	equ	0xFD9
  4315                           status	equ	0xFD8


Data Sizes:
    Strings     325
    Constant    12
    Data        12
    BSS         67
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     29     122
    BANK1           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 52
		 -> dbuf(BANK0[32]), STR_46(CODE[52]), STR_45(CODE[52]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 52
		 -> dbuf(BANK0[32]), STR_46(CODE[52]), STR_45(CODE[52]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), STR_31(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> esp8266_send@length_str(BANK0[6]), esp8266_start@port_str(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> esp8266_send@length_str(BANK0[6]), esp8266_start@port_str(BANK0[5]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1911_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> esp8266_send@length_str(BANK0[6]), esp8266_start@port_str(BANK0[5]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> esp8266_send@length_str(BANK0[6]), esp8266_start@port_str(BANK0[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), STR_31(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_33(CODE[3]), STR_31(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    esp8266_send@data	PTR unsigned char  size(2) Largest target is 52
		 -> STR_46(CODE[52]), STR_45(CODE[52]), 

    esp8266_start@ip	PTR unsigned char  size(2) Largest target is 19
		 -> STR_43(CODE[19]), 

    esp8266_connect@pass	PTR unsigned char  size(2) Largest target is 11
		 -> STR_41(CODE[11]), 

    esp8266_connect@ssid	PTR unsigned char  size(2) Largest target is 6
		 -> STR_40(CODE[6]), 

    _esp8266_print@ptr	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_46(CODE[52]), STR_45(CODE[52]), STR_43(CODE[19]), STR_41(CODE[11]), 
		 -> STR_40(CODE[6]), STR_35(CODE[3]), STR_34(CODE[12]), esp8266_send@length_str(BANK0[6]), 
		 -> STR_32(CODE[3]), esp8266_start@port_str(BANK0[5]), STR_30(CODE[3]), STR_29(CODE[4]), 
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_26(CODE[14]), STR_24(CODE[11]), 
		 -> STR_22(CODE[11]), STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[11]), 
		 -> STR_18(CODE[3]), STR_17(CODE[11]), STR_15(CODE[3]), STR_14(CODE[4]), 
		 -> STR_13(CODE[9]), STR_12(CODE[5]), 

    _esp8266_waitResponse@strings	PTR const unsigned char [6] size(2) Largest target is 10
		 -> STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[10]), STR_8(CODE[5]), 
		 -> STR_7(CODE[6]), STR_6(CODE[3]), 

    _esp8266_waitResponse@F6573	PTR const unsigned char [6] size(2) Largest target is 10
		 -> STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[10]), STR_8(CODE[5]), 
		 -> STR_7(CODE[6]), STR_6(CODE[3]), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_esp8266_send
    _esp8266_start->_sprintf
    _esp8266_send->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _esp8266_mode->__esp8266_waitResponse
    _esp8266_isStarted->__esp8266_waitResponse
    _esp8266_connect->__esp8266_waitResponse
    __esp8266_print->_EUSART1_Write
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_esp8266_start
    _esp8266_start->_sprintf
    _esp8266_send->_sprintf

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               111   111      0   25779
                                             19 BANK0     10    10      0
                  _SYSTEM_Initialize
                    _esp8266_connect
                  _esp8266_isStarted
                       _esp8266_mode
                       _esp8266_send
                      _esp8266_start
 ---------------------------------------------------------------------------------
 (1) _esp8266_start                                        9     6      3    8819
                                             10 BANK0      9     6      3
                     __esp8266_print
              __esp8266_waitResponse
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _esp8266_send                                        10     8      2    9062
                                             93 COMRAM     2     0      2
                                             10 BANK0      8     8      0
                       _EUSART1_Read
                     __esp8266_print
              __esp8266_waitResponse
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    6194
                                             87 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5691
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6    5338
                                             61 COMRAM    18    12      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    3923
                                             29 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2873
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1279
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     878
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (1) _esp8266_mode                                         1     1      0    2400
                                             25 COMRAM     1     1      0
                      _EUSART1_Write
                     __esp8266_print
              __esp8266_waitResponse
 ---------------------------------------------------------------------------------
 (1) _esp8266_isStarted                                    0     0      0    2356
                     __esp8266_print
              __esp8266_waitResponse
 ---------------------------------------------------------------------------------
 (1) _esp8266_connect                                      4     0      4    2552
                                             25 COMRAM     4     0      4
                     __esp8266_print
              __esp8266_waitResponse
 ---------------------------------------------------------------------------------
 (2) __esp8266_waitResponse                               25    25      0     389
                                              0 COMRAM    25    25      0
                       _EUSART1_Read
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __esp8266_print                                       2     0      2    1967
                                              1 COMRAM     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                 _EUSART1_Initialize
                 _EUSART2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     294
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
   _esp8266_connect
     __esp8266_print
       _EUSART1_Write
     __esp8266_waitResponse
       _EUSART1_Read
   _esp8266_isStarted
     __esp8266_print
       _EUSART1_Write
     __esp8266_waitResponse
       _EUSART1_Read
   _esp8266_mode
     _EUSART1_Write
     __esp8266_print
       _EUSART1_Write
     __esp8266_waitResponse
       _EUSART1_Read
   _esp8266_send
     _EUSART1_Read
     __esp8266_print
       _EUSART1_Write
     __esp8266_waitResponse
       _EUSART1_Read
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
               _EUSART1_Write
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
     _strlen
   _esp8266_start
     __esp8266_print
       _EUSART1_Write
     __esp8266_waitResponse
       _EUSART1_Read
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
               _EUSART1_Write
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1D      7A       4       76.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D9       6        0.0%
DATA                 0      0      D9       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 26 07:02:16 2020

                                            l43 11F4                                              l60 1156  
                                            l70 1110                                              l64 117E  
                                            l91 1090                                              l67 10FE  
                                            l76 10B8                                              l94 107C  
                                            l88 1086                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                              __esp8266_print@ptr 0002  
                                           l113 10FA                                             l116 10D2  
                                           l155 1300                                             l248 1234  
                                           l505 1526                                             l290 10AE  
                                           l450 19FE                                             l179 112C  
                                           l293 109A                                             l509 15A4  
                                           l287 10A4                                             l519 14E6  
                                           l456 13FE                                             l472 10E4  
                                           l570 162E                              esp8266_start@F6608 006C  
                                           l484 1154                                             l572 166A  
                                           l487 1276                                             l567 15EC  
                                           l592 1CA8                                             l577 1CE2  
                                           l587 1EAA                                             l579 1CEA  
                                           l598 1458                                             l599 1460  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                                           u800 110C                                             u801 1108  
                                           u810 167E                                             u811 167A  
                                           u820 1690                                             u900 162E  
                                           u821 168C                                             u901 162A  
                                           u830 16B8                                             u910 163E  
                                           u831 16B4                                             u911 163A  
                                           u840 16EE                                             u921 180C  
                                           u841 16EA                                             u930 1830  
                                           u850 1332                                             u931 182C  
                                           u940 185A                                             u860 1342  
                                           u941 1856                                             u861 133E  
                                           u950 189A                                             u870 12BA  
                                           u951 1896                                             u871 12B6  
                                           u960 1754                                             u880 15B6  
                                           u961 1750                                             u857 1328  
                                           u881 15B2                                             u970 177E  
                                           u890 15D8                                             u971 177A  
                                           u891 15D4                                             u980 17AC  
                                           u981 17A8                                             u990 1CBA  
                                           u991 1CB6                               esp8266_start@port 00AF  
        __end_of_EUSART2_SetFramingErrorHandler 10A6         __size_of_EUSART2_SetFramingErrorHandler 000A  
                _EUSART2_SetFramingErrorHandler 109C                                 _timer1ReloadVal 00BE  
                                           _pad 15A6                                             prod 000FF3  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                    _TXSTA2bits 000F72                                    __CFG_LVP$OFF 000000  
                                          l1040 18D4                                            l1050 17E4  
                                          l2020 10FE                                            l2100 18CE  
                                          l1300 13A0                                            l2022 110C  
                                          l2110 177E                                            l2102 1736  
                                          l2030 1690                                            l1047 18F4  
                                          l2200 1156                                            l2112 17AC  
                                          l2104 1754                                            l2024 10B2  
                                          l2032 169A                                            l2040 1302  
                                          l2120 1CBA                                            l1057 1804  
                                          l2202 1164                                            l2114 17CC  
                                          l2106 175C                                            l2034 16B8  
                                          l2026 166C                                            l2050 1278  
                                          l1314 134E                                            l2042 130E  
                                          l2130 1D22                                            l2122 1CBC  
                                          l2212 109C                                            l2300 13CE  
                                          l2204 116A                                            l2116 17DE  
                                          l2108 1770                                            l2036 16EE  
                                          l2028 167E                                            l2052 1284  
                                          l2044 1312                                            l2060 15B6  
                                          l2132 1D28                                            l2140 1E0E  
                                          l2124 1CD6                                            l2220 1408  
                                          l2230 11D6                                            l2214 10A6  
                                          l2206 1178                                            l2054 1296  
                                          l2046 1342                                            l2070 160C  
                                          l2062 15CA                                            l2142 1E20  
                                          l2150 1E82                                            l2134 1D9E  
                                          l2126 1D12                                            l2118 1CAA  
                                          l2222 1416                                            l2310 138E  
                                          l2302 1350                                            l2232 11E2  
                                          l2216 1092                                            l2240 10C6  
                                          l2208 117C                                            l2080 1806  
                                          l2056 129A                                            l2072 1610  
                                          l2064 15D8                                            l2144 1E3E  
                                          l2136 1DA4                                            l2128 1D1A  
                                          l2160 1B5C                                            l2224 143C  
                                          l2304 1362                                            l2400 15A0  
                                          l2234 11EE                                            l2226 11B6  
                                          l2250 120A                                            l2242 1112  
                                          l2314 10E6                                            l2090 185A  
                                          l2082 1812                                            l2074 163E  
                                          l2066 15E4                                            l2058 15A6  
                                          l2146 1E58                                            l2138 1DAA  
                                          l2170 1C06                                            l2162 1B60  
                                          l2154 1B18                                            l2218 1400  
                                          l2306 136A                                            l2410 149E  
                                          l2228 11CA                                            l2252 1216  
                                          l2236 12BC                                            l2244 111E  
                                          l2316 10F2                                            l2260 1902  
                                          l2092 186C                                            l2084 1830  
                                          l2076 1652                                            l2068 15F8  
                                          l2148 1E72                                            l2172 1C2A  
                                          l2180 1C58                                            l2164 1B84  
                                          l2156 1B3C                                            l2308 1372  
                                          l2420 14E2                                            l2412 14AA  
                                          l2404 1462                                            l1285 1734  
                                          l1293 12BA                                            l2254 1222  
                                          l2238 12FE                                            l2246 1126  
                                          l2318 10F6                                            l2262 1914  
                                          l2094 189A                                            l2086 1838  
                                          l2182 1C66                                            l2174 1C38  
                                          l2166 1BCE                                            l2158 1B4A  
                                          l2414 14B6                                            l2406 146E  
                                          l2256 122E                                            l2248 11F6  
                                          l2280 19C2                                            l2272 1926  
                                          l2264 191C                                            l2360 10D4  
                                          l2096 18BA                                            l2088 184C  
                                          l2176 1C4C                                            l2416 14C2  
                                          l2408 1482                                            l2194 107E  
                                          l2290 19FC                                            l2274 1972  
                                          l2282 19CA                                            l2266 1922  
                                          l2258 18F6                                            l2362 10E0  
                                          l2370 1144                                            l2098 18BC  
                                          l2186 1C72                                            l2418 14D6  
                                          l2196 1088                                            l2284 19DA  
                                          l2276 1980                                            l2372 1150  
                                          l2188 1C96                                            l2380 14EC  
                                          l2198 1074                                            l2294 13A2  
                                          l2286 19DC                                            l2278 19B0  
                                          l2374 1236                                            l2366 1130  
                                          l2390 1556                                            l2382 14F8  
                                          l2296 13A6                                            l2288 19EC  
                                          l2376 1272                                            l2368 113C  
                                          l2392 1570                                            l2384 150A  
                                          l2800 1A20                                            l2298 13CA  
                                          l2394 157C                                            l2386 151A  
                                          l2810 1A78                                            l2802 1A34  
                                          l2396 1588                                            l2388 154A  
                                          l2820 1ADE                                            l2812 1A8A  
                                          l2804 1A46                                            l2822 1AF6  
                                          l2814 1AA2                                            l2806 1A5A  
                                          l2816 1ABA                                            l2808 1A6C  
                                          l2818 1AC6                                            l2790 1A04  
                                          ?_pad 0013                                            l2792 1A04  
                                          l2794 1A04                                            l2796 1A08  
                                          l2788 1A00                                            l2798 1A0E  
                                          STR_1 1F98                                            STR_2 1FCA  
                                          STR_3 1FD9                                            STR_4 1FB4  
                                          STR_5 1FD4                                            STR_6 1FF8  
                                          STR_7 1FBA                                            STR_8 1FCF  
                                          STR_9 1F85                                            u1000 1CD6  
                                          u1001 1CD2                                            u1010 1E20  
                                          u1011 1E1C                                            u1100 1178  
                                          u1020 1E3E                                            u1101 1174  
                                          u1021 1E3A                                            u1030 1E58  
                                          u1110 1458                                            u1031 1E54  
                                          u1111 1454                                            u1200 13FE  
                                          u1040 1E72                                            u1201 13FA  
                                          u1121 18FC                                            u1041 1E6E  
                                          u1050 1E82                                            u1131 190C  
                                          u1051 1E7E                                            u1140 1972  
                                          u1060 1B3C                                            u1141 196E  
                                          u1061 1B38                                            u1150 19B0  
                                          u1070 1B84                                            u1151 19AC  
                                          u1071 1B80                                            u1160 19EC  
                                          u1080 1C2A                                            u1240 150A  
                                          u1161 19E8                                            u1081 1C26  
                                          u1241 1506                                            u1090 1164  
                                          u1170 19FC                                            u1091 1160  
                                          u1171 19F8                                            u1251 1550  
                                          u1180 13C6                                            u1260 159C  
                                          u1261 1598                                            _LATA 000F89  
                                          u1190 13EE                                            _LATB 000F8A  
                                          u1271 1468                                            _LATC 000F8B  
                                          u1280 14D6                                            _LATD 000F8C  
                                          u1281 14D2                                            u2217 1A16  
                                          _LATE 000F8D                                            u1187 13BC  
                                          u2227 1A3C                                            u1197 13E4  
                                          u2237 1A62                                            u2247 1A80  
                                          u2257 1A96                                            u2267 1AAE  
                                          u2277 1AD2                                            u2287 1AEA  
                                          u2297 1B02                                            _TMR1 000FCE  
                                          _WPUB 000F61                                   _EUSART1_Write 10FC  
                                          _Time 0075                                            _dbuf 0083  
                                          _main 1A00                                   ?_EUSART1_Read 0001  
                                          _prec 007D                                            _nout 0079  
                                          pad@i 001A                                            pad@p 0017  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 001C  
                                          fsr2l 000FD9                                            _utoa 1CAA  
                                 __CFG_BORV$190 000000                                            prodl 000FF3  
                                          start 0000                                   __CFG_IESO$OFF 000000  
                                  ___param_bank 000000                                ?_esp8266_connect 001A  
                                         ??_pad 0019                  __size_of_OSCILLATOR_Initialize 000E  
                 __end_of_OSCILLATOR_Initialize 10D4                                           ?_main 0001  
                                         STR_10 1FA0                                           STR_11 1FA7  
                                         STR_20 1FE2                                           STR_12 1FC5  
                                         STR_21 1FDE                                           STR_13 1F8F  
                                         STR_30 1FF2                                           STR_14 1FE6  
                                         STR_22 1F4E                                           STR_31 1FFB  
                                         STR_32 1FC2                                           STR_40 1F7F  
                                         STR_24 1F59                                           STR_33 1FFB  
                                         STR_41 1F7A                                           STR_17 1F6F  
                                         STR_18 1FC2                                           STR_42 1FEA  
                                         STR_34 1F42                                           STR_26 1F34  
                                         STR_35 1FC2                                           STR_27 1FEA  
                                         STR_19 1F64                                           STR_43 1F21  
                                         STR_44 1FF5                                           STR_28 1FEE  
                                         STR_36 1FAE                                           STR_29 1FE2  
                                         STR_37 1FC0                                           STR_45 1EED  
                                         STR_46 1EB9                                           ?_utoa 001E  
                               __end_of___lodiv 18F6                                           _T1CON 000FCD  
                               __end_of___lomod 1806                                  __CFG_DEBUG$OFF 000000  
                                  vfpfcnvrt@fmt 0040                                    vfpfcnvrt@llu 0048  
                                         _TMR1H 000FCF                                           _TMR1L 000FCE  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                           __esp8266_waitResponse 18F6  
                                __CFG_EBTR0$OFF 000000                                  __CFG_FCMEN$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                                           _flags 007F  
                                         _fputc 166C                                           _fputs 1278  
                            __CFG_MCLRE$INTMCLR 000000                                           pad@fp 0013  
                                         _width 007B                                           _putch 10B0  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 112E  
                                __CFG_BOREN$OFF 000000                                           tablat 000FF5  
                                ??_EUSART1_Read 0001                                           plusw1 000FE3  
                                         plusw2 000FDB                                           utoa@d 0020  
                                         utoa@i 003C                                           utoa@n 0034  
                                         utoa@p 0030                                           utoa@w 0032  
                                         status 000FD8                                 __end_of_sprintf 13A2  
                                __CFG_HFOFST$ON 000000                                ___lodiv@dividend 0001  
            _EUSART1_DefaultFramingErrorHandler 000000                                  __CFG_PBADEN$ON 000000  
                               __initialization 1180                      __end_of_EUSART1_Initialize 11F6  
                                  __end_of_main 1B18                                    __end_of_utoa 1EAC  
                                        ??_main 00B6                                          ??_utoa 0028  
                                 __activetblptr 000002                     _EUSART2_DefaultErrorHandler 000000  
                              ___lodiv@quotient 0011                      __end_of_EUSART2_Initialize 1236  
                                        ?_fputc 0003                                          ?_fputs 000C  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _ANSELD 000F3B                                          _ANSELE 000F3C  
                                        _T1GCON 000FCC                           __size_of_esp8266_mode 0028  
                         __size_of_esp8266_send 0086                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAE                                          _RCREG2 000F74  
                                        _RCSTA1 000FAB                                          _RCSTA2 000F71  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _SPBRG2 000F75                                          _TXREG1 000FAD  
                                        _TXREG2 000F73                                  __esp8266_print 13A2  
                                        _TXSTA1 000FAC                                          _TXSTA2 000F72  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0056  
                                __CFG_STVREN$ON 000000                                       ??___lodiv 0011  
                                     ??___lomod 0011                        ?_EUSART1_SetErrorHandler 0001  
                                        clear_0 11A6                     _EUSART2_FramingErrorHandler 00BC  
                                        pad@buf 0015                ??_EUSART1_SetOverrunErrorHandler 0003  
               ?_EUSART1_SetOverrunErrorHandler 0001                                          _strlen 1302  
                                        fputc@c 0003                          ?__esp8266_waitResponse 0001  
                                        fputs@c 0010                                          fputs@i 0011  
                                        fputs@s 000C                                    _esp8266_mode 112E  
                                  _esp8266_send 1462                                    __mediumconst 1EAC  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 1462  
                               ??_EUSART1_Write 0001                                          utoa@fp 001E  
                                     ??_sprintf 005E                                ?_TMR1_Initialize 0001  
                        __end_of__esp8266_print 1400                               _SYSTEM_Initialize 10E6  
                                    __accesstop 0060                         __end_of__initialization 11AC  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
           __esp8266_waitResponse@continue_loop 0018                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 10BA                             ??_SYSTEM_Initialize 0003  
                                 __end_of_fputc 1736                                   __end_of_fputs 12BC  
                                 __end_of_putch 10BA                            __end_of_EUSART1_Read 1180  
                             _esp8266_isStarted 10D4                        ?_EUSART2_SetErrorHandler 0001  
                             _esp8266_send$2273 00B3                              ?_esp8266_isStarted 0001  
                                       ??_fputc 0007                       __end_of_SYSTEM_Initialize 10FC  
                                       ??_fputs 0010                                         ??_putch 0002  
                                    __pbssBANK0 0060                                 ?__esp8266_print 0002  
                               __CFG_PLLCFG$OFF 000000         __end_of__esp8266_waitResponse@responses 1EB3  
               __esp8266_waitResponse@responses 1EAD                             ??_esp8266_isStarted 001A  
              ??_EUSART2_SetFramingErrorHandler 0003                 ?_EUSART2_SetFramingErrorHandler 0001  
         __end_of__esp8266_waitResponse@lengths 1EB9                   __esp8266_waitResponse@lengths 1EB3  
               __end_of_EUSART1_SetErrorHandler 107E                              __CFG_CCP2MX$PORTC1 000000  
                 __esp8266_waitResponse@strings 0004                              __CFG_CCP3MX$PORTB5 000000  
                     __end_of_esp8266_isStarted 10E6                                         ?_strlen 0001  
        __end_of_EUSART1_SetFramingErrorHandler 1088         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 107E                          __size_of_esp8266_start 00BE  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0192  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SPBRGH2 000F76                                ___lomod@dividend 0001  
                         esp8266_start@port_str 00B0                           esp8266_start@protocol 00B5  
                       __esp8266_waitResponse@i 0019                                 __CFG_PWRTEN$OFF 000000  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___lodiv 1806                                         ___lomod 1736  
                                     ?_vfprintf 0050                                         __pcinit 1180  
               __end_of_EUSART2_SetErrorHandler 109C                                         __ramtop 0200  
                                       __ptext0 1A00                                         __ptext1 14E8  
                                       __ptext2 1462                                         __ptext3 1350  
                                       __ptext4 1400                                         __ptext5 1B18  
                                       __ptext6 1CAA                                         __ptext7 15A6  
                                       __ptext8 1302                                         __ptext9 1278  
                               __size_of_strlen 004E                                       _T1CONbits 000FCD  
            _EUSART2_DefaultOverrunErrorHandler 000000                           _OSCILLATOR_Initialize 10C6  
                      __size_of_esp8266_connect 0042                                    __size_of_pad 00C6  
                            _EUSART1_Initialize 11B6                        ??_PIN_MANAGER_Initialize 0001  
                    __size_of_SYSTEM_Initialize 0016                                         _sprintf 1350  
                          end_of_initialization 11AC                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0005                                   __Lmediumconst 1EAC  
                   _EUSART1_OverrunErrorHandler 00C2                                         fputs@fp 000E  
                                 _esp8266_start 14E8                                esp8266_mode@mode 001A  
                            _EUSART2_Initialize 11F6                               __end_of_vfpfcnvrt 1CAA  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 002A  
                              esp8266_send@data 005E                                      ??_vfprintf 0056  
                          ??_EUSART1_Initialize 0003                             ?_EUSART2_Initialize 0001  
                                       strlen@a 0003                                         strlen@s 0001  
                       ??__esp8266_waitResponse 0001                                       _PORTBbits 000F81  
                    __size_of_esp8266_isStarted 0012                                       _PORTDbits 000F83  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0001  
                          ??_EUSART2_Initialize 0003                                    _EUSART1_Read 1156  
                                ?_esp8266_start 00AD                                     vfpfcnvrt@ap 0042  
                                   vfpfcnvrt@fp 003E                          ?_OSCILLATOR_Initialize 0001  
                           esp8266_connect@pass 001C                             esp8266_connect@ssid 001A  
                                __end_of_strlen 1350                             start_initialization 1180  
                               ___lodiv@divisor 0009                                 ___lodiv@counter 0019  
                              ??__esp8266_print 0004                 __size_of_PIN_MANAGER_Initialize 0046  
                                   __end_of_pad 166C                          esp8266_send@length_str 00AD  
                                   putch@txData 0002                               ??_esp8266_connect 001E  
                         __end_of_EUSART1_Write 1112                __size_of_EUSART2_SetErrorHandler 000A  
        __end_of_EUSART2_SetOverrunErrorHandler 10B0         __size_of_EUSART2_SetOverrunErrorHandler 000A  
                _EUSART2_SetOverrunErrorHandler 10A6                        __size_of_TMR1_Initialize 001C  
                                   vfprintf@fmt 0052                                     __pdataBANK0 00C6  
                                      ??_strlen 0003                                   __pcstackBANK0 00A3  
                __esp8266_waitResponse@received 0016                                 ??_esp8266_start 005E  
              ??_EUSART1_SetFramingErrorHandler 0003                 ?_EUSART1_SetFramingErrorHandler 0001  
                                     __pnvBANK0 00B8                  __esp8266_waitResponse@response 0017  
                  __esp8266_waitResponse@so_far 0010                          _PIN_MANAGER_Initialize 12BC  
                                 __pmediumconst 1EAC                                        ?___lodiv 0001  
                                      ?___lomod 0001                                __CFG_PRICLKEN$ON 000000  
                             __size_of_vfprintf 0062                                 ___lomod@divisor 0009  
                               ___lomod@counter 0011                                        _BAUDCON1 000FB8  
                                      _BAUDCON2 000F70              _EUSART1_DefaultOverrunErrorHandler 000000  
                          _EUSART1_ErrorHandler 00C0                         _EUSART1_SetErrorHandler 1074  
                                      ?_sprintf 0058                                  __size_of_fputc 00CA  
                                __size_of_fputs 0044                                  __size_of_putch 000A  
                                      _LATAbits 000F89         EUSART2_SetErrorHandler@interruptHandler 0001  
       EUSART1_SetErrorHandler@interruptHandler 0001                                        _LATBbits 000F8A  
                                      _LATDbits 000F8C                                        _LATEbits 000F8D  
                                      _PIR1bits 000F9E                                        _PIR3bits 000FA4  
                              __CFG_WDTPS$32768 000000                                       _vfpfcnvrt 1B18  
                             ??_TMR1_Initialize 0001                  __size_of__esp8266_waitResponse 010A  
                               esp8266_start@ip 00AD                   __end_of__esp8266_waitResponse 1A00  
                                 ?_esp8266_mode 0001                                   ?_esp8266_send 005E  
                                   _INTCON2bits 000FF1                                        _Distance 0071  
                                     copy_data0 1194                         _EUSART2_SetErrorHandler 1092  
                   _EUSART2_OverrunErrorHandler 00BA                                        __Hrparam 0000  
                                    vfprintf@ap 0054                                        __Lrparam 0000  
                                    vfprintf@fp 0050                               __CFG_P2BMX$PORTD2 000000  
                   __esp8266_waitResponse@F6570 0066                     __esp8266_waitResponse@F6573 00C6  
                       ??_OSCILLATOR_Initialize 0001                                __size_of___lodiv 00F0  
                   __size_of_EUSART1_Initialize 0040                                __size_of___lomod 00D0  
                                    ?_vfpfcnvrt 003E                                 _esp8266_connect 1236  
                                ??_esp8266_mode 001A                                  ??_esp8266_send 0060  
                     ??_EUSART1_SetErrorHandler 0003                     _EUSART1_DefaultErrorHandler 000000  
                                    sprintf@fmt 005A                            _EUSART2_ErrorHandler 00B8  
                                      __ptext10 166C                                        __ptext11 10B0  
                                      __ptext20 10FC                                        __ptext12 1736  
                                      __ptext21 10E6                                        __ptext13 1806  
                                    _T1GCONbits 000FCC                                        __ptext30 1088  
                                      __ptext22 1112                                        __ptext14 112E  
                                      __ptext31 107E                                        __ptext23 12BC  
                                      __ptext15 10D4                                        __ptext32 1074  
                                      __ptext24 10C6                                        __ptext16 1236  
                                      __ptext25 11F6                                        __ptext17 18F6  
                                      __ptext26 10A6                                        __ptext18 1156  
                                      __ptext27 109C                                        __ptext19 13A2  
                                      __ptext28 1092                                        __ptext29 11B6  
                              __size_of_sprintf 0052                     __size_of_EUSART2_Initialize 0040  
                                 __size_of_main 0118              _EUSART2_DefaultFramingErrorHandler 000000  
                                 __size_of_utoa 0202  EUSART2_SetOverrunErrorHandler@interruptHandler 0001  
EUSART1_SetOverrunErrorHandler@interruptHandler 0001                                        _vfprintf 1400  
                   _EUSART1_FramingErrorHandler 00C4                ??_EUSART2_SetOverrunErrorHandler 0003  
               ?_EUSART2_SetOverrunErrorHandler 0001                                      _INTCONbits 000FF2  
                     ??_EUSART2_SetErrorHandler 0003                                       sprintf@ap 00A5  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 1092  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 1088  
                                    _RCSTA1bits 000FAB                                      _RCSTA2bits 000F71  
                             esp8266_send@F6612 0060                         __end_of_esp8266_connect 1278  
EUSART2_SetFramingErrorHandler@interruptHandler 0001  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                                   ??_vfpfcnvrt 0044                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 0082                                        sprintf@f 00A7  
                                      sprintf@s 0058                               __CFG_T3CMX$PORTC0 000000  
                __end_of_PIN_MANAGER_Initialize 1302                              _eusart2RxLastError 0081  
                             __CFG_FOSC$INTIO67 000000                           __end_of_esp8266_start 15A6  
                       __size_of__esp8266_print 005E                            __end_of_esp8266_mode 1156  
                          __end_of_esp8266_send 14E8                                 _TMR1_Initialize 1112  
